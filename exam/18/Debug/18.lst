
18.elf:     file format elf32-littlearm
18.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00006c59

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000068c0 memsz 0x000068c0 flags r--
    LOAD off    0x00006c00 vaddr 0x00006c00 paddr 0x00006c00 align 2**16
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00006c10 vaddr 0x00006c10 paddr 0x00006c10 align 2**16
         filesz 0x000046a4 memsz 0x000046a4 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x0000b2b4 align 2**16
         filesz 0x0000007c memsz 0x000003a8 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts     000000c0  00006800  00006800  00006800  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flash_config   00000010  00006c00  00006c00  00006c00  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text           00004694  00006c10  00006c10  00006c10  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM            00000008  0000b2a4  0000b2a4  0000b2a4  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array     00000004  0000b2ac  0000b2ac  0000b2ac  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array     00000004  0000b2b0  0000b2b0  0000b2b0  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .mtb            00000000  20000400  20000400  0001047c  2**0  CONTENTS
  7 .data           0000007c  20000400  0000b2b4  00010400  2**2  CONTENTS, ALLOC, LOAD, DATA
  8 .bss            00000028  2000047c  0000b330  0001047c  2**2  ALLOC
  9 .heap           00000204  200004a4  0000b358  0001047c  2**0  ALLOC
 10 .stack          00000100  200006a8  0000b55c  0001047c  2**0  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0001047c  2**0  CONTENTS, READONLY
 12 .debug_info     0000897d  00000000  00000000  000104a4  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev   00001a35  00000000  00000000  00018e21  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc      00002756  00000000  00000000  0001a856  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges  00000300  00000000  00000000  0001cfb0  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges   00000240  00000000  00000000  0001d2b0  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro    0000f452  00000000  00000000  0001d4f0  2**0  CONTENTS, READONLY, DEBUGGING
 18 .debug_line     00002dac  00000000  00000000  0002c942  2**0  CONTENTS, READONLY, DEBUGGING
 19 .debug_str      0004eeb0  00000000  00000000  0002f6ee  2**0  CONTENTS, READONLY, DEBUGGING
 20 .comment        0000007e  00000000  00000000  0007e59e  2**0  CONTENTS, READONLY
 21 .debug_frame    00000c5c  00000000  00000000  0007e61c  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00006800 l    d  .interrupts	00000000 .interrupts
00006c00 l    d  .flash_config	00000000 .flash_config
00006c10 l    d  .text	00000000 .text
0000b2a4 l    d  .ARM	00000000 .ARM
0000b2ac l    d  .init_array	00000000 .init_array
0000b2b0 l    d  .fini_array	00000000 .fini_array
20000400 l    d  .mtb	00000000 .mtb
20000400 l    d  .data	00000000 .data
2000047c l    d  .bss	00000000 .bss
200004a4 l    d  .heap	00000000 .heap
200006a8 l    d  .stack	00000000 .stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_MKL36Z4.o
00000000 l    df *ABS*	00000000 crtstuff.c
0000b28c l     O .text	00000000 __EH_FRAME_BEGIN__
00006c10 l     F .text	00000000 __do_global_dtors_aux
2000047c l       .bss	00000001 completed.8654
0000b2b0 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00006c38 l     F .text	00000000 frame_dummy
20000480 l       .bss	00000018 object.8659
0000b2ac l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 _udivsi3.o
00006ca8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00006dbc l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 _clzdi2.o
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 system_MKL36Z4.c
00000000 l    df *ABS*	00000000 tm1637.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 printf.c
0000a20c l     F .text	0000002a printk_putc
0000a236 l     F .text	00000084 printk_mknumstr
0000a2ba l     F .text	0000001e printk_pad_zero
0000a2d8 l     F .text	0000001e printk_pad_space
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 d:/嵌入式技术app/ahl-gec-ide(4.11)/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crti.o
00000000 l    df *ABS*	00000000 d:/嵌入式技术app/ahl-gec-ide(4.11)/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crtn.o
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 impure.c
2000041c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 
0000b2b0 l       .init_array	00000000 __init_array_end
0000b2ac l       .init_array	00000000 __preinit_array_end
0000b2ac l       .init_array	00000000 __init_array_start
0000b2ac l       .init_array	00000000 __preinit_array_start
000094dc g     F .text	00000038 .hidden __aeabi_dcmpun
200004a8 g       .heap	00000000 __HeapBase
00006fd4 g     F .text	00000012 .hidden __aeabi_dcmple
00009e9c g     F .text	00000008 flash_read_physical
0000aa10 g     F .text	00000110 log
00008758 g     F .text	00000078 .hidden __eqdf2
20000400 g       .data	00000000 __data_start__
00000100 g       *ABS*	00000000 STACK_SIZE
00006ca0  w    F .text	00000006 I2C0_IRQHandler
0000003e g       *ABS*	00000000 GEC_USER_SECTOR_END
00006ca0  w    F .text	00000006 HardFault_Handler
00006ca0  w    F .text	00000006 SysTick_Handler
20000498 g     O .bss	00000002 DIO_PIN
00006ca0  w    F .text	00000006 PendSV_Handler
00006ca0  w    F .text	00000006 NMI_Handler
0000b2ac g       .ARM	00000000 __exidx_end
00006ca0  w    F .text	00000006 PORTC_PORTD_IRQHandler
00006ca0  w    F .text	00000006 I2C1_IRQHandler
00006ca0  w    F .text	00000006 UART1_IRQHandler
000087d0 g     F .text	000000c8 .hidden __gtdf2
0000aedc g     F .text	0000000c __errno
0000b2b4 g       .fini_array	00000000 __etext
00006ca0  w    F .text	00000006 DMA2_IRQHandler
00009d7c g     F .text	00000030 Test_Digitaltube
00006ca0  w    F .text	00000006 TPM0_IRQHandler
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmple
00006ca0  w    F .text	00000006 I2S0_IRQHandler
00006ca0  w    F .text	00000006 LLWU_IRQHandler
0000001a g       *ABS*	00000000 GEC_USER_SECTOR_START
00006ca0  w    F .text	00000006 TSI0_IRQHandler
00009928 g     F .text	000000a4 adc_init_inner
0000a1e4 g     F .text	00000028 UART0_IRQHandler
000099f4 g     F .text	00000084 TempRegression
0000aee8 g     F .text	00000012 memcpy
00006f94 g     F .text	00000020 .hidden __aeabi_cdrcmple
00008898 g     F .text	000000d0 .hidden __ltdf2
0000b2ac g       .init_array	00000000 __DTOR_END__
00007010 g     F .text	0000003e .hidden __aeabi_uldivmod
00009be4 g     F .text	00000044 TM1637_ack
00006ca0  w    F .text	00000006 ADC0_IRQHandler
00006ca8 g     F .text	0000010a .hidden __udivsi3
2000047c g       .bss	00000000 __START_BSS
00007050 g     F .text	0000003c .hidden __fixunsdfsi
2000049a g     O .bss	00000002 CLK_PIN
200006a8 g       .heap	00000000 __HeapLimit
2000047c g       .bss	00000000 __bss_start__
00009f08 g     F .text	00000068 flash_erase
000095f4 g     F .text	00000064 .hidden __aeabi_ui2d
00006ca0  w    F .text	00000006 SPI1_IRQHandler
000070c8 g     F .text	00000182 .hidden __udivmoddi4
00006ca0  w    F .text	00000006 DefaultISR
00006fc0 g     F .text	00000012 .hidden __aeabi_dcmplt
00008154 g     F .text	00000604 .hidden __aeabi_ddiv
0000b2a4 g       .ARM	00000000 __exidx_start
00008968 g     F .text	000004e4 .hidden __aeabi_dmul
20000416 g     O .data	00000001 __fdlib_version
00009b84 g     F .text	00000014 TM1637_Init
0000a304 g     F .text	00000188 printk_mkfloatstr
0000b28c g     F .text	00000000 _init
00006ca0  w    F .text	00000006 TPM2_IRQHandler
000096fc g     F .text	00000108 .hidden __aeabi_d2f
0000708c g     F .text	0000003c .hidden __aeabi_d2ulz
000076d4 g     F .text	00000388 .hidden __aeabi_fsub
00006ca0  w    F .text	00000006 RTC_IRQHandler
0000b15c g     O .text	00000014 PORT_ARR
00000400 g       *ABS*	00000000 MCU_SECTORSIZE
00006c58  w    F .text	00000048 Reset_Handler
00006ca0  w    F .text	00000006 LCD_IRQHandler
0000988c g     F .text	0000000a adc_read
20000400 g     O .data	00000016 tab
00007b1c g     F .text	00000638 .hidden __aeabi_dadd
00008898 g     F .text	000000d0 .hidden __ledf2
200017ff g       *ABS*	00000000 GEC_USER_RAM_END
0000a9ec g     F .text	00000024 myprintf
00006ca0  w    F .text	00000006 RTC_Seconds_IRQHandler
00006dbc g     F .text	00000000 .hidden __aeabi_idiv
00006ca0  w    F .text	00000006 MCG_IRQHandler
00006ca0  w    F .text	00000006 UART2_IRQHandler
2000047c g       .data	00000000 __data_end__
0000b2ac g       .init_array	00000000 __CTOR_LIST__
00000200 g       *ABS*	00000000 HEAP_SIZE
00006fe8 g     F .text	00000012 .hidden __aeabi_dcmpgt
00009804 g     F .text	0000003c .hidden __clzsi2
200004a4 g       .bss	00000000 __bss_end__
00006ca0  w    F .text	00000006 Reserved20_IRQHandler
00006ffc g     F .text	00000012 .hidden __aeabi_dcmpge
00009ec4 g     F .text	00000044 flash_cmd_launch
00008e4c g     F .text	00000690 .hidden __aeabi_dsub
2000049c g     O .bss	00000004 component_fun
20000400 g       *ABS*	00000000 GEC_USER_RAM_START
0000b1b8 g     O .text	00000008 UART_ARR
00009c64 g     F .text	00000058 TM1637_Write
00009868 g     F .text	00000024 adc_read_inner
00007a5c g     F .text	00000040 .hidden __aeabi_f2iz
0000724c g     F .text	00000224 .hidden __aeabi_fdiv
00009580 g     F .text	00000074 .hidden __aeabi_i2d
0000a2f6 g     F .text	0000000c out_char
0000a48c g     F .text	0000055e printk
00006f90  w    F .text	00000002 .hidden __aeabi_ldiv0
00007a9c g     F .text	00000080 .hidden __aeabi_ui2f
0000a17c g     F .text	00000068 uart_re1
0000aefa g     F .text	00000010 memset
00006800 g       .interrupts	000000c0 __isr_vector
00009dac g     F .text	000000f0 main
00006ca0  w    F .text	00000006 PIT_IRQHandler
00006ca8 g     F .text	00000000 .hidden __aeabi_uidiv
00006ca0  w    F .text	00000006 SVC_Handler
0000aecc g     F .text	00000004 matherr
20000400 g       .data	00000000 __DATA_RAM
00009fc4 g     F .text	00000008 gpio_get_port_pin
200004a8 g       .heap	00000000 __end__
00006dbc g     F .text	000001cc .hidden __divsi3
0000b2ac g       .init_array	00000000 __CTOR_END__
00006ca0  w    F .text	00000006 DMA3_IRQHandler
0000b2ac g       .init_array	00000000 __DTOR_LIST__
200004a4 g       .bss	00000000 __END_BSS
00009ac0 g     F .text	000000c4 SystemInit
00006ca0  w    F .text	00000006 DMA0_IRQHandler
00008758 g     F .text	00000078 .hidden __nedf2
0000708c g     F .text	0000003c .hidden __fixunsdfdi
0000b298 g     F .text	00000000 _fini
00006ca0  w    F .text	00000006 DAC0_IRQHandler
20001800 g       .stack	00000000 __StackTop
20000418 g     O .data	00000004 _impure_ptr
000099cc g     F .text	00000026 adc_init
00007470 g     F .text	00000264 .hidden __aeabi_fmul
00009f70 g     F .text	00000054 flash_write_physical
0000ab20 g     F .text	000003ac __ieee754_log
20000400 g       .mtb	00000000 _mtb_end
00009cbc g     F .text	000000c0 TM1637_Display
0000b330 g       *ABS*	00000000 __DATA_END
00009ea4 g     F .text	0000001e flash_isempty
00009a78 g     F .text	00000048 TempTrans
00007050 g     F .text	0000003c .hidden __aeabi_d2uiz
200004a0 g     O .bss	00000004 ans
0000aed0 g     F .text	0000000c nan
00006ca0  w    F .text	00000006 TPM1_IRQHandler
00009b98 g     F .text	00000018 tm1637_Dly_ms
0000a088 g     F .text	0000008c Vectors_Init
20001800 g       *ABS*	00000000 __stack
00006db4 g     F .text	00000008 .hidden __aeabi_uidivmod
00006fb4 g     F .text	0000000c .hidden __aeabi_dcmpeq
00006ca0  w    F .text	00000006 LVD_LVW_IRQHandler
00009c28 g     F .text	0000003c TM1637_stop
00006ca0  w    F .text	00000006 SPI0_IRQHandler
00006ca0  w    F .text	00000006 PORTA_IRQHandler
00006800 g       .interrupts	00000000 __VECTOR_TABLE
0000b2b4 g       .fini_array	00000000 __DATA_ROM
20001700 g       *ABS*	00000000 __StackLimit
00006ca0  w    F .text	00000006 FTFA_IRQHandler
0000b148 g     O .text	00000014 GPIO_ARR
00009514 g     F .text	0000006c .hidden __aeabi_d2iz
20000400 g       .mtb	00000000 _mtb_start
00006ca0  w    F .text	00000006 Reserved40_IRQHandler
00006f90  w    F .text	00000002 .hidden __aeabi_idiv0
00006ca0  w    F .text	00000006 LPTMR0_IRQHandler
00009858 g     F .text	0000000e strlen
00009898 g     F .text	00000090 adc_cal
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
000087d0 g     F .text	000000c8 .hidden __gedf2
0000a120 g     F .text	0000005c uart_send1
0000a114 g     F .text	0000000c uart_is_uartNo
00009fcc g     F .text	00000044 gpio_set
00009658 g     F .text	000000a4 .hidden __aeabi_f2d
0000a010 g     F .text	00000078 gpio_init
00009840 g     F .text	00000016 .hidden __clzdi2
00006ca0  w    F .text	00000006 CMP0_IRQHandler
00006f88 g     F .text	00000008 .hidden __aeabi_idivmod
00009bb0 g     F .text	00000034 TM1637_start
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START
00006ca0  w    F .text	00000006 DMA1_IRQHandler



Disassembly of section .text:

00006c10 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    6c10:	b510      	push	{r4, lr}
    6c12:	4c06      	ldr	r4, [pc, #24]	; (6c2c <__do_global_dtors_aux+0x1c>)
    6c14:	7823      	ldrb	r3, [r4, #0]
    6c16:	2b00      	cmp	r3, #0
    6c18:	d107      	bne.n	6c2a <__do_global_dtors_aux+0x1a>
    6c1a:	4b05      	ldr	r3, [pc, #20]	; (6c30 <__do_global_dtors_aux+0x20>)
    6c1c:	2b00      	cmp	r3, #0
    6c1e:	d002      	beq.n	6c26 <__do_global_dtors_aux+0x16>
    6c20:	4804      	ldr	r0, [pc, #16]	; (6c34 <__do_global_dtors_aux+0x24>)
    6c22:	e000      	b.n	6c26 <__do_global_dtors_aux+0x16>
    6c24:	bf00      	nop
    6c26:	2301      	movs	r3, #1
    6c28:	7023      	strb	r3, [r4, #0]
    6c2a:	bd10      	pop	{r4, pc}
    6c2c:	2000047c 	.word	0x2000047c
    6c30:	00000000 	.word	0x00000000
    6c34:	0000b28c 	.word	0x0000b28c

00006c38 <frame_dummy>:
frame_dummy():
    6c38:	4b04      	ldr	r3, [pc, #16]	; (6c4c <frame_dummy+0x14>)
    6c3a:	b510      	push	{r4, lr}
    6c3c:	2b00      	cmp	r3, #0
    6c3e:	d003      	beq.n	6c48 <frame_dummy+0x10>
    6c40:	4903      	ldr	r1, [pc, #12]	; (6c50 <frame_dummy+0x18>)
    6c42:	4804      	ldr	r0, [pc, #16]	; (6c54 <frame_dummy+0x1c>)
    6c44:	e000      	b.n	6c48 <frame_dummy+0x10>
    6c46:	bf00      	nop
    6c48:	bd10      	pop	{r4, pc}
    6c4a:	46c0      	nop			; (mov r8, r8)
    6c4c:	00000000 	.word	0x00000000
    6c50:	20000480 	.word	0x20000480
    6c54:	0000b28c 	.word	0x0000b28c

00006c58 <Reset_Handler>:
Reset_Handler():
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:118
    .align 2
    .globl   Reset_Handler
    .weak    Reset_Handler
    .type    Reset_Handler, %function
Reset_Handler:
    cpsid   i               /* Mask interrupts */
    6c58:	b672      	cpsid	i
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:120
#ifndef __NO_SYSTEM_INIT
    bl SystemInit
    6c5a:	f002 ff31 	bl	9ac0 <SystemInit>
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:122
#endif
    cpsie   i               /* Unmask interrupts */
    6c5e:	b662      	cpsie	i
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:130
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */

    ldr    r1, =__etext
    6c60:	490a      	ldr	r1, [pc, #40]	; (6c8c <Reset_Handler+0x34>)
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c62:	4a0b      	ldr	r2, [pc, #44]	; (6c90 <Reset_Handler+0x38>)
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c64:	4b0b      	ldr	r3, [pc, #44]	; (6c94 <Reset_Handler+0x3c>)
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:134

    subs    r3, r2
    6c66:	1a9b      	subs	r3, r3, r2
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:135
    ble     .LC0
    6c68:	dd03      	ble.n	6c72 <Reset_Handler+0x1a>
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:138

.LC1:
    subs    r3, 4
    6c6a:	3b04      	subs	r3, #4
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:139
    ldr    r0, [r1,r3]
    6c6c:	58c8      	ldr	r0, [r1, r3]
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:140
    str    r0, [r2,r3]
    6c6e:	50d0      	str	r0, [r2, r3]
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:141
    bgt    .LC1
    6c70:	dcfb      	bgt.n	6c6a <Reset_Handler+0x12>
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:154
 *     Loop to zero out BSS section, which uses following symbols
 *     in linker script:
 *      __bss_start__: start of BSS section. Must align to 4
 *      __bss_end__: end of BSS section. Must align to 4
 */
    ldr r1, =__bss_start__
    6c72:	4909      	ldr	r1, [pc, #36]	; (6c98 <Reset_Handler+0x40>)
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c74:	4a09      	ldr	r2, [pc, #36]	; (6c9c <Reset_Handler+0x44>)
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:157

    subs    r2, r1
    6c76:	1a52      	subs	r2, r2, r1
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:158
    ble .LC3
    6c78:	dd03      	ble.n	6c82 <Reset_Handler+0x2a>
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:160

    movs    r0, 0
    6c7a:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:162
.LC2:
    str r0, [r1, r2]
    6c7c:	5088      	str	r0, [r1, r2]
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:163
    subs    r2, 4
    6c7e:	3a04      	subs	r2, #4
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:164
    bge .LC2
    6c80:	dafc      	bge.n	6c7c <Reset_Handler+0x24>
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:173
#define __START _start
#endif


/*【User程序修改处1】*/
	bl	 Vectors_Init  
    6c82:	f003 fa01 	bl	a088 <Vectors_Init>
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:175
  //  bl    __START
   bl main
    6c86:	f003 f891 	bl	9dac <main>
    6c8a:	0000      	.short	0x0000
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:130
    ldr    r1, =__etext
    6c8c:	0000b2b4 	.word	0x0000b2b4
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c90:	20000400 	.word	0x20000400
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c94:	2000047c 	.word	0x2000047c
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:154
    ldr r1, =__bss_start__
    6c98:	2000047c 	.word	0x2000047c
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c9c:	200004a4 	.word	0x200004a4

00006ca0 <ADC0_IRQHandler>:
DMA1_IRQHandler():
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:186
    .weak DefaultISR
    .type DefaultISR, %function
DefaultISR:    
    //ldr	r0, =DefaultISR   //误中断，进入无限循环
    //bx r0
       push  {lr}        //【20200326】WYH改，误中断，回原处
    6ca0:	b500      	push	{lr}
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:187
       nop
    6ca2:	46c0      	nop			; (mov r8, r8)
D:\app_for_qianrushi\exam\18\Debug/srcs/startup_MKL36Z4.S:188
       pop   {pc}
    6ca4:	bd00      	pop	{pc}
    6ca6:	46c0      	nop			; (mov r8, r8)

00006ca8 <__udivsi3>:
__aeabi_uidiv():
    6ca8:	2200      	movs	r2, #0
    6caa:	0843      	lsrs	r3, r0, #1
    6cac:	428b      	cmp	r3, r1
    6cae:	d374      	bcc.n	6d9a <__udivsi3+0xf2>
    6cb0:	0903      	lsrs	r3, r0, #4
    6cb2:	428b      	cmp	r3, r1
    6cb4:	d35f      	bcc.n	6d76 <__udivsi3+0xce>
    6cb6:	0a03      	lsrs	r3, r0, #8
    6cb8:	428b      	cmp	r3, r1
    6cba:	d344      	bcc.n	6d46 <__udivsi3+0x9e>
    6cbc:	0b03      	lsrs	r3, r0, #12
    6cbe:	428b      	cmp	r3, r1
    6cc0:	d328      	bcc.n	6d14 <__udivsi3+0x6c>
    6cc2:	0c03      	lsrs	r3, r0, #16
    6cc4:	428b      	cmp	r3, r1
    6cc6:	d30d      	bcc.n	6ce4 <__udivsi3+0x3c>
    6cc8:	22ff      	movs	r2, #255	; 0xff
    6cca:	0209      	lsls	r1, r1, #8
    6ccc:	ba12      	rev	r2, r2
    6cce:	0c03      	lsrs	r3, r0, #16
    6cd0:	428b      	cmp	r3, r1
    6cd2:	d302      	bcc.n	6cda <__udivsi3+0x32>
    6cd4:	1212      	asrs	r2, r2, #8
    6cd6:	0209      	lsls	r1, r1, #8
    6cd8:	d065      	beq.n	6da6 <__udivsi3+0xfe>
    6cda:	0b03      	lsrs	r3, r0, #12
    6cdc:	428b      	cmp	r3, r1
    6cde:	d319      	bcc.n	6d14 <__udivsi3+0x6c>
    6ce0:	e000      	b.n	6ce4 <__udivsi3+0x3c>
    6ce2:	0a09      	lsrs	r1, r1, #8
    6ce4:	0bc3      	lsrs	r3, r0, #15
    6ce6:	428b      	cmp	r3, r1
    6ce8:	d301      	bcc.n	6cee <__udivsi3+0x46>
    6cea:	03cb      	lsls	r3, r1, #15
    6cec:	1ac0      	subs	r0, r0, r3
    6cee:	4152      	adcs	r2, r2
    6cf0:	0b83      	lsrs	r3, r0, #14
    6cf2:	428b      	cmp	r3, r1
    6cf4:	d301      	bcc.n	6cfa <__udivsi3+0x52>
    6cf6:	038b      	lsls	r3, r1, #14
    6cf8:	1ac0      	subs	r0, r0, r3
    6cfa:	4152      	adcs	r2, r2
    6cfc:	0b43      	lsrs	r3, r0, #13
    6cfe:	428b      	cmp	r3, r1
    6d00:	d301      	bcc.n	6d06 <__udivsi3+0x5e>
    6d02:	034b      	lsls	r3, r1, #13
    6d04:	1ac0      	subs	r0, r0, r3
    6d06:	4152      	adcs	r2, r2
    6d08:	0b03      	lsrs	r3, r0, #12
    6d0a:	428b      	cmp	r3, r1
    6d0c:	d301      	bcc.n	6d12 <__udivsi3+0x6a>
    6d0e:	030b      	lsls	r3, r1, #12
    6d10:	1ac0      	subs	r0, r0, r3
    6d12:	4152      	adcs	r2, r2
    6d14:	0ac3      	lsrs	r3, r0, #11
    6d16:	428b      	cmp	r3, r1
    6d18:	d301      	bcc.n	6d1e <__udivsi3+0x76>
    6d1a:	02cb      	lsls	r3, r1, #11
    6d1c:	1ac0      	subs	r0, r0, r3
    6d1e:	4152      	adcs	r2, r2
    6d20:	0a83      	lsrs	r3, r0, #10
    6d22:	428b      	cmp	r3, r1
    6d24:	d301      	bcc.n	6d2a <__udivsi3+0x82>
    6d26:	028b      	lsls	r3, r1, #10
    6d28:	1ac0      	subs	r0, r0, r3
    6d2a:	4152      	adcs	r2, r2
    6d2c:	0a43      	lsrs	r3, r0, #9
    6d2e:	428b      	cmp	r3, r1
    6d30:	d301      	bcc.n	6d36 <__udivsi3+0x8e>
    6d32:	024b      	lsls	r3, r1, #9
    6d34:	1ac0      	subs	r0, r0, r3
    6d36:	4152      	adcs	r2, r2
    6d38:	0a03      	lsrs	r3, r0, #8
    6d3a:	428b      	cmp	r3, r1
    6d3c:	d301      	bcc.n	6d42 <__udivsi3+0x9a>
    6d3e:	020b      	lsls	r3, r1, #8
    6d40:	1ac0      	subs	r0, r0, r3
    6d42:	4152      	adcs	r2, r2
    6d44:	d2cd      	bcs.n	6ce2 <__udivsi3+0x3a>
    6d46:	09c3      	lsrs	r3, r0, #7
    6d48:	428b      	cmp	r3, r1
    6d4a:	d301      	bcc.n	6d50 <__udivsi3+0xa8>
    6d4c:	01cb      	lsls	r3, r1, #7
    6d4e:	1ac0      	subs	r0, r0, r3
    6d50:	4152      	adcs	r2, r2
    6d52:	0983      	lsrs	r3, r0, #6
    6d54:	428b      	cmp	r3, r1
    6d56:	d301      	bcc.n	6d5c <__udivsi3+0xb4>
    6d58:	018b      	lsls	r3, r1, #6
    6d5a:	1ac0      	subs	r0, r0, r3
    6d5c:	4152      	adcs	r2, r2
    6d5e:	0943      	lsrs	r3, r0, #5
    6d60:	428b      	cmp	r3, r1
    6d62:	d301      	bcc.n	6d68 <__udivsi3+0xc0>
    6d64:	014b      	lsls	r3, r1, #5
    6d66:	1ac0      	subs	r0, r0, r3
    6d68:	4152      	adcs	r2, r2
    6d6a:	0903      	lsrs	r3, r0, #4
    6d6c:	428b      	cmp	r3, r1
    6d6e:	d301      	bcc.n	6d74 <__udivsi3+0xcc>
    6d70:	010b      	lsls	r3, r1, #4
    6d72:	1ac0      	subs	r0, r0, r3
    6d74:	4152      	adcs	r2, r2
    6d76:	08c3      	lsrs	r3, r0, #3
    6d78:	428b      	cmp	r3, r1
    6d7a:	d301      	bcc.n	6d80 <__udivsi3+0xd8>
    6d7c:	00cb      	lsls	r3, r1, #3
    6d7e:	1ac0      	subs	r0, r0, r3
    6d80:	4152      	adcs	r2, r2
    6d82:	0883      	lsrs	r3, r0, #2
    6d84:	428b      	cmp	r3, r1
    6d86:	d301      	bcc.n	6d8c <__udivsi3+0xe4>
    6d88:	008b      	lsls	r3, r1, #2
    6d8a:	1ac0      	subs	r0, r0, r3
    6d8c:	4152      	adcs	r2, r2
    6d8e:	0843      	lsrs	r3, r0, #1
    6d90:	428b      	cmp	r3, r1
    6d92:	d301      	bcc.n	6d98 <__udivsi3+0xf0>
    6d94:	004b      	lsls	r3, r1, #1
    6d96:	1ac0      	subs	r0, r0, r3
    6d98:	4152      	adcs	r2, r2
    6d9a:	1a41      	subs	r1, r0, r1
    6d9c:	d200      	bcs.n	6da0 <__udivsi3+0xf8>
    6d9e:	4601      	mov	r1, r0
    6da0:	4152      	adcs	r2, r2
    6da2:	4610      	mov	r0, r2
    6da4:	4770      	bx	lr
    6da6:	e7ff      	b.n	6da8 <__udivsi3+0x100>
    6da8:	b501      	push	{r0, lr}
    6daa:	2000      	movs	r0, #0
    6dac:	f000 f8f0 	bl	6f90 <__aeabi_idiv0>
    6db0:	bd02      	pop	{r1, pc}
    6db2:	46c0      	nop			; (mov r8, r8)

00006db4 <__aeabi_uidivmod>:
__aeabi_uidivmod():
    6db4:	2900      	cmp	r1, #0
    6db6:	d0f7      	beq.n	6da8 <__udivsi3+0x100>
    6db8:	e776      	b.n	6ca8 <__udivsi3>
    6dba:	4770      	bx	lr

00006dbc <__divsi3>:
__divsi3():
    6dbc:	4603      	mov	r3, r0
    6dbe:	430b      	orrs	r3, r1
    6dc0:	d47f      	bmi.n	6ec2 <__divsi3+0x106>
    6dc2:	2200      	movs	r2, #0
    6dc4:	0843      	lsrs	r3, r0, #1
    6dc6:	428b      	cmp	r3, r1
    6dc8:	d374      	bcc.n	6eb4 <__divsi3+0xf8>
    6dca:	0903      	lsrs	r3, r0, #4
    6dcc:	428b      	cmp	r3, r1
    6dce:	d35f      	bcc.n	6e90 <__divsi3+0xd4>
    6dd0:	0a03      	lsrs	r3, r0, #8
    6dd2:	428b      	cmp	r3, r1
    6dd4:	d344      	bcc.n	6e60 <__divsi3+0xa4>
    6dd6:	0b03      	lsrs	r3, r0, #12
    6dd8:	428b      	cmp	r3, r1
    6dda:	d328      	bcc.n	6e2e <__divsi3+0x72>
    6ddc:	0c03      	lsrs	r3, r0, #16
    6dde:	428b      	cmp	r3, r1
    6de0:	d30d      	bcc.n	6dfe <__divsi3+0x42>
    6de2:	22ff      	movs	r2, #255	; 0xff
    6de4:	0209      	lsls	r1, r1, #8
    6de6:	ba12      	rev	r2, r2
    6de8:	0c03      	lsrs	r3, r0, #16
    6dea:	428b      	cmp	r3, r1
    6dec:	d302      	bcc.n	6df4 <__divsi3+0x38>
    6dee:	1212      	asrs	r2, r2, #8
    6df0:	0209      	lsls	r1, r1, #8
    6df2:	d065      	beq.n	6ec0 <__divsi3+0x104>
    6df4:	0b03      	lsrs	r3, r0, #12
    6df6:	428b      	cmp	r3, r1
    6df8:	d319      	bcc.n	6e2e <__divsi3+0x72>
    6dfa:	e000      	b.n	6dfe <__divsi3+0x42>
    6dfc:	0a09      	lsrs	r1, r1, #8
    6dfe:	0bc3      	lsrs	r3, r0, #15
    6e00:	428b      	cmp	r3, r1
    6e02:	d301      	bcc.n	6e08 <__divsi3+0x4c>
    6e04:	03cb      	lsls	r3, r1, #15
    6e06:	1ac0      	subs	r0, r0, r3
    6e08:	4152      	adcs	r2, r2
    6e0a:	0b83      	lsrs	r3, r0, #14
    6e0c:	428b      	cmp	r3, r1
    6e0e:	d301      	bcc.n	6e14 <__divsi3+0x58>
    6e10:	038b      	lsls	r3, r1, #14
    6e12:	1ac0      	subs	r0, r0, r3
    6e14:	4152      	adcs	r2, r2
    6e16:	0b43      	lsrs	r3, r0, #13
    6e18:	428b      	cmp	r3, r1
    6e1a:	d301      	bcc.n	6e20 <__divsi3+0x64>
    6e1c:	034b      	lsls	r3, r1, #13
    6e1e:	1ac0      	subs	r0, r0, r3
    6e20:	4152      	adcs	r2, r2
    6e22:	0b03      	lsrs	r3, r0, #12
    6e24:	428b      	cmp	r3, r1
    6e26:	d301      	bcc.n	6e2c <__divsi3+0x70>
    6e28:	030b      	lsls	r3, r1, #12
    6e2a:	1ac0      	subs	r0, r0, r3
    6e2c:	4152      	adcs	r2, r2
    6e2e:	0ac3      	lsrs	r3, r0, #11
    6e30:	428b      	cmp	r3, r1
    6e32:	d301      	bcc.n	6e38 <__divsi3+0x7c>
    6e34:	02cb      	lsls	r3, r1, #11
    6e36:	1ac0      	subs	r0, r0, r3
    6e38:	4152      	adcs	r2, r2
    6e3a:	0a83      	lsrs	r3, r0, #10
    6e3c:	428b      	cmp	r3, r1
    6e3e:	d301      	bcc.n	6e44 <__divsi3+0x88>
    6e40:	028b      	lsls	r3, r1, #10
    6e42:	1ac0      	subs	r0, r0, r3
    6e44:	4152      	adcs	r2, r2
    6e46:	0a43      	lsrs	r3, r0, #9
    6e48:	428b      	cmp	r3, r1
    6e4a:	d301      	bcc.n	6e50 <__divsi3+0x94>
    6e4c:	024b      	lsls	r3, r1, #9
    6e4e:	1ac0      	subs	r0, r0, r3
    6e50:	4152      	adcs	r2, r2
    6e52:	0a03      	lsrs	r3, r0, #8
    6e54:	428b      	cmp	r3, r1
    6e56:	d301      	bcc.n	6e5c <__divsi3+0xa0>
    6e58:	020b      	lsls	r3, r1, #8
    6e5a:	1ac0      	subs	r0, r0, r3
    6e5c:	4152      	adcs	r2, r2
    6e5e:	d2cd      	bcs.n	6dfc <__divsi3+0x40>
    6e60:	09c3      	lsrs	r3, r0, #7
    6e62:	428b      	cmp	r3, r1
    6e64:	d301      	bcc.n	6e6a <__divsi3+0xae>
    6e66:	01cb      	lsls	r3, r1, #7
    6e68:	1ac0      	subs	r0, r0, r3
    6e6a:	4152      	adcs	r2, r2
    6e6c:	0983      	lsrs	r3, r0, #6
    6e6e:	428b      	cmp	r3, r1
    6e70:	d301      	bcc.n	6e76 <__divsi3+0xba>
    6e72:	018b      	lsls	r3, r1, #6
    6e74:	1ac0      	subs	r0, r0, r3
    6e76:	4152      	adcs	r2, r2
    6e78:	0943      	lsrs	r3, r0, #5
    6e7a:	428b      	cmp	r3, r1
    6e7c:	d301      	bcc.n	6e82 <__divsi3+0xc6>
    6e7e:	014b      	lsls	r3, r1, #5
    6e80:	1ac0      	subs	r0, r0, r3
    6e82:	4152      	adcs	r2, r2
    6e84:	0903      	lsrs	r3, r0, #4
    6e86:	428b      	cmp	r3, r1
    6e88:	d301      	bcc.n	6e8e <__divsi3+0xd2>
    6e8a:	010b      	lsls	r3, r1, #4
    6e8c:	1ac0      	subs	r0, r0, r3
    6e8e:	4152      	adcs	r2, r2
    6e90:	08c3      	lsrs	r3, r0, #3
    6e92:	428b      	cmp	r3, r1
    6e94:	d301      	bcc.n	6e9a <__divsi3+0xde>
    6e96:	00cb      	lsls	r3, r1, #3
    6e98:	1ac0      	subs	r0, r0, r3
    6e9a:	4152      	adcs	r2, r2
    6e9c:	0883      	lsrs	r3, r0, #2
    6e9e:	428b      	cmp	r3, r1
    6ea0:	d301      	bcc.n	6ea6 <__divsi3+0xea>
    6ea2:	008b      	lsls	r3, r1, #2
    6ea4:	1ac0      	subs	r0, r0, r3
    6ea6:	4152      	adcs	r2, r2
    6ea8:	0843      	lsrs	r3, r0, #1
    6eaa:	428b      	cmp	r3, r1
    6eac:	d301      	bcc.n	6eb2 <__divsi3+0xf6>
    6eae:	004b      	lsls	r3, r1, #1
    6eb0:	1ac0      	subs	r0, r0, r3
    6eb2:	4152      	adcs	r2, r2
    6eb4:	1a41      	subs	r1, r0, r1
    6eb6:	d200      	bcs.n	6eba <__divsi3+0xfe>
    6eb8:	4601      	mov	r1, r0
    6eba:	4152      	adcs	r2, r2
    6ebc:	4610      	mov	r0, r2
    6ebe:	4770      	bx	lr
    6ec0:	e05d      	b.n	6f7e <__divsi3+0x1c2>
    6ec2:	0fca      	lsrs	r2, r1, #31
    6ec4:	d000      	beq.n	6ec8 <__divsi3+0x10c>
    6ec6:	4249      	negs	r1, r1
    6ec8:	1003      	asrs	r3, r0, #32
    6eca:	d300      	bcc.n	6ece <__divsi3+0x112>
    6ecc:	4240      	negs	r0, r0
    6ece:	4053      	eors	r3, r2
    6ed0:	2200      	movs	r2, #0
    6ed2:	469c      	mov	ip, r3
    6ed4:	0903      	lsrs	r3, r0, #4
    6ed6:	428b      	cmp	r3, r1
    6ed8:	d32d      	bcc.n	6f36 <__divsi3+0x17a>
    6eda:	0a03      	lsrs	r3, r0, #8
    6edc:	428b      	cmp	r3, r1
    6ede:	d312      	bcc.n	6f06 <__divsi3+0x14a>
    6ee0:	22fc      	movs	r2, #252	; 0xfc
    6ee2:	0189      	lsls	r1, r1, #6
    6ee4:	ba12      	rev	r2, r2
    6ee6:	0a03      	lsrs	r3, r0, #8
    6ee8:	428b      	cmp	r3, r1
    6eea:	d30c      	bcc.n	6f06 <__divsi3+0x14a>
    6eec:	0189      	lsls	r1, r1, #6
    6eee:	1192      	asrs	r2, r2, #6
    6ef0:	428b      	cmp	r3, r1
    6ef2:	d308      	bcc.n	6f06 <__divsi3+0x14a>
    6ef4:	0189      	lsls	r1, r1, #6
    6ef6:	1192      	asrs	r2, r2, #6
    6ef8:	428b      	cmp	r3, r1
    6efa:	d304      	bcc.n	6f06 <__divsi3+0x14a>
    6efc:	0189      	lsls	r1, r1, #6
    6efe:	d03a      	beq.n	6f76 <__divsi3+0x1ba>
    6f00:	1192      	asrs	r2, r2, #6
    6f02:	e000      	b.n	6f06 <__divsi3+0x14a>
    6f04:	0989      	lsrs	r1, r1, #6
    6f06:	09c3      	lsrs	r3, r0, #7
    6f08:	428b      	cmp	r3, r1
    6f0a:	d301      	bcc.n	6f10 <__divsi3+0x154>
    6f0c:	01cb      	lsls	r3, r1, #7
    6f0e:	1ac0      	subs	r0, r0, r3
    6f10:	4152      	adcs	r2, r2
    6f12:	0983      	lsrs	r3, r0, #6
    6f14:	428b      	cmp	r3, r1
    6f16:	d301      	bcc.n	6f1c <__divsi3+0x160>
    6f18:	018b      	lsls	r3, r1, #6
    6f1a:	1ac0      	subs	r0, r0, r3
    6f1c:	4152      	adcs	r2, r2
    6f1e:	0943      	lsrs	r3, r0, #5
    6f20:	428b      	cmp	r3, r1
    6f22:	d301      	bcc.n	6f28 <__divsi3+0x16c>
    6f24:	014b      	lsls	r3, r1, #5
    6f26:	1ac0      	subs	r0, r0, r3
    6f28:	4152      	adcs	r2, r2
    6f2a:	0903      	lsrs	r3, r0, #4
    6f2c:	428b      	cmp	r3, r1
    6f2e:	d301      	bcc.n	6f34 <__divsi3+0x178>
    6f30:	010b      	lsls	r3, r1, #4
    6f32:	1ac0      	subs	r0, r0, r3
    6f34:	4152      	adcs	r2, r2
    6f36:	08c3      	lsrs	r3, r0, #3
    6f38:	428b      	cmp	r3, r1
    6f3a:	d301      	bcc.n	6f40 <__divsi3+0x184>
    6f3c:	00cb      	lsls	r3, r1, #3
    6f3e:	1ac0      	subs	r0, r0, r3
    6f40:	4152      	adcs	r2, r2
    6f42:	0883      	lsrs	r3, r0, #2
    6f44:	428b      	cmp	r3, r1
    6f46:	d301      	bcc.n	6f4c <__divsi3+0x190>
    6f48:	008b      	lsls	r3, r1, #2
    6f4a:	1ac0      	subs	r0, r0, r3
    6f4c:	4152      	adcs	r2, r2
    6f4e:	d2d9      	bcs.n	6f04 <__divsi3+0x148>
    6f50:	0843      	lsrs	r3, r0, #1
    6f52:	428b      	cmp	r3, r1
    6f54:	d301      	bcc.n	6f5a <__divsi3+0x19e>
    6f56:	004b      	lsls	r3, r1, #1
    6f58:	1ac0      	subs	r0, r0, r3
    6f5a:	4152      	adcs	r2, r2
    6f5c:	1a41      	subs	r1, r0, r1
    6f5e:	d200      	bcs.n	6f62 <__divsi3+0x1a6>
    6f60:	4601      	mov	r1, r0
    6f62:	4663      	mov	r3, ip
    6f64:	4152      	adcs	r2, r2
    6f66:	105b      	asrs	r3, r3, #1
    6f68:	4610      	mov	r0, r2
    6f6a:	d301      	bcc.n	6f70 <__divsi3+0x1b4>
    6f6c:	4240      	negs	r0, r0
    6f6e:	2b00      	cmp	r3, #0
    6f70:	d500      	bpl.n	6f74 <__divsi3+0x1b8>
    6f72:	4249      	negs	r1, r1
    6f74:	4770      	bx	lr
    6f76:	4663      	mov	r3, ip
    6f78:	105b      	asrs	r3, r3, #1
    6f7a:	d300      	bcc.n	6f7e <__divsi3+0x1c2>
    6f7c:	4240      	negs	r0, r0
    6f7e:	b501      	push	{r0, lr}
    6f80:	2000      	movs	r0, #0
    6f82:	f000 f805 	bl	6f90 <__aeabi_idiv0>
    6f86:	bd02      	pop	{r1, pc}

00006f88 <__aeabi_idivmod>:
__aeabi_idivmod():
    6f88:	2900      	cmp	r1, #0
    6f8a:	d0f8      	beq.n	6f7e <__divsi3+0x1c2>
    6f8c:	e716      	b.n	6dbc <__divsi3>
    6f8e:	4770      	bx	lr

00006f90 <__aeabi_idiv0>:
__aeabi_idiv0():
    6f90:	4770      	bx	lr
    6f92:	46c0      	nop			; (mov r8, r8)

00006f94 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    6f94:	4684      	mov	ip, r0
    6f96:	1c10      	adds	r0, r2, #0
    6f98:	4662      	mov	r2, ip
    6f9a:	468c      	mov	ip, r1
    6f9c:	1c19      	adds	r1, r3, #0
    6f9e:	4663      	mov	r3, ip
    6fa0:	e000      	b.n	6fa4 <__aeabi_cdcmpeq>
    6fa2:	46c0      	nop			; (mov r8, r8)

00006fa4 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    6fa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6fa6:	f001 fc77 	bl	8898 <__ledf2>
    6faa:	2800      	cmp	r0, #0
    6fac:	d401      	bmi.n	6fb2 <__aeabi_cdcmpeq+0xe>
    6fae:	2100      	movs	r1, #0
    6fb0:	42c8      	cmn	r0, r1
    6fb2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006fb4 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    6fb4:	b510      	push	{r4, lr}
    6fb6:	f001 fbcf 	bl	8758 <__eqdf2>
    6fba:	4240      	negs	r0, r0
    6fbc:	3001      	adds	r0, #1
    6fbe:	bd10      	pop	{r4, pc}

00006fc0 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    6fc0:	b510      	push	{r4, lr}
    6fc2:	f001 fc69 	bl	8898 <__ledf2>
    6fc6:	2800      	cmp	r0, #0
    6fc8:	db01      	blt.n	6fce <__aeabi_dcmplt+0xe>
    6fca:	2000      	movs	r0, #0
    6fcc:	bd10      	pop	{r4, pc}
    6fce:	2001      	movs	r0, #1
    6fd0:	bd10      	pop	{r4, pc}
    6fd2:	46c0      	nop			; (mov r8, r8)

00006fd4 <__aeabi_dcmple>:
__aeabi_dcmple():
    6fd4:	b510      	push	{r4, lr}
    6fd6:	f001 fc5f 	bl	8898 <__ledf2>
    6fda:	2800      	cmp	r0, #0
    6fdc:	dd01      	ble.n	6fe2 <__aeabi_dcmple+0xe>
    6fde:	2000      	movs	r0, #0
    6fe0:	bd10      	pop	{r4, pc}
    6fe2:	2001      	movs	r0, #1
    6fe4:	bd10      	pop	{r4, pc}
    6fe6:	46c0      	nop			; (mov r8, r8)

00006fe8 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    6fe8:	b510      	push	{r4, lr}
    6fea:	f001 fbf1 	bl	87d0 <__gedf2>
    6fee:	2800      	cmp	r0, #0
    6ff0:	dc01      	bgt.n	6ff6 <__aeabi_dcmpgt+0xe>
    6ff2:	2000      	movs	r0, #0
    6ff4:	bd10      	pop	{r4, pc}
    6ff6:	2001      	movs	r0, #1
    6ff8:	bd10      	pop	{r4, pc}
    6ffa:	46c0      	nop			; (mov r8, r8)

00006ffc <__aeabi_dcmpge>:
__aeabi_dcmpge():
    6ffc:	b510      	push	{r4, lr}
    6ffe:	f001 fbe7 	bl	87d0 <__gedf2>
    7002:	2800      	cmp	r0, #0
    7004:	da01      	bge.n	700a <__aeabi_dcmpge+0xe>
    7006:	2000      	movs	r0, #0
    7008:	bd10      	pop	{r4, pc}
    700a:	2001      	movs	r0, #1
    700c:	bd10      	pop	{r4, pc}
    700e:	46c0      	nop			; (mov r8, r8)

00007010 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    7010:	2b00      	cmp	r3, #0
    7012:	d111      	bne.n	7038 <__aeabi_uldivmod+0x28>
    7014:	2a00      	cmp	r2, #0
    7016:	d10f      	bne.n	7038 <__aeabi_uldivmod+0x28>
    7018:	2900      	cmp	r1, #0
    701a:	d100      	bne.n	701e <__aeabi_uldivmod+0xe>
    701c:	2800      	cmp	r0, #0
    701e:	d002      	beq.n	7026 <__aeabi_uldivmod+0x16>
    7020:	2100      	movs	r1, #0
    7022:	43c9      	mvns	r1, r1
    7024:	1c08      	adds	r0, r1, #0
    7026:	b407      	push	{r0, r1, r2}
    7028:	4802      	ldr	r0, [pc, #8]	; (7034 <__aeabi_uldivmod+0x24>)
    702a:	a102      	add	r1, pc, #8	; (adr r1, 7034 <__aeabi_uldivmod+0x24>)
    702c:	1840      	adds	r0, r0, r1
    702e:	9002      	str	r0, [sp, #8]
    7030:	bd03      	pop	{r0, r1, pc}
    7032:	46c0      	nop			; (mov r8, r8)
    7034:	ffffff5d 	.word	0xffffff5d
    7038:	b403      	push	{r0, r1}
    703a:	4668      	mov	r0, sp
    703c:	b501      	push	{r0, lr}
    703e:	9802      	ldr	r0, [sp, #8]
    7040:	f000 f842 	bl	70c8 <__udivmoddi4>
    7044:	9b01      	ldr	r3, [sp, #4]
    7046:	469e      	mov	lr, r3
    7048:	b002      	add	sp, #8
    704a:	bc0c      	pop	{r2, r3}
    704c:	4770      	bx	lr
    704e:	46c0      	nop			; (mov r8, r8)

00007050 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    7050:	b570      	push	{r4, r5, r6, lr}
    7052:	2200      	movs	r2, #0
    7054:	4b0c      	ldr	r3, [pc, #48]	; (7088 <__aeabi_d2uiz+0x38>)
    7056:	0004      	movs	r4, r0
    7058:	000d      	movs	r5, r1
    705a:	f7ff ffcf 	bl	6ffc <__aeabi_dcmpge>
    705e:	2800      	cmp	r0, #0
    7060:	d104      	bne.n	706c <__aeabi_d2uiz+0x1c>
    7062:	0020      	movs	r0, r4
    7064:	0029      	movs	r1, r5
    7066:	f002 fa55 	bl	9514 <__aeabi_d2iz>
    706a:	bd70      	pop	{r4, r5, r6, pc}
    706c:	4b06      	ldr	r3, [pc, #24]	; (7088 <__aeabi_d2uiz+0x38>)
    706e:	2200      	movs	r2, #0
    7070:	0020      	movs	r0, r4
    7072:	0029      	movs	r1, r5
    7074:	f001 feea 	bl	8e4c <__aeabi_dsub>
    7078:	f002 fa4c 	bl	9514 <__aeabi_d2iz>
    707c:	2380      	movs	r3, #128	; 0x80
    707e:	061b      	lsls	r3, r3, #24
    7080:	469c      	mov	ip, r3
    7082:	4460      	add	r0, ip
    7084:	e7f1      	b.n	706a <__aeabi_d2uiz+0x1a>
    7086:	46c0      	nop			; (mov r8, r8)
    7088:	41e00000 	.word	0x41e00000

0000708c <__aeabi_d2ulz>:
__fixunsdfdi():
    708c:	b570      	push	{r4, r5, r6, lr}
    708e:	2200      	movs	r2, #0
    7090:	4b0b      	ldr	r3, [pc, #44]	; (70c0 <__aeabi_d2ulz+0x34>)
    7092:	000d      	movs	r5, r1
    7094:	0004      	movs	r4, r0
    7096:	f001 fc67 	bl	8968 <__aeabi_dmul>
    709a:	f7ff ffd9 	bl	7050 <__aeabi_d2uiz>
    709e:	0006      	movs	r6, r0
    70a0:	f002 faa8 	bl	95f4 <__aeabi_ui2d>
    70a4:	2200      	movs	r2, #0
    70a6:	4b07      	ldr	r3, [pc, #28]	; (70c4 <__aeabi_d2ulz+0x38>)
    70a8:	f001 fc5e 	bl	8968 <__aeabi_dmul>
    70ac:	0002      	movs	r2, r0
    70ae:	000b      	movs	r3, r1
    70b0:	0020      	movs	r0, r4
    70b2:	0029      	movs	r1, r5
    70b4:	f001 feca 	bl	8e4c <__aeabi_dsub>
    70b8:	f7ff ffca 	bl	7050 <__aeabi_d2uiz>
    70bc:	0031      	movs	r1, r6
    70be:	bd70      	pop	{r4, r5, r6, pc}
    70c0:	3df00000 	.word	0x3df00000
    70c4:	41f00000 	.word	0x41f00000

000070c8 <__udivmoddi4>:
__udivmoddi4():
    70c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    70ca:	464f      	mov	r7, r9
    70cc:	4646      	mov	r6, r8
    70ce:	46d6      	mov	lr, sl
    70d0:	b5c0      	push	{r6, r7, lr}
    70d2:	0004      	movs	r4, r0
    70d4:	b082      	sub	sp, #8
    70d6:	000d      	movs	r5, r1
    70d8:	4691      	mov	r9, r2
    70da:	4698      	mov	r8, r3
    70dc:	428b      	cmp	r3, r1
    70de:	d82f      	bhi.n	7140 <__udivmoddi4+0x78>
    70e0:	d02c      	beq.n	713c <__udivmoddi4+0x74>
    70e2:	4641      	mov	r1, r8
    70e4:	4648      	mov	r0, r9
    70e6:	f002 fbab 	bl	9840 <__clzdi2>
    70ea:	0029      	movs	r1, r5
    70ec:	0006      	movs	r6, r0
    70ee:	0020      	movs	r0, r4
    70f0:	f002 fba6 	bl	9840 <__clzdi2>
    70f4:	1a33      	subs	r3, r6, r0
    70f6:	469c      	mov	ip, r3
    70f8:	3b20      	subs	r3, #32
    70fa:	469a      	mov	sl, r3
    70fc:	d500      	bpl.n	7100 <__udivmoddi4+0x38>
    70fe:	e076      	b.n	71ee <__udivmoddi4+0x126>
    7100:	464b      	mov	r3, r9
    7102:	4652      	mov	r2, sl
    7104:	4093      	lsls	r3, r2
    7106:	001f      	movs	r7, r3
    7108:	464b      	mov	r3, r9
    710a:	4662      	mov	r2, ip
    710c:	4093      	lsls	r3, r2
    710e:	001e      	movs	r6, r3
    7110:	42af      	cmp	r7, r5
    7112:	d828      	bhi.n	7166 <__udivmoddi4+0x9e>
    7114:	d025      	beq.n	7162 <__udivmoddi4+0x9a>
    7116:	4653      	mov	r3, sl
    7118:	1ba4      	subs	r4, r4, r6
    711a:	41bd      	sbcs	r5, r7
    711c:	2b00      	cmp	r3, #0
    711e:	da00      	bge.n	7122 <__udivmoddi4+0x5a>
    7120:	e07b      	b.n	721a <__udivmoddi4+0x152>
    7122:	2200      	movs	r2, #0
    7124:	2300      	movs	r3, #0
    7126:	9200      	str	r2, [sp, #0]
    7128:	9301      	str	r3, [sp, #4]
    712a:	2301      	movs	r3, #1
    712c:	4652      	mov	r2, sl
    712e:	4093      	lsls	r3, r2
    7130:	9301      	str	r3, [sp, #4]
    7132:	2301      	movs	r3, #1
    7134:	4662      	mov	r2, ip
    7136:	4093      	lsls	r3, r2
    7138:	9300      	str	r3, [sp, #0]
    713a:	e018      	b.n	716e <__udivmoddi4+0xa6>
    713c:	4282      	cmp	r2, r0
    713e:	d9d0      	bls.n	70e2 <__udivmoddi4+0x1a>
    7140:	2200      	movs	r2, #0
    7142:	2300      	movs	r3, #0
    7144:	9200      	str	r2, [sp, #0]
    7146:	9301      	str	r3, [sp, #4]
    7148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    714a:	2b00      	cmp	r3, #0
    714c:	d001      	beq.n	7152 <__udivmoddi4+0x8a>
    714e:	601c      	str	r4, [r3, #0]
    7150:	605d      	str	r5, [r3, #4]
    7152:	9800      	ldr	r0, [sp, #0]
    7154:	9901      	ldr	r1, [sp, #4]
    7156:	b002      	add	sp, #8
    7158:	bc1c      	pop	{r2, r3, r4}
    715a:	4690      	mov	r8, r2
    715c:	4699      	mov	r9, r3
    715e:	46a2      	mov	sl, r4
    7160:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7162:	42a3      	cmp	r3, r4
    7164:	d9d7      	bls.n	7116 <__udivmoddi4+0x4e>
    7166:	2200      	movs	r2, #0
    7168:	2300      	movs	r3, #0
    716a:	9200      	str	r2, [sp, #0]
    716c:	9301      	str	r3, [sp, #4]
    716e:	4663      	mov	r3, ip
    7170:	2b00      	cmp	r3, #0
    7172:	d0e9      	beq.n	7148 <__udivmoddi4+0x80>
    7174:	07fb      	lsls	r3, r7, #31
    7176:	4698      	mov	r8, r3
    7178:	4641      	mov	r1, r8
    717a:	0872      	lsrs	r2, r6, #1
    717c:	430a      	orrs	r2, r1
    717e:	087b      	lsrs	r3, r7, #1
    7180:	4666      	mov	r6, ip
    7182:	e00e      	b.n	71a2 <__udivmoddi4+0xda>
    7184:	42ab      	cmp	r3, r5
    7186:	d101      	bne.n	718c <__udivmoddi4+0xc4>
    7188:	42a2      	cmp	r2, r4
    718a:	d80c      	bhi.n	71a6 <__udivmoddi4+0xde>
    718c:	1aa4      	subs	r4, r4, r2
    718e:	419d      	sbcs	r5, r3
    7190:	2001      	movs	r0, #1
    7192:	1924      	adds	r4, r4, r4
    7194:	416d      	adcs	r5, r5
    7196:	2100      	movs	r1, #0
    7198:	3e01      	subs	r6, #1
    719a:	1824      	adds	r4, r4, r0
    719c:	414d      	adcs	r5, r1
    719e:	2e00      	cmp	r6, #0
    71a0:	d006      	beq.n	71b0 <__udivmoddi4+0xe8>
    71a2:	42ab      	cmp	r3, r5
    71a4:	d9ee      	bls.n	7184 <__udivmoddi4+0xbc>
    71a6:	3e01      	subs	r6, #1
    71a8:	1924      	adds	r4, r4, r4
    71aa:	416d      	adcs	r5, r5
    71ac:	2e00      	cmp	r6, #0
    71ae:	d1f8      	bne.n	71a2 <__udivmoddi4+0xda>
    71b0:	9800      	ldr	r0, [sp, #0]
    71b2:	9901      	ldr	r1, [sp, #4]
    71b4:	4653      	mov	r3, sl
    71b6:	1900      	adds	r0, r0, r4
    71b8:	4169      	adcs	r1, r5
    71ba:	2b00      	cmp	r3, #0
    71bc:	db23      	blt.n	7206 <__udivmoddi4+0x13e>
    71be:	002b      	movs	r3, r5
    71c0:	4652      	mov	r2, sl
    71c2:	40d3      	lsrs	r3, r2
    71c4:	002a      	movs	r2, r5
    71c6:	4664      	mov	r4, ip
    71c8:	40e2      	lsrs	r2, r4
    71ca:	001c      	movs	r4, r3
    71cc:	4653      	mov	r3, sl
    71ce:	0015      	movs	r5, r2
    71d0:	2b00      	cmp	r3, #0
    71d2:	db2d      	blt.n	7230 <__udivmoddi4+0x168>
    71d4:	0026      	movs	r6, r4
    71d6:	4657      	mov	r7, sl
    71d8:	40be      	lsls	r6, r7
    71da:	0033      	movs	r3, r6
    71dc:	0026      	movs	r6, r4
    71de:	4667      	mov	r7, ip
    71e0:	40be      	lsls	r6, r7
    71e2:	0032      	movs	r2, r6
    71e4:	1a80      	subs	r0, r0, r2
    71e6:	4199      	sbcs	r1, r3
    71e8:	9000      	str	r0, [sp, #0]
    71ea:	9101      	str	r1, [sp, #4]
    71ec:	e7ac      	b.n	7148 <__udivmoddi4+0x80>
    71ee:	4662      	mov	r2, ip
    71f0:	2320      	movs	r3, #32
    71f2:	1a9b      	subs	r3, r3, r2
    71f4:	464a      	mov	r2, r9
    71f6:	40da      	lsrs	r2, r3
    71f8:	4661      	mov	r1, ip
    71fa:	0013      	movs	r3, r2
    71fc:	4642      	mov	r2, r8
    71fe:	408a      	lsls	r2, r1
    7200:	0017      	movs	r7, r2
    7202:	431f      	orrs	r7, r3
    7204:	e780      	b.n	7108 <__udivmoddi4+0x40>
    7206:	4662      	mov	r2, ip
    7208:	2320      	movs	r3, #32
    720a:	1a9b      	subs	r3, r3, r2
    720c:	002a      	movs	r2, r5
    720e:	4666      	mov	r6, ip
    7210:	409a      	lsls	r2, r3
    7212:	0023      	movs	r3, r4
    7214:	40f3      	lsrs	r3, r6
    7216:	4313      	orrs	r3, r2
    7218:	e7d4      	b.n	71c4 <__udivmoddi4+0xfc>
    721a:	4662      	mov	r2, ip
    721c:	2320      	movs	r3, #32
    721e:	2100      	movs	r1, #0
    7220:	1a9b      	subs	r3, r3, r2
    7222:	2200      	movs	r2, #0
    7224:	9100      	str	r1, [sp, #0]
    7226:	9201      	str	r2, [sp, #4]
    7228:	2201      	movs	r2, #1
    722a:	40da      	lsrs	r2, r3
    722c:	9201      	str	r2, [sp, #4]
    722e:	e780      	b.n	7132 <__udivmoddi4+0x6a>
    7230:	2320      	movs	r3, #32
    7232:	4662      	mov	r2, ip
    7234:	0026      	movs	r6, r4
    7236:	1a9b      	subs	r3, r3, r2
    7238:	40de      	lsrs	r6, r3
    723a:	002f      	movs	r7, r5
    723c:	46b0      	mov	r8, r6
    723e:	4666      	mov	r6, ip
    7240:	40b7      	lsls	r7, r6
    7242:	4646      	mov	r6, r8
    7244:	003b      	movs	r3, r7
    7246:	4333      	orrs	r3, r6
    7248:	e7c8      	b.n	71dc <__udivmoddi4+0x114>
    724a:	46c0      	nop			; (mov r8, r8)

0000724c <__aeabi_fdiv>:
__aeabi_fdiv():
    724c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    724e:	4657      	mov	r7, sl
    7250:	464e      	mov	r6, r9
    7252:	4645      	mov	r5, r8
    7254:	46de      	mov	lr, fp
    7256:	0244      	lsls	r4, r0, #9
    7258:	b5e0      	push	{r5, r6, r7, lr}
    725a:	0046      	lsls	r6, r0, #1
    725c:	4688      	mov	r8, r1
    725e:	0a64      	lsrs	r4, r4, #9
    7260:	0e36      	lsrs	r6, r6, #24
    7262:	0fc7      	lsrs	r7, r0, #31
    7264:	2e00      	cmp	r6, #0
    7266:	d063      	beq.n	7330 <__aeabi_fdiv+0xe4>
    7268:	2eff      	cmp	r6, #255	; 0xff
    726a:	d024      	beq.n	72b6 <__aeabi_fdiv+0x6a>
    726c:	2380      	movs	r3, #128	; 0x80
    726e:	00e4      	lsls	r4, r4, #3
    7270:	04db      	lsls	r3, r3, #19
    7272:	431c      	orrs	r4, r3
    7274:	2300      	movs	r3, #0
    7276:	4699      	mov	r9, r3
    7278:	469b      	mov	fp, r3
    727a:	3e7f      	subs	r6, #127	; 0x7f
    727c:	4643      	mov	r3, r8
    727e:	4642      	mov	r2, r8
    7280:	025d      	lsls	r5, r3, #9
    7282:	0fd2      	lsrs	r2, r2, #31
    7284:	005b      	lsls	r3, r3, #1
    7286:	0a6d      	lsrs	r5, r5, #9
    7288:	0e1b      	lsrs	r3, r3, #24
    728a:	4690      	mov	r8, r2
    728c:	4692      	mov	sl, r2
    728e:	d065      	beq.n	735c <__aeabi_fdiv+0x110>
    7290:	2bff      	cmp	r3, #255	; 0xff
    7292:	d055      	beq.n	7340 <__aeabi_fdiv+0xf4>
    7294:	2280      	movs	r2, #128	; 0x80
    7296:	2100      	movs	r1, #0
    7298:	00ed      	lsls	r5, r5, #3
    729a:	04d2      	lsls	r2, r2, #19
    729c:	3b7f      	subs	r3, #127	; 0x7f
    729e:	4315      	orrs	r5, r2
    72a0:	1af6      	subs	r6, r6, r3
    72a2:	4643      	mov	r3, r8
    72a4:	464a      	mov	r2, r9
    72a6:	407b      	eors	r3, r7
    72a8:	2a0f      	cmp	r2, #15
    72aa:	d900      	bls.n	72ae <__aeabi_fdiv+0x62>
    72ac:	e08d      	b.n	73ca <__aeabi_fdiv+0x17e>
    72ae:	486d      	ldr	r0, [pc, #436]	; (7464 <__aeabi_fdiv+0x218>)
    72b0:	0092      	lsls	r2, r2, #2
    72b2:	5882      	ldr	r2, [r0, r2]
    72b4:	4697      	mov	pc, r2
    72b6:	2c00      	cmp	r4, #0
    72b8:	d154      	bne.n	7364 <__aeabi_fdiv+0x118>
    72ba:	2308      	movs	r3, #8
    72bc:	4699      	mov	r9, r3
    72be:	3b06      	subs	r3, #6
    72c0:	26ff      	movs	r6, #255	; 0xff
    72c2:	469b      	mov	fp, r3
    72c4:	e7da      	b.n	727c <__aeabi_fdiv+0x30>
    72c6:	2500      	movs	r5, #0
    72c8:	4653      	mov	r3, sl
    72ca:	2902      	cmp	r1, #2
    72cc:	d01b      	beq.n	7306 <__aeabi_fdiv+0xba>
    72ce:	2903      	cmp	r1, #3
    72d0:	d100      	bne.n	72d4 <__aeabi_fdiv+0x88>
    72d2:	e0bf      	b.n	7454 <__aeabi_fdiv+0x208>
    72d4:	2901      	cmp	r1, #1
    72d6:	d028      	beq.n	732a <__aeabi_fdiv+0xde>
    72d8:	0030      	movs	r0, r6
    72da:	307f      	adds	r0, #127	; 0x7f
    72dc:	2800      	cmp	r0, #0
    72de:	dd20      	ble.n	7322 <__aeabi_fdiv+0xd6>
    72e0:	076a      	lsls	r2, r5, #29
    72e2:	d004      	beq.n	72ee <__aeabi_fdiv+0xa2>
    72e4:	220f      	movs	r2, #15
    72e6:	402a      	ands	r2, r5
    72e8:	2a04      	cmp	r2, #4
    72ea:	d000      	beq.n	72ee <__aeabi_fdiv+0xa2>
    72ec:	3504      	adds	r5, #4
    72ee:	012a      	lsls	r2, r5, #4
    72f0:	d503      	bpl.n	72fa <__aeabi_fdiv+0xae>
    72f2:	0030      	movs	r0, r6
    72f4:	4a5c      	ldr	r2, [pc, #368]	; (7468 <__aeabi_fdiv+0x21c>)
    72f6:	3080      	adds	r0, #128	; 0x80
    72f8:	4015      	ands	r5, r2
    72fa:	28fe      	cmp	r0, #254	; 0xfe
    72fc:	dc03      	bgt.n	7306 <__aeabi_fdiv+0xba>
    72fe:	01ac      	lsls	r4, r5, #6
    7300:	0a64      	lsrs	r4, r4, #9
    7302:	b2c2      	uxtb	r2, r0
    7304:	e001      	b.n	730a <__aeabi_fdiv+0xbe>
    7306:	22ff      	movs	r2, #255	; 0xff
    7308:	2400      	movs	r4, #0
    730a:	0264      	lsls	r4, r4, #9
    730c:	05d2      	lsls	r2, r2, #23
    730e:	0a60      	lsrs	r0, r4, #9
    7310:	07db      	lsls	r3, r3, #31
    7312:	4310      	orrs	r0, r2
    7314:	4318      	orrs	r0, r3
    7316:	bc3c      	pop	{r2, r3, r4, r5}
    7318:	4690      	mov	r8, r2
    731a:	4699      	mov	r9, r3
    731c:	46a2      	mov	sl, r4
    731e:	46ab      	mov	fp, r5
    7320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7322:	2201      	movs	r2, #1
    7324:	1a10      	subs	r0, r2, r0
    7326:	281b      	cmp	r0, #27
    7328:	dd7c      	ble.n	7424 <__aeabi_fdiv+0x1d8>
    732a:	2200      	movs	r2, #0
    732c:	2400      	movs	r4, #0
    732e:	e7ec      	b.n	730a <__aeabi_fdiv+0xbe>
    7330:	2c00      	cmp	r4, #0
    7332:	d11d      	bne.n	7370 <__aeabi_fdiv+0x124>
    7334:	2304      	movs	r3, #4
    7336:	4699      	mov	r9, r3
    7338:	3b03      	subs	r3, #3
    733a:	2600      	movs	r6, #0
    733c:	469b      	mov	fp, r3
    733e:	e79d      	b.n	727c <__aeabi_fdiv+0x30>
    7340:	3eff      	subs	r6, #255	; 0xff
    7342:	2d00      	cmp	r5, #0
    7344:	d120      	bne.n	7388 <__aeabi_fdiv+0x13c>
    7346:	2102      	movs	r1, #2
    7348:	4643      	mov	r3, r8
    734a:	464a      	mov	r2, r9
    734c:	407b      	eors	r3, r7
    734e:	430a      	orrs	r2, r1
    7350:	2a0f      	cmp	r2, #15
    7352:	d8d8      	bhi.n	7306 <__aeabi_fdiv+0xba>
    7354:	4845      	ldr	r0, [pc, #276]	; (746c <__aeabi_fdiv+0x220>)
    7356:	0092      	lsls	r2, r2, #2
    7358:	5882      	ldr	r2, [r0, r2]
    735a:	4697      	mov	pc, r2
    735c:	2d00      	cmp	r5, #0
    735e:	d119      	bne.n	7394 <__aeabi_fdiv+0x148>
    7360:	2101      	movs	r1, #1
    7362:	e7f1      	b.n	7348 <__aeabi_fdiv+0xfc>
    7364:	230c      	movs	r3, #12
    7366:	4699      	mov	r9, r3
    7368:	3b09      	subs	r3, #9
    736a:	26ff      	movs	r6, #255	; 0xff
    736c:	469b      	mov	fp, r3
    736e:	e785      	b.n	727c <__aeabi_fdiv+0x30>
    7370:	0020      	movs	r0, r4
    7372:	f002 fa47 	bl	9804 <__clzsi2>
    7376:	2676      	movs	r6, #118	; 0x76
    7378:	1f43      	subs	r3, r0, #5
    737a:	409c      	lsls	r4, r3
    737c:	2300      	movs	r3, #0
    737e:	4276      	negs	r6, r6
    7380:	1a36      	subs	r6, r6, r0
    7382:	4699      	mov	r9, r3
    7384:	469b      	mov	fp, r3
    7386:	e779      	b.n	727c <__aeabi_fdiv+0x30>
    7388:	464a      	mov	r2, r9
    738a:	2303      	movs	r3, #3
    738c:	431a      	orrs	r2, r3
    738e:	4691      	mov	r9, r2
    7390:	2103      	movs	r1, #3
    7392:	e786      	b.n	72a2 <__aeabi_fdiv+0x56>
    7394:	0028      	movs	r0, r5
    7396:	f002 fa35 	bl	9804 <__clzsi2>
    739a:	1f43      	subs	r3, r0, #5
    739c:	1836      	adds	r6, r6, r0
    739e:	409d      	lsls	r5, r3
    73a0:	3676      	adds	r6, #118	; 0x76
    73a2:	2100      	movs	r1, #0
    73a4:	e77d      	b.n	72a2 <__aeabi_fdiv+0x56>
    73a6:	2480      	movs	r4, #128	; 0x80
    73a8:	2300      	movs	r3, #0
    73aa:	03e4      	lsls	r4, r4, #15
    73ac:	22ff      	movs	r2, #255	; 0xff
    73ae:	e7ac      	b.n	730a <__aeabi_fdiv+0xbe>
    73b0:	2500      	movs	r5, #0
    73b2:	2380      	movs	r3, #128	; 0x80
    73b4:	03db      	lsls	r3, r3, #15
    73b6:	421c      	tst	r4, r3
    73b8:	d028      	beq.n	740c <__aeabi_fdiv+0x1c0>
    73ba:	421d      	tst	r5, r3
    73bc:	d126      	bne.n	740c <__aeabi_fdiv+0x1c0>
    73be:	432b      	orrs	r3, r5
    73c0:	025c      	lsls	r4, r3, #9
    73c2:	0a64      	lsrs	r4, r4, #9
    73c4:	4643      	mov	r3, r8
    73c6:	22ff      	movs	r2, #255	; 0xff
    73c8:	e79f      	b.n	730a <__aeabi_fdiv+0xbe>
    73ca:	0162      	lsls	r2, r4, #5
    73cc:	016c      	lsls	r4, r5, #5
    73ce:	42a2      	cmp	r2, r4
    73d0:	d224      	bcs.n	741c <__aeabi_fdiv+0x1d0>
    73d2:	211b      	movs	r1, #27
    73d4:	2500      	movs	r5, #0
    73d6:	3e01      	subs	r6, #1
    73d8:	2701      	movs	r7, #1
    73da:	0010      	movs	r0, r2
    73dc:	006d      	lsls	r5, r5, #1
    73de:	0052      	lsls	r2, r2, #1
    73e0:	2800      	cmp	r0, #0
    73e2:	db01      	blt.n	73e8 <__aeabi_fdiv+0x19c>
    73e4:	4294      	cmp	r4, r2
    73e6:	d801      	bhi.n	73ec <__aeabi_fdiv+0x1a0>
    73e8:	1b12      	subs	r2, r2, r4
    73ea:	433d      	orrs	r5, r7
    73ec:	3901      	subs	r1, #1
    73ee:	2900      	cmp	r1, #0
    73f0:	d1f3      	bne.n	73da <__aeabi_fdiv+0x18e>
    73f2:	0014      	movs	r4, r2
    73f4:	1e62      	subs	r2, r4, #1
    73f6:	4194      	sbcs	r4, r2
    73f8:	4325      	orrs	r5, r4
    73fa:	e76d      	b.n	72d8 <__aeabi_fdiv+0x8c>
    73fc:	46ba      	mov	sl, r7
    73fe:	4659      	mov	r1, fp
    7400:	0025      	movs	r5, r4
    7402:	4653      	mov	r3, sl
    7404:	2902      	cmp	r1, #2
    7406:	d000      	beq.n	740a <__aeabi_fdiv+0x1be>
    7408:	e761      	b.n	72ce <__aeabi_fdiv+0x82>
    740a:	e77c      	b.n	7306 <__aeabi_fdiv+0xba>
    740c:	2380      	movs	r3, #128	; 0x80
    740e:	03db      	lsls	r3, r3, #15
    7410:	431c      	orrs	r4, r3
    7412:	0264      	lsls	r4, r4, #9
    7414:	0a64      	lsrs	r4, r4, #9
    7416:	003b      	movs	r3, r7
    7418:	22ff      	movs	r2, #255	; 0xff
    741a:	e776      	b.n	730a <__aeabi_fdiv+0xbe>
    741c:	1b12      	subs	r2, r2, r4
    741e:	211a      	movs	r1, #26
    7420:	2501      	movs	r5, #1
    7422:	e7d9      	b.n	73d8 <__aeabi_fdiv+0x18c>
    7424:	369e      	adds	r6, #158	; 0x9e
    7426:	002a      	movs	r2, r5
    7428:	40b5      	lsls	r5, r6
    742a:	002c      	movs	r4, r5
    742c:	40c2      	lsrs	r2, r0
    742e:	1e65      	subs	r5, r4, #1
    7430:	41ac      	sbcs	r4, r5
    7432:	4314      	orrs	r4, r2
    7434:	0762      	lsls	r2, r4, #29
    7436:	d004      	beq.n	7442 <__aeabi_fdiv+0x1f6>
    7438:	220f      	movs	r2, #15
    743a:	4022      	ands	r2, r4
    743c:	2a04      	cmp	r2, #4
    743e:	d000      	beq.n	7442 <__aeabi_fdiv+0x1f6>
    7440:	3404      	adds	r4, #4
    7442:	0162      	lsls	r2, r4, #5
    7444:	d403      	bmi.n	744e <__aeabi_fdiv+0x202>
    7446:	01a4      	lsls	r4, r4, #6
    7448:	0a64      	lsrs	r4, r4, #9
    744a:	2200      	movs	r2, #0
    744c:	e75d      	b.n	730a <__aeabi_fdiv+0xbe>
    744e:	2201      	movs	r2, #1
    7450:	2400      	movs	r4, #0
    7452:	e75a      	b.n	730a <__aeabi_fdiv+0xbe>
    7454:	2480      	movs	r4, #128	; 0x80
    7456:	03e4      	lsls	r4, r4, #15
    7458:	432c      	orrs	r4, r5
    745a:	0264      	lsls	r4, r4, #9
    745c:	0a64      	lsrs	r4, r4, #9
    745e:	22ff      	movs	r2, #255	; 0xff
    7460:	e753      	b.n	730a <__aeabi_fdiv+0xbe>
    7462:	46c0      	nop			; (mov r8, r8)
    7464:	0000af0c 	.word	0x0000af0c
    7468:	f7ffffff 	.word	0xf7ffffff
    746c:	0000af4c 	.word	0x0000af4c

00007470 <__aeabi_fmul>:
__aeabi_fmul():
    7470:	b5f0      	push	{r4, r5, r6, r7, lr}
    7472:	464e      	mov	r6, r9
    7474:	4657      	mov	r7, sl
    7476:	4645      	mov	r5, r8
    7478:	46de      	mov	lr, fp
    747a:	b5e0      	push	{r5, r6, r7, lr}
    747c:	0243      	lsls	r3, r0, #9
    747e:	0a5b      	lsrs	r3, r3, #9
    7480:	0045      	lsls	r5, r0, #1
    7482:	b083      	sub	sp, #12
    7484:	1c0f      	adds	r7, r1, #0
    7486:	4699      	mov	r9, r3
    7488:	0e2d      	lsrs	r5, r5, #24
    748a:	0fc6      	lsrs	r6, r0, #31
    748c:	2d00      	cmp	r5, #0
    748e:	d057      	beq.n	7540 <__aeabi_fmul+0xd0>
    7490:	2dff      	cmp	r5, #255	; 0xff
    7492:	d024      	beq.n	74de <__aeabi_fmul+0x6e>
    7494:	2080      	movs	r0, #128	; 0x80
    7496:	00db      	lsls	r3, r3, #3
    7498:	04c0      	lsls	r0, r0, #19
    749a:	4318      	orrs	r0, r3
    749c:	2300      	movs	r3, #0
    749e:	4681      	mov	r9, r0
    74a0:	469a      	mov	sl, r3
    74a2:	469b      	mov	fp, r3
    74a4:	3d7f      	subs	r5, #127	; 0x7f
    74a6:	027c      	lsls	r4, r7, #9
    74a8:	007a      	lsls	r2, r7, #1
    74aa:	0ffb      	lsrs	r3, r7, #31
    74ac:	0a64      	lsrs	r4, r4, #9
    74ae:	0e12      	lsrs	r2, r2, #24
    74b0:	4698      	mov	r8, r3
    74b2:	d023      	beq.n	74fc <__aeabi_fmul+0x8c>
    74b4:	2aff      	cmp	r2, #255	; 0xff
    74b6:	d04b      	beq.n	7550 <__aeabi_fmul+0xe0>
    74b8:	00e3      	lsls	r3, r4, #3
    74ba:	2480      	movs	r4, #128	; 0x80
    74bc:	2000      	movs	r0, #0
    74be:	04e4      	lsls	r4, r4, #19
    74c0:	3a7f      	subs	r2, #127	; 0x7f
    74c2:	431c      	orrs	r4, r3
    74c4:	18ad      	adds	r5, r5, r2
    74c6:	1c6b      	adds	r3, r5, #1
    74c8:	4647      	mov	r7, r8
    74ca:	9301      	str	r3, [sp, #4]
    74cc:	4653      	mov	r3, sl
    74ce:	4077      	eors	r7, r6
    74d0:	003a      	movs	r2, r7
    74d2:	2b0f      	cmp	r3, #15
    74d4:	d848      	bhi.n	7568 <__aeabi_fmul+0xf8>
    74d6:	497d      	ldr	r1, [pc, #500]	; (76cc <__aeabi_fmul+0x25c>)
    74d8:	009b      	lsls	r3, r3, #2
    74da:	58cb      	ldr	r3, [r1, r3]
    74dc:	469f      	mov	pc, r3
    74de:	2b00      	cmp	r3, #0
    74e0:	d000      	beq.n	74e4 <__aeabi_fmul+0x74>
    74e2:	e085      	b.n	75f0 <__aeabi_fmul+0x180>
    74e4:	3308      	adds	r3, #8
    74e6:	469a      	mov	sl, r3
    74e8:	3b06      	subs	r3, #6
    74ea:	469b      	mov	fp, r3
    74ec:	027c      	lsls	r4, r7, #9
    74ee:	007a      	lsls	r2, r7, #1
    74f0:	0ffb      	lsrs	r3, r7, #31
    74f2:	25ff      	movs	r5, #255	; 0xff
    74f4:	0a64      	lsrs	r4, r4, #9
    74f6:	0e12      	lsrs	r2, r2, #24
    74f8:	4698      	mov	r8, r3
    74fa:	d1db      	bne.n	74b4 <__aeabi_fmul+0x44>
    74fc:	2c00      	cmp	r4, #0
    74fe:	d000      	beq.n	7502 <__aeabi_fmul+0x92>
    7500:	e090      	b.n	7624 <__aeabi_fmul+0x1b4>
    7502:	4652      	mov	r2, sl
    7504:	2301      	movs	r3, #1
    7506:	431a      	orrs	r2, r3
    7508:	4692      	mov	sl, r2
    750a:	2001      	movs	r0, #1
    750c:	e7db      	b.n	74c6 <__aeabi_fmul+0x56>
    750e:	464c      	mov	r4, r9
    7510:	4658      	mov	r0, fp
    7512:	0017      	movs	r7, r2
    7514:	2802      	cmp	r0, #2
    7516:	d024      	beq.n	7562 <__aeabi_fmul+0xf2>
    7518:	2803      	cmp	r0, #3
    751a:	d100      	bne.n	751e <__aeabi_fmul+0xae>
    751c:	e0cf      	b.n	76be <__aeabi_fmul+0x24e>
    751e:	2200      	movs	r2, #0
    7520:	2300      	movs	r3, #0
    7522:	2801      	cmp	r0, #1
    7524:	d14d      	bne.n	75c2 <__aeabi_fmul+0x152>
    7526:	0258      	lsls	r0, r3, #9
    7528:	05d2      	lsls	r2, r2, #23
    752a:	0a40      	lsrs	r0, r0, #9
    752c:	07ff      	lsls	r7, r7, #31
    752e:	4310      	orrs	r0, r2
    7530:	4338      	orrs	r0, r7
    7532:	b003      	add	sp, #12
    7534:	bc3c      	pop	{r2, r3, r4, r5}
    7536:	4690      	mov	r8, r2
    7538:	4699      	mov	r9, r3
    753a:	46a2      	mov	sl, r4
    753c:	46ab      	mov	fp, r5
    753e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7540:	2b00      	cmp	r3, #0
    7542:	d15b      	bne.n	75fc <__aeabi_fmul+0x18c>
    7544:	2304      	movs	r3, #4
    7546:	469a      	mov	sl, r3
    7548:	3b03      	subs	r3, #3
    754a:	2500      	movs	r5, #0
    754c:	469b      	mov	fp, r3
    754e:	e7aa      	b.n	74a6 <__aeabi_fmul+0x36>
    7550:	35ff      	adds	r5, #255	; 0xff
    7552:	2c00      	cmp	r4, #0
    7554:	d160      	bne.n	7618 <__aeabi_fmul+0x1a8>
    7556:	4652      	mov	r2, sl
    7558:	2302      	movs	r3, #2
    755a:	431a      	orrs	r2, r3
    755c:	4692      	mov	sl, r2
    755e:	2002      	movs	r0, #2
    7560:	e7b1      	b.n	74c6 <__aeabi_fmul+0x56>
    7562:	22ff      	movs	r2, #255	; 0xff
    7564:	2300      	movs	r3, #0
    7566:	e7de      	b.n	7526 <__aeabi_fmul+0xb6>
    7568:	464b      	mov	r3, r9
    756a:	0c1b      	lsrs	r3, r3, #16
    756c:	469c      	mov	ip, r3
    756e:	464b      	mov	r3, r9
    7570:	0426      	lsls	r6, r4, #16
    7572:	0c36      	lsrs	r6, r6, #16
    7574:	0418      	lsls	r0, r3, #16
    7576:	4661      	mov	r1, ip
    7578:	0033      	movs	r3, r6
    757a:	0c22      	lsrs	r2, r4, #16
    757c:	4664      	mov	r4, ip
    757e:	0c00      	lsrs	r0, r0, #16
    7580:	4343      	muls	r3, r0
    7582:	434e      	muls	r6, r1
    7584:	4350      	muls	r0, r2
    7586:	4354      	muls	r4, r2
    7588:	1980      	adds	r0, r0, r6
    758a:	0c1a      	lsrs	r2, r3, #16
    758c:	1812      	adds	r2, r2, r0
    758e:	4296      	cmp	r6, r2
    7590:	d903      	bls.n	759a <__aeabi_fmul+0x12a>
    7592:	2180      	movs	r1, #128	; 0x80
    7594:	0249      	lsls	r1, r1, #9
    7596:	468c      	mov	ip, r1
    7598:	4464      	add	r4, ip
    759a:	041b      	lsls	r3, r3, #16
    759c:	0c1b      	lsrs	r3, r3, #16
    759e:	0410      	lsls	r0, r2, #16
    75a0:	18c0      	adds	r0, r0, r3
    75a2:	0183      	lsls	r3, r0, #6
    75a4:	1e5e      	subs	r6, r3, #1
    75a6:	41b3      	sbcs	r3, r6
    75a8:	0e80      	lsrs	r0, r0, #26
    75aa:	4318      	orrs	r0, r3
    75ac:	0c13      	lsrs	r3, r2, #16
    75ae:	191b      	adds	r3, r3, r4
    75b0:	019b      	lsls	r3, r3, #6
    75b2:	4303      	orrs	r3, r0
    75b4:	001c      	movs	r4, r3
    75b6:	0123      	lsls	r3, r4, #4
    75b8:	d579      	bpl.n	76ae <__aeabi_fmul+0x23e>
    75ba:	2301      	movs	r3, #1
    75bc:	0862      	lsrs	r2, r4, #1
    75be:	401c      	ands	r4, r3
    75c0:	4314      	orrs	r4, r2
    75c2:	9a01      	ldr	r2, [sp, #4]
    75c4:	327f      	adds	r2, #127	; 0x7f
    75c6:	2a00      	cmp	r2, #0
    75c8:	dd4d      	ble.n	7666 <__aeabi_fmul+0x1f6>
    75ca:	0763      	lsls	r3, r4, #29
    75cc:	d004      	beq.n	75d8 <__aeabi_fmul+0x168>
    75ce:	230f      	movs	r3, #15
    75d0:	4023      	ands	r3, r4
    75d2:	2b04      	cmp	r3, #4
    75d4:	d000      	beq.n	75d8 <__aeabi_fmul+0x168>
    75d6:	3404      	adds	r4, #4
    75d8:	0123      	lsls	r3, r4, #4
    75da:	d503      	bpl.n	75e4 <__aeabi_fmul+0x174>
    75dc:	4b3c      	ldr	r3, [pc, #240]	; (76d0 <__aeabi_fmul+0x260>)
    75de:	9a01      	ldr	r2, [sp, #4]
    75e0:	401c      	ands	r4, r3
    75e2:	3280      	adds	r2, #128	; 0x80
    75e4:	2afe      	cmp	r2, #254	; 0xfe
    75e6:	dcbc      	bgt.n	7562 <__aeabi_fmul+0xf2>
    75e8:	01a3      	lsls	r3, r4, #6
    75ea:	0a5b      	lsrs	r3, r3, #9
    75ec:	b2d2      	uxtb	r2, r2
    75ee:	e79a      	b.n	7526 <__aeabi_fmul+0xb6>
    75f0:	230c      	movs	r3, #12
    75f2:	469a      	mov	sl, r3
    75f4:	3b09      	subs	r3, #9
    75f6:	25ff      	movs	r5, #255	; 0xff
    75f8:	469b      	mov	fp, r3
    75fa:	e754      	b.n	74a6 <__aeabi_fmul+0x36>
    75fc:	0018      	movs	r0, r3
    75fe:	f002 f901 	bl	9804 <__clzsi2>
    7602:	464a      	mov	r2, r9
    7604:	1f43      	subs	r3, r0, #5
    7606:	2576      	movs	r5, #118	; 0x76
    7608:	409a      	lsls	r2, r3
    760a:	2300      	movs	r3, #0
    760c:	426d      	negs	r5, r5
    760e:	4691      	mov	r9, r2
    7610:	1a2d      	subs	r5, r5, r0
    7612:	469a      	mov	sl, r3
    7614:	469b      	mov	fp, r3
    7616:	e746      	b.n	74a6 <__aeabi_fmul+0x36>
    7618:	4652      	mov	r2, sl
    761a:	2303      	movs	r3, #3
    761c:	431a      	orrs	r2, r3
    761e:	4692      	mov	sl, r2
    7620:	2003      	movs	r0, #3
    7622:	e750      	b.n	74c6 <__aeabi_fmul+0x56>
    7624:	0020      	movs	r0, r4
    7626:	f002 f8ed 	bl	9804 <__clzsi2>
    762a:	1f43      	subs	r3, r0, #5
    762c:	1a2d      	subs	r5, r5, r0
    762e:	409c      	lsls	r4, r3
    7630:	3d76      	subs	r5, #118	; 0x76
    7632:	2000      	movs	r0, #0
    7634:	e747      	b.n	74c6 <__aeabi_fmul+0x56>
    7636:	2380      	movs	r3, #128	; 0x80
    7638:	2700      	movs	r7, #0
    763a:	03db      	lsls	r3, r3, #15
    763c:	22ff      	movs	r2, #255	; 0xff
    763e:	e772      	b.n	7526 <__aeabi_fmul+0xb6>
    7640:	4642      	mov	r2, r8
    7642:	e766      	b.n	7512 <__aeabi_fmul+0xa2>
    7644:	464c      	mov	r4, r9
    7646:	0032      	movs	r2, r6
    7648:	4658      	mov	r0, fp
    764a:	e762      	b.n	7512 <__aeabi_fmul+0xa2>
    764c:	2380      	movs	r3, #128	; 0x80
    764e:	464a      	mov	r2, r9
    7650:	03db      	lsls	r3, r3, #15
    7652:	421a      	tst	r2, r3
    7654:	d022      	beq.n	769c <__aeabi_fmul+0x22c>
    7656:	421c      	tst	r4, r3
    7658:	d120      	bne.n	769c <__aeabi_fmul+0x22c>
    765a:	4323      	orrs	r3, r4
    765c:	025b      	lsls	r3, r3, #9
    765e:	0a5b      	lsrs	r3, r3, #9
    7660:	4647      	mov	r7, r8
    7662:	22ff      	movs	r2, #255	; 0xff
    7664:	e75f      	b.n	7526 <__aeabi_fmul+0xb6>
    7666:	2301      	movs	r3, #1
    7668:	1a9a      	subs	r2, r3, r2
    766a:	2a1b      	cmp	r2, #27
    766c:	dc21      	bgt.n	76b2 <__aeabi_fmul+0x242>
    766e:	0023      	movs	r3, r4
    7670:	9901      	ldr	r1, [sp, #4]
    7672:	40d3      	lsrs	r3, r2
    7674:	319e      	adds	r1, #158	; 0x9e
    7676:	408c      	lsls	r4, r1
    7678:	001a      	movs	r2, r3
    767a:	0023      	movs	r3, r4
    767c:	1e5c      	subs	r4, r3, #1
    767e:	41a3      	sbcs	r3, r4
    7680:	4313      	orrs	r3, r2
    7682:	075a      	lsls	r2, r3, #29
    7684:	d004      	beq.n	7690 <__aeabi_fmul+0x220>
    7686:	220f      	movs	r2, #15
    7688:	401a      	ands	r2, r3
    768a:	2a04      	cmp	r2, #4
    768c:	d000      	beq.n	7690 <__aeabi_fmul+0x220>
    768e:	3304      	adds	r3, #4
    7690:	015a      	lsls	r2, r3, #5
    7692:	d411      	bmi.n	76b8 <__aeabi_fmul+0x248>
    7694:	019b      	lsls	r3, r3, #6
    7696:	0a5b      	lsrs	r3, r3, #9
    7698:	2200      	movs	r2, #0
    769a:	e744      	b.n	7526 <__aeabi_fmul+0xb6>
    769c:	2380      	movs	r3, #128	; 0x80
    769e:	464a      	mov	r2, r9
    76a0:	03db      	lsls	r3, r3, #15
    76a2:	4313      	orrs	r3, r2
    76a4:	025b      	lsls	r3, r3, #9
    76a6:	0a5b      	lsrs	r3, r3, #9
    76a8:	0037      	movs	r7, r6
    76aa:	22ff      	movs	r2, #255	; 0xff
    76ac:	e73b      	b.n	7526 <__aeabi_fmul+0xb6>
    76ae:	9501      	str	r5, [sp, #4]
    76b0:	e787      	b.n	75c2 <__aeabi_fmul+0x152>
    76b2:	2200      	movs	r2, #0
    76b4:	2300      	movs	r3, #0
    76b6:	e736      	b.n	7526 <__aeabi_fmul+0xb6>
    76b8:	2201      	movs	r2, #1
    76ba:	2300      	movs	r3, #0
    76bc:	e733      	b.n	7526 <__aeabi_fmul+0xb6>
    76be:	2380      	movs	r3, #128	; 0x80
    76c0:	03db      	lsls	r3, r3, #15
    76c2:	4323      	orrs	r3, r4
    76c4:	025b      	lsls	r3, r3, #9
    76c6:	0a5b      	lsrs	r3, r3, #9
    76c8:	22ff      	movs	r2, #255	; 0xff
    76ca:	e72c      	b.n	7526 <__aeabi_fmul+0xb6>
    76cc:	0000af8c 	.word	0x0000af8c
    76d0:	f7ffffff 	.word	0xf7ffffff

000076d4 <__aeabi_fsub>:
__aeabi_fsub():
    76d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    76d6:	4647      	mov	r7, r8
    76d8:	46ce      	mov	lr, r9
    76da:	0044      	lsls	r4, r0, #1
    76dc:	0fc2      	lsrs	r2, r0, #31
    76de:	b580      	push	{r7, lr}
    76e0:	0247      	lsls	r7, r0, #9
    76e2:	0248      	lsls	r0, r1, #9
    76e4:	0a40      	lsrs	r0, r0, #9
    76e6:	4684      	mov	ip, r0
    76e8:	4666      	mov	r6, ip
    76ea:	0048      	lsls	r0, r1, #1
    76ec:	0a7f      	lsrs	r7, r7, #9
    76ee:	0e24      	lsrs	r4, r4, #24
    76f0:	00f6      	lsls	r6, r6, #3
    76f2:	0025      	movs	r5, r4
    76f4:	4690      	mov	r8, r2
    76f6:	00fb      	lsls	r3, r7, #3
    76f8:	0e00      	lsrs	r0, r0, #24
    76fa:	0fc9      	lsrs	r1, r1, #31
    76fc:	46b1      	mov	r9, r6
    76fe:	28ff      	cmp	r0, #255	; 0xff
    7700:	d100      	bne.n	7704 <__aeabi_fsub+0x30>
    7702:	e085      	b.n	7810 <__aeabi_fsub+0x13c>
    7704:	2601      	movs	r6, #1
    7706:	4071      	eors	r1, r6
    7708:	1a26      	subs	r6, r4, r0
    770a:	4291      	cmp	r1, r2
    770c:	d057      	beq.n	77be <__aeabi_fsub+0xea>
    770e:	2e00      	cmp	r6, #0
    7710:	dd43      	ble.n	779a <__aeabi_fsub+0xc6>
    7712:	2800      	cmp	r0, #0
    7714:	d000      	beq.n	7718 <__aeabi_fsub+0x44>
    7716:	e07f      	b.n	7818 <__aeabi_fsub+0x144>
    7718:	4649      	mov	r1, r9
    771a:	2900      	cmp	r1, #0
    771c:	d100      	bne.n	7720 <__aeabi_fsub+0x4c>
    771e:	e0aa      	b.n	7876 <__aeabi_fsub+0x1a2>
    7720:	3e01      	subs	r6, #1
    7722:	2e00      	cmp	r6, #0
    7724:	d000      	beq.n	7728 <__aeabi_fsub+0x54>
    7726:	e0f7      	b.n	7918 <__aeabi_fsub+0x244>
    7728:	1a5b      	subs	r3, r3, r1
    772a:	015a      	lsls	r2, r3, #5
    772c:	d400      	bmi.n	7730 <__aeabi_fsub+0x5c>
    772e:	e08b      	b.n	7848 <__aeabi_fsub+0x174>
    7730:	019b      	lsls	r3, r3, #6
    7732:	099c      	lsrs	r4, r3, #6
    7734:	0020      	movs	r0, r4
    7736:	f002 f865 	bl	9804 <__clzsi2>
    773a:	3805      	subs	r0, #5
    773c:	4084      	lsls	r4, r0
    773e:	4285      	cmp	r5, r0
    7740:	dd00      	ble.n	7744 <__aeabi_fsub+0x70>
    7742:	e0d3      	b.n	78ec <__aeabi_fsub+0x218>
    7744:	1b45      	subs	r5, r0, r5
    7746:	0023      	movs	r3, r4
    7748:	2020      	movs	r0, #32
    774a:	3501      	adds	r5, #1
    774c:	40eb      	lsrs	r3, r5
    774e:	1b45      	subs	r5, r0, r5
    7750:	40ac      	lsls	r4, r5
    7752:	1e62      	subs	r2, r4, #1
    7754:	4194      	sbcs	r4, r2
    7756:	4323      	orrs	r3, r4
    7758:	2407      	movs	r4, #7
    775a:	2500      	movs	r5, #0
    775c:	401c      	ands	r4, r3
    775e:	2201      	movs	r2, #1
    7760:	4641      	mov	r1, r8
    7762:	400a      	ands	r2, r1
    7764:	2c00      	cmp	r4, #0
    7766:	d004      	beq.n	7772 <__aeabi_fsub+0x9e>
    7768:	210f      	movs	r1, #15
    776a:	4019      	ands	r1, r3
    776c:	2904      	cmp	r1, #4
    776e:	d000      	beq.n	7772 <__aeabi_fsub+0x9e>
    7770:	3304      	adds	r3, #4
    7772:	0159      	lsls	r1, r3, #5
    7774:	d400      	bmi.n	7778 <__aeabi_fsub+0xa4>
    7776:	e080      	b.n	787a <__aeabi_fsub+0x1a6>
    7778:	3501      	adds	r5, #1
    777a:	b2ec      	uxtb	r4, r5
    777c:	2dff      	cmp	r5, #255	; 0xff
    777e:	d000      	beq.n	7782 <__aeabi_fsub+0xae>
    7780:	e0a3      	b.n	78ca <__aeabi_fsub+0x1f6>
    7782:	24ff      	movs	r4, #255	; 0xff
    7784:	2300      	movs	r3, #0
    7786:	025b      	lsls	r3, r3, #9
    7788:	05e4      	lsls	r4, r4, #23
    778a:	0a58      	lsrs	r0, r3, #9
    778c:	07d2      	lsls	r2, r2, #31
    778e:	4320      	orrs	r0, r4
    7790:	4310      	orrs	r0, r2
    7792:	bc0c      	pop	{r2, r3}
    7794:	4690      	mov	r8, r2
    7796:	4699      	mov	r9, r3
    7798:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    779a:	2e00      	cmp	r6, #0
    779c:	d174      	bne.n	7888 <__aeabi_fsub+0x1b4>
    779e:	1c60      	adds	r0, r4, #1
    77a0:	b2c0      	uxtb	r0, r0
    77a2:	2801      	cmp	r0, #1
    77a4:	dc00      	bgt.n	77a8 <__aeabi_fsub+0xd4>
    77a6:	e0a7      	b.n	78f8 <__aeabi_fsub+0x224>
    77a8:	464a      	mov	r2, r9
    77aa:	1a9c      	subs	r4, r3, r2
    77ac:	0162      	lsls	r2, r4, #5
    77ae:	d500      	bpl.n	77b2 <__aeabi_fsub+0xde>
    77b0:	e0b6      	b.n	7920 <__aeabi_fsub+0x24c>
    77b2:	2c00      	cmp	r4, #0
    77b4:	d1be      	bne.n	7734 <__aeabi_fsub+0x60>
    77b6:	2200      	movs	r2, #0
    77b8:	2400      	movs	r4, #0
    77ba:	2300      	movs	r3, #0
    77bc:	e7e3      	b.n	7786 <__aeabi_fsub+0xb2>
    77be:	2e00      	cmp	r6, #0
    77c0:	dc00      	bgt.n	77c4 <__aeabi_fsub+0xf0>
    77c2:	e085      	b.n	78d0 <__aeabi_fsub+0x1fc>
    77c4:	2800      	cmp	r0, #0
    77c6:	d046      	beq.n	7856 <__aeabi_fsub+0x182>
    77c8:	2cff      	cmp	r4, #255	; 0xff
    77ca:	d049      	beq.n	7860 <__aeabi_fsub+0x18c>
    77cc:	2280      	movs	r2, #128	; 0x80
    77ce:	4648      	mov	r0, r9
    77d0:	04d2      	lsls	r2, r2, #19
    77d2:	4310      	orrs	r0, r2
    77d4:	4681      	mov	r9, r0
    77d6:	2201      	movs	r2, #1
    77d8:	2e1b      	cmp	r6, #27
    77da:	dc09      	bgt.n	77f0 <__aeabi_fsub+0x11c>
    77dc:	2020      	movs	r0, #32
    77de:	464c      	mov	r4, r9
    77e0:	1b80      	subs	r0, r0, r6
    77e2:	4084      	lsls	r4, r0
    77e4:	464a      	mov	r2, r9
    77e6:	0020      	movs	r0, r4
    77e8:	40f2      	lsrs	r2, r6
    77ea:	1e44      	subs	r4, r0, #1
    77ec:	41a0      	sbcs	r0, r4
    77ee:	4302      	orrs	r2, r0
    77f0:	189b      	adds	r3, r3, r2
    77f2:	015a      	lsls	r2, r3, #5
    77f4:	d528      	bpl.n	7848 <__aeabi_fsub+0x174>
    77f6:	3501      	adds	r5, #1
    77f8:	2dff      	cmp	r5, #255	; 0xff
    77fa:	d100      	bne.n	77fe <__aeabi_fsub+0x12a>
    77fc:	e0a8      	b.n	7950 <__aeabi_fsub+0x27c>
    77fe:	2201      	movs	r2, #1
    7800:	2407      	movs	r4, #7
    7802:	4994      	ldr	r1, [pc, #592]	; (7a54 <__aeabi_fsub+0x380>)
    7804:	401a      	ands	r2, r3
    7806:	085b      	lsrs	r3, r3, #1
    7808:	400b      	ands	r3, r1
    780a:	4313      	orrs	r3, r2
    780c:	401c      	ands	r4, r3
    780e:	e7a6      	b.n	775e <__aeabi_fsub+0x8a>
    7810:	2e00      	cmp	r6, #0
    7812:	d000      	beq.n	7816 <__aeabi_fsub+0x142>
    7814:	e778      	b.n	7708 <__aeabi_fsub+0x34>
    7816:	e775      	b.n	7704 <__aeabi_fsub+0x30>
    7818:	2cff      	cmp	r4, #255	; 0xff
    781a:	d054      	beq.n	78c6 <__aeabi_fsub+0x1f2>
    781c:	2280      	movs	r2, #128	; 0x80
    781e:	4649      	mov	r1, r9
    7820:	04d2      	lsls	r2, r2, #19
    7822:	4311      	orrs	r1, r2
    7824:	4689      	mov	r9, r1
    7826:	2201      	movs	r2, #1
    7828:	2e1b      	cmp	r6, #27
    782a:	dc09      	bgt.n	7840 <__aeabi_fsub+0x16c>
    782c:	2120      	movs	r1, #32
    782e:	4648      	mov	r0, r9
    7830:	1b89      	subs	r1, r1, r6
    7832:	4088      	lsls	r0, r1
    7834:	464a      	mov	r2, r9
    7836:	0001      	movs	r1, r0
    7838:	40f2      	lsrs	r2, r6
    783a:	1e48      	subs	r0, r1, #1
    783c:	4181      	sbcs	r1, r0
    783e:	430a      	orrs	r2, r1
    7840:	1a9b      	subs	r3, r3, r2
    7842:	015a      	lsls	r2, r3, #5
    7844:	d500      	bpl.n	7848 <__aeabi_fsub+0x174>
    7846:	e773      	b.n	7730 <__aeabi_fsub+0x5c>
    7848:	2201      	movs	r2, #1
    784a:	4641      	mov	r1, r8
    784c:	400a      	ands	r2, r1
    784e:	0759      	lsls	r1, r3, #29
    7850:	d000      	beq.n	7854 <__aeabi_fsub+0x180>
    7852:	e789      	b.n	7768 <__aeabi_fsub+0x94>
    7854:	e011      	b.n	787a <__aeabi_fsub+0x1a6>
    7856:	4648      	mov	r0, r9
    7858:	2800      	cmp	r0, #0
    785a:	d158      	bne.n	790e <__aeabi_fsub+0x23a>
    785c:	2cff      	cmp	r4, #255	; 0xff
    785e:	d10c      	bne.n	787a <__aeabi_fsub+0x1a6>
    7860:	08db      	lsrs	r3, r3, #3
    7862:	2b00      	cmp	r3, #0
    7864:	d100      	bne.n	7868 <__aeabi_fsub+0x194>
    7866:	e78c      	b.n	7782 <__aeabi_fsub+0xae>
    7868:	2080      	movs	r0, #128	; 0x80
    786a:	03c0      	lsls	r0, r0, #15
    786c:	4303      	orrs	r3, r0
    786e:	025b      	lsls	r3, r3, #9
    7870:	0a5b      	lsrs	r3, r3, #9
    7872:	24ff      	movs	r4, #255	; 0xff
    7874:	e787      	b.n	7786 <__aeabi_fsub+0xb2>
    7876:	2cff      	cmp	r4, #255	; 0xff
    7878:	d025      	beq.n	78c6 <__aeabi_fsub+0x1f2>
    787a:	08db      	lsrs	r3, r3, #3
    787c:	2dff      	cmp	r5, #255	; 0xff
    787e:	d0f0      	beq.n	7862 <__aeabi_fsub+0x18e>
    7880:	025b      	lsls	r3, r3, #9
    7882:	0a5b      	lsrs	r3, r3, #9
    7884:	b2ec      	uxtb	r4, r5
    7886:	e77e      	b.n	7786 <__aeabi_fsub+0xb2>
    7888:	2c00      	cmp	r4, #0
    788a:	d04d      	beq.n	7928 <__aeabi_fsub+0x254>
    788c:	28ff      	cmp	r0, #255	; 0xff
    788e:	d018      	beq.n	78c2 <__aeabi_fsub+0x1ee>
    7890:	2480      	movs	r4, #128	; 0x80
    7892:	04e4      	lsls	r4, r4, #19
    7894:	4272      	negs	r2, r6
    7896:	4323      	orrs	r3, r4
    7898:	2a1b      	cmp	r2, #27
    789a:	dd00      	ble.n	789e <__aeabi_fsub+0x1ca>
    789c:	e0c4      	b.n	7a28 <__aeabi_fsub+0x354>
    789e:	001c      	movs	r4, r3
    78a0:	2520      	movs	r5, #32
    78a2:	40d4      	lsrs	r4, r2
    78a4:	1aaa      	subs	r2, r5, r2
    78a6:	4093      	lsls	r3, r2
    78a8:	1e5a      	subs	r2, r3, #1
    78aa:	4193      	sbcs	r3, r2
    78ac:	4323      	orrs	r3, r4
    78ae:	464a      	mov	r2, r9
    78b0:	0005      	movs	r5, r0
    78b2:	1ad3      	subs	r3, r2, r3
    78b4:	4688      	mov	r8, r1
    78b6:	e738      	b.n	772a <__aeabi_fsub+0x56>
    78b8:	1c72      	adds	r2, r6, #1
    78ba:	d0f8      	beq.n	78ae <__aeabi_fsub+0x1da>
    78bc:	43f2      	mvns	r2, r6
    78be:	28ff      	cmp	r0, #255	; 0xff
    78c0:	d1ea      	bne.n	7898 <__aeabi_fsub+0x1c4>
    78c2:	000a      	movs	r2, r1
    78c4:	464b      	mov	r3, r9
    78c6:	25ff      	movs	r5, #255	; 0xff
    78c8:	e7d7      	b.n	787a <__aeabi_fsub+0x1a6>
    78ca:	019b      	lsls	r3, r3, #6
    78cc:	0a5b      	lsrs	r3, r3, #9
    78ce:	e75a      	b.n	7786 <__aeabi_fsub+0xb2>
    78d0:	2e00      	cmp	r6, #0
    78d2:	d141      	bne.n	7958 <__aeabi_fsub+0x284>
    78d4:	1c65      	adds	r5, r4, #1
    78d6:	b2e9      	uxtb	r1, r5
    78d8:	2901      	cmp	r1, #1
    78da:	dd45      	ble.n	7968 <__aeabi_fsub+0x294>
    78dc:	2dff      	cmp	r5, #255	; 0xff
    78de:	d100      	bne.n	78e2 <__aeabi_fsub+0x20e>
    78e0:	e74f      	b.n	7782 <__aeabi_fsub+0xae>
    78e2:	2407      	movs	r4, #7
    78e4:	444b      	add	r3, r9
    78e6:	085b      	lsrs	r3, r3, #1
    78e8:	401c      	ands	r4, r3
    78ea:	e738      	b.n	775e <__aeabi_fsub+0x8a>
    78ec:	2207      	movs	r2, #7
    78ee:	4b5a      	ldr	r3, [pc, #360]	; (7a58 <__aeabi_fsub+0x384>)
    78f0:	1a2d      	subs	r5, r5, r0
    78f2:	4023      	ands	r3, r4
    78f4:	4014      	ands	r4, r2
    78f6:	e732      	b.n	775e <__aeabi_fsub+0x8a>
    78f8:	2c00      	cmp	r4, #0
    78fa:	d11d      	bne.n	7938 <__aeabi_fsub+0x264>
    78fc:	2b00      	cmp	r3, #0
    78fe:	d17a      	bne.n	79f6 <__aeabi_fsub+0x322>
    7900:	464b      	mov	r3, r9
    7902:	2b00      	cmp	r3, #0
    7904:	d100      	bne.n	7908 <__aeabi_fsub+0x234>
    7906:	e091      	b.n	7a2c <__aeabi_fsub+0x358>
    7908:	000a      	movs	r2, r1
    790a:	2500      	movs	r5, #0
    790c:	e7b5      	b.n	787a <__aeabi_fsub+0x1a6>
    790e:	3e01      	subs	r6, #1
    7910:	2e00      	cmp	r6, #0
    7912:	d119      	bne.n	7948 <__aeabi_fsub+0x274>
    7914:	444b      	add	r3, r9
    7916:	e76c      	b.n	77f2 <__aeabi_fsub+0x11e>
    7918:	2cff      	cmp	r4, #255	; 0xff
    791a:	d184      	bne.n	7826 <__aeabi_fsub+0x152>
    791c:	25ff      	movs	r5, #255	; 0xff
    791e:	e7ac      	b.n	787a <__aeabi_fsub+0x1a6>
    7920:	464a      	mov	r2, r9
    7922:	4688      	mov	r8, r1
    7924:	1ad4      	subs	r4, r2, r3
    7926:	e705      	b.n	7734 <__aeabi_fsub+0x60>
    7928:	2b00      	cmp	r3, #0
    792a:	d1c5      	bne.n	78b8 <__aeabi_fsub+0x1e4>
    792c:	000a      	movs	r2, r1
    792e:	28ff      	cmp	r0, #255	; 0xff
    7930:	d0c8      	beq.n	78c4 <__aeabi_fsub+0x1f0>
    7932:	0005      	movs	r5, r0
    7934:	464b      	mov	r3, r9
    7936:	e7a0      	b.n	787a <__aeabi_fsub+0x1a6>
    7938:	2b00      	cmp	r3, #0
    793a:	d149      	bne.n	79d0 <__aeabi_fsub+0x2fc>
    793c:	464b      	mov	r3, r9
    793e:	2b00      	cmp	r3, #0
    7940:	d077      	beq.n	7a32 <__aeabi_fsub+0x35e>
    7942:	000a      	movs	r2, r1
    7944:	25ff      	movs	r5, #255	; 0xff
    7946:	e798      	b.n	787a <__aeabi_fsub+0x1a6>
    7948:	2cff      	cmp	r4, #255	; 0xff
    794a:	d000      	beq.n	794e <__aeabi_fsub+0x27a>
    794c:	e743      	b.n	77d6 <__aeabi_fsub+0x102>
    794e:	e787      	b.n	7860 <__aeabi_fsub+0x18c>
    7950:	000a      	movs	r2, r1
    7952:	24ff      	movs	r4, #255	; 0xff
    7954:	2300      	movs	r3, #0
    7956:	e716      	b.n	7786 <__aeabi_fsub+0xb2>
    7958:	2c00      	cmp	r4, #0
    795a:	d115      	bne.n	7988 <__aeabi_fsub+0x2b4>
    795c:	2b00      	cmp	r3, #0
    795e:	d157      	bne.n	7a10 <__aeabi_fsub+0x33c>
    7960:	28ff      	cmp	r0, #255	; 0xff
    7962:	d1e6      	bne.n	7932 <__aeabi_fsub+0x25e>
    7964:	464b      	mov	r3, r9
    7966:	e77b      	b.n	7860 <__aeabi_fsub+0x18c>
    7968:	2c00      	cmp	r4, #0
    796a:	d120      	bne.n	79ae <__aeabi_fsub+0x2da>
    796c:	2b00      	cmp	r3, #0
    796e:	d057      	beq.n	7a20 <__aeabi_fsub+0x34c>
    7970:	4649      	mov	r1, r9
    7972:	2900      	cmp	r1, #0
    7974:	d053      	beq.n	7a1e <__aeabi_fsub+0x34a>
    7976:	444b      	add	r3, r9
    7978:	015a      	lsls	r2, r3, #5
    797a:	d568      	bpl.n	7a4e <__aeabi_fsub+0x37a>
    797c:	2407      	movs	r4, #7
    797e:	4a36      	ldr	r2, [pc, #216]	; (7a58 <__aeabi_fsub+0x384>)
    7980:	401c      	ands	r4, r3
    7982:	2501      	movs	r5, #1
    7984:	4013      	ands	r3, r2
    7986:	e6ea      	b.n	775e <__aeabi_fsub+0x8a>
    7988:	28ff      	cmp	r0, #255	; 0xff
    798a:	d0eb      	beq.n	7964 <__aeabi_fsub+0x290>
    798c:	2280      	movs	r2, #128	; 0x80
    798e:	04d2      	lsls	r2, r2, #19
    7990:	4276      	negs	r6, r6
    7992:	4313      	orrs	r3, r2
    7994:	2e1b      	cmp	r6, #27
    7996:	dc53      	bgt.n	7a40 <__aeabi_fsub+0x36c>
    7998:	2520      	movs	r5, #32
    799a:	1bad      	subs	r5, r5, r6
    799c:	001a      	movs	r2, r3
    799e:	40ab      	lsls	r3, r5
    79a0:	40f2      	lsrs	r2, r6
    79a2:	1e5c      	subs	r4, r3, #1
    79a4:	41a3      	sbcs	r3, r4
    79a6:	4313      	orrs	r3, r2
    79a8:	444b      	add	r3, r9
    79aa:	0005      	movs	r5, r0
    79ac:	e721      	b.n	77f2 <__aeabi_fsub+0x11e>
    79ae:	2b00      	cmp	r3, #0
    79b0:	d0d8      	beq.n	7964 <__aeabi_fsub+0x290>
    79b2:	4649      	mov	r1, r9
    79b4:	2900      	cmp	r1, #0
    79b6:	d100      	bne.n	79ba <__aeabi_fsub+0x2e6>
    79b8:	e752      	b.n	7860 <__aeabi_fsub+0x18c>
    79ba:	2180      	movs	r1, #128	; 0x80
    79bc:	03c9      	lsls	r1, r1, #15
    79be:	420f      	tst	r7, r1
    79c0:	d100      	bne.n	79c4 <__aeabi_fsub+0x2f0>
    79c2:	e74d      	b.n	7860 <__aeabi_fsub+0x18c>
    79c4:	4660      	mov	r0, ip
    79c6:	4208      	tst	r0, r1
    79c8:	d000      	beq.n	79cc <__aeabi_fsub+0x2f8>
    79ca:	e749      	b.n	7860 <__aeabi_fsub+0x18c>
    79cc:	464b      	mov	r3, r9
    79ce:	e747      	b.n	7860 <__aeabi_fsub+0x18c>
    79d0:	4648      	mov	r0, r9
    79d2:	25ff      	movs	r5, #255	; 0xff
    79d4:	2800      	cmp	r0, #0
    79d6:	d100      	bne.n	79da <__aeabi_fsub+0x306>
    79d8:	e74f      	b.n	787a <__aeabi_fsub+0x1a6>
    79da:	2280      	movs	r2, #128	; 0x80
    79dc:	03d2      	lsls	r2, r2, #15
    79de:	4217      	tst	r7, r2
    79e0:	d004      	beq.n	79ec <__aeabi_fsub+0x318>
    79e2:	4660      	mov	r0, ip
    79e4:	4210      	tst	r0, r2
    79e6:	d101      	bne.n	79ec <__aeabi_fsub+0x318>
    79e8:	464b      	mov	r3, r9
    79ea:	4688      	mov	r8, r1
    79ec:	2201      	movs	r2, #1
    79ee:	4641      	mov	r1, r8
    79f0:	25ff      	movs	r5, #255	; 0xff
    79f2:	400a      	ands	r2, r1
    79f4:	e741      	b.n	787a <__aeabi_fsub+0x1a6>
    79f6:	4648      	mov	r0, r9
    79f8:	2800      	cmp	r0, #0
    79fa:	d01f      	beq.n	7a3c <__aeabi_fsub+0x368>
    79fc:	1a1a      	subs	r2, r3, r0
    79fe:	0150      	lsls	r0, r2, #5
    7a00:	d520      	bpl.n	7a44 <__aeabi_fsub+0x370>
    7a02:	464a      	mov	r2, r9
    7a04:	2407      	movs	r4, #7
    7a06:	1ad3      	subs	r3, r2, r3
    7a08:	401c      	ands	r4, r3
    7a0a:	4688      	mov	r8, r1
    7a0c:	2500      	movs	r5, #0
    7a0e:	e6a6      	b.n	775e <__aeabi_fsub+0x8a>
    7a10:	1c74      	adds	r4, r6, #1
    7a12:	d0c9      	beq.n	79a8 <__aeabi_fsub+0x2d4>
    7a14:	43f6      	mvns	r6, r6
    7a16:	28ff      	cmp	r0, #255	; 0xff
    7a18:	d1bc      	bne.n	7994 <__aeabi_fsub+0x2c0>
    7a1a:	464b      	mov	r3, r9
    7a1c:	e720      	b.n	7860 <__aeabi_fsub+0x18c>
    7a1e:	4699      	mov	r9, r3
    7a20:	464b      	mov	r3, r9
    7a22:	2500      	movs	r5, #0
    7a24:	08db      	lsrs	r3, r3, #3
    7a26:	e72b      	b.n	7880 <__aeabi_fsub+0x1ac>
    7a28:	2301      	movs	r3, #1
    7a2a:	e740      	b.n	78ae <__aeabi_fsub+0x1da>
    7a2c:	2200      	movs	r2, #0
    7a2e:	2300      	movs	r3, #0
    7a30:	e6a9      	b.n	7786 <__aeabi_fsub+0xb2>
    7a32:	2380      	movs	r3, #128	; 0x80
    7a34:	2200      	movs	r2, #0
    7a36:	03db      	lsls	r3, r3, #15
    7a38:	24ff      	movs	r4, #255	; 0xff
    7a3a:	e6a4      	b.n	7786 <__aeabi_fsub+0xb2>
    7a3c:	2500      	movs	r5, #0
    7a3e:	e71c      	b.n	787a <__aeabi_fsub+0x1a6>
    7a40:	2301      	movs	r3, #1
    7a42:	e7b1      	b.n	79a8 <__aeabi_fsub+0x2d4>
    7a44:	2a00      	cmp	r2, #0
    7a46:	d0f1      	beq.n	7a2c <__aeabi_fsub+0x358>
    7a48:	0013      	movs	r3, r2
    7a4a:	2500      	movs	r5, #0
    7a4c:	e6fc      	b.n	7848 <__aeabi_fsub+0x174>
    7a4e:	2500      	movs	r5, #0
    7a50:	e6fa      	b.n	7848 <__aeabi_fsub+0x174>
    7a52:	46c0      	nop			; (mov r8, r8)
    7a54:	7dffffff 	.word	0x7dffffff
    7a58:	fbffffff 	.word	0xfbffffff

00007a5c <__aeabi_f2iz>:
__aeabi_f2iz():
    7a5c:	0241      	lsls	r1, r0, #9
    7a5e:	0042      	lsls	r2, r0, #1
    7a60:	0fc3      	lsrs	r3, r0, #31
    7a62:	0a49      	lsrs	r1, r1, #9
    7a64:	0e12      	lsrs	r2, r2, #24
    7a66:	2000      	movs	r0, #0
    7a68:	2a7e      	cmp	r2, #126	; 0x7e
    7a6a:	d90d      	bls.n	7a88 <__aeabi_f2iz+0x2c>
    7a6c:	2a9d      	cmp	r2, #157	; 0x9d
    7a6e:	d80c      	bhi.n	7a8a <__aeabi_f2iz+0x2e>
    7a70:	2080      	movs	r0, #128	; 0x80
    7a72:	0400      	lsls	r0, r0, #16
    7a74:	4301      	orrs	r1, r0
    7a76:	2a95      	cmp	r2, #149	; 0x95
    7a78:	dc0a      	bgt.n	7a90 <__aeabi_f2iz+0x34>
    7a7a:	2096      	movs	r0, #150	; 0x96
    7a7c:	1a82      	subs	r2, r0, r2
    7a7e:	40d1      	lsrs	r1, r2
    7a80:	4248      	negs	r0, r1
    7a82:	2b00      	cmp	r3, #0
    7a84:	d100      	bne.n	7a88 <__aeabi_f2iz+0x2c>
    7a86:	0008      	movs	r0, r1
    7a88:	4770      	bx	lr
    7a8a:	4a03      	ldr	r2, [pc, #12]	; (7a98 <__aeabi_f2iz+0x3c>)
    7a8c:	1898      	adds	r0, r3, r2
    7a8e:	e7fb      	b.n	7a88 <__aeabi_f2iz+0x2c>
    7a90:	3a96      	subs	r2, #150	; 0x96
    7a92:	4091      	lsls	r1, r2
    7a94:	e7f4      	b.n	7a80 <__aeabi_f2iz+0x24>
    7a96:	46c0      	nop			; (mov r8, r8)
    7a98:	7fffffff 	.word	0x7fffffff

00007a9c <__aeabi_ui2f>:
__aeabi_ui2f():
    7a9c:	b570      	push	{r4, r5, r6, lr}
    7a9e:	1e04      	subs	r4, r0, #0
    7aa0:	d034      	beq.n	7b0c <__aeabi_ui2f+0x70>
    7aa2:	f001 feaf 	bl	9804 <__clzsi2>
    7aa6:	229e      	movs	r2, #158	; 0x9e
    7aa8:	1a12      	subs	r2, r2, r0
    7aaa:	2a96      	cmp	r2, #150	; 0x96
    7aac:	dc07      	bgt.n	7abe <__aeabi_ui2f+0x22>
    7aae:	b2d2      	uxtb	r2, r2
    7ab0:	2808      	cmp	r0, #8
    7ab2:	dd2e      	ble.n	7b12 <__aeabi_ui2f+0x76>
    7ab4:	3808      	subs	r0, #8
    7ab6:	4084      	lsls	r4, r0
    7ab8:	0260      	lsls	r0, r4, #9
    7aba:	0a40      	lsrs	r0, r0, #9
    7abc:	e021      	b.n	7b02 <__aeabi_ui2f+0x66>
    7abe:	2a99      	cmp	r2, #153	; 0x99
    7ac0:	dd09      	ble.n	7ad6 <__aeabi_ui2f+0x3a>
    7ac2:	0003      	movs	r3, r0
    7ac4:	0021      	movs	r1, r4
    7ac6:	331b      	adds	r3, #27
    7ac8:	4099      	lsls	r1, r3
    7aca:	1e4b      	subs	r3, r1, #1
    7acc:	4199      	sbcs	r1, r3
    7ace:	2305      	movs	r3, #5
    7ad0:	1a1b      	subs	r3, r3, r0
    7ad2:	40dc      	lsrs	r4, r3
    7ad4:	430c      	orrs	r4, r1
    7ad6:	2805      	cmp	r0, #5
    7ad8:	dd01      	ble.n	7ade <__aeabi_ui2f+0x42>
    7ada:	1f43      	subs	r3, r0, #5
    7adc:	409c      	lsls	r4, r3
    7ade:	0023      	movs	r3, r4
    7ae0:	490d      	ldr	r1, [pc, #52]	; (7b18 <__aeabi_ui2f+0x7c>)
    7ae2:	400b      	ands	r3, r1
    7ae4:	0765      	lsls	r5, r4, #29
    7ae6:	d009      	beq.n	7afc <__aeabi_ui2f+0x60>
    7ae8:	250f      	movs	r5, #15
    7aea:	402c      	ands	r4, r5
    7aec:	2c04      	cmp	r4, #4
    7aee:	d005      	beq.n	7afc <__aeabi_ui2f+0x60>
    7af0:	3304      	adds	r3, #4
    7af2:	015c      	lsls	r4, r3, #5
    7af4:	d502      	bpl.n	7afc <__aeabi_ui2f+0x60>
    7af6:	229f      	movs	r2, #159	; 0x9f
    7af8:	400b      	ands	r3, r1
    7afa:	1a12      	subs	r2, r2, r0
    7afc:	019b      	lsls	r3, r3, #6
    7afe:	0a58      	lsrs	r0, r3, #9
    7b00:	b2d2      	uxtb	r2, r2
    7b02:	0240      	lsls	r0, r0, #9
    7b04:	05d2      	lsls	r2, r2, #23
    7b06:	0a40      	lsrs	r0, r0, #9
    7b08:	4310      	orrs	r0, r2
    7b0a:	bd70      	pop	{r4, r5, r6, pc}
    7b0c:	2200      	movs	r2, #0
    7b0e:	2000      	movs	r0, #0
    7b10:	e7f7      	b.n	7b02 <__aeabi_ui2f+0x66>
    7b12:	0260      	lsls	r0, r4, #9
    7b14:	0a40      	lsrs	r0, r0, #9
    7b16:	e7f4      	b.n	7b02 <__aeabi_ui2f+0x66>
    7b18:	fbffffff 	.word	0xfbffffff

00007b1c <__aeabi_dadd>:
__aeabi_dadd():
    7b1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    7b1e:	464f      	mov	r7, r9
    7b20:	4646      	mov	r6, r8
    7b22:	46d6      	mov	lr, sl
    7b24:	000c      	movs	r4, r1
    7b26:	0309      	lsls	r1, r1, #12
    7b28:	b5c0      	push	{r6, r7, lr}
    7b2a:	0a49      	lsrs	r1, r1, #9
    7b2c:	0f47      	lsrs	r7, r0, #29
    7b2e:	005e      	lsls	r6, r3, #1
    7b30:	4339      	orrs	r1, r7
    7b32:	031f      	lsls	r7, r3, #12
    7b34:	0fdb      	lsrs	r3, r3, #31
    7b36:	469c      	mov	ip, r3
    7b38:	0065      	lsls	r5, r4, #1
    7b3a:	0a7b      	lsrs	r3, r7, #9
    7b3c:	0f57      	lsrs	r7, r2, #29
    7b3e:	431f      	orrs	r7, r3
    7b40:	0d6d      	lsrs	r5, r5, #21
    7b42:	0fe4      	lsrs	r4, r4, #31
    7b44:	0d76      	lsrs	r6, r6, #21
    7b46:	46a1      	mov	r9, r4
    7b48:	00c0      	lsls	r0, r0, #3
    7b4a:	46b8      	mov	r8, r7
    7b4c:	00d2      	lsls	r2, r2, #3
    7b4e:	1bab      	subs	r3, r5, r6
    7b50:	4564      	cmp	r4, ip
    7b52:	d07b      	beq.n	7c4c <__aeabi_dadd+0x130>
    7b54:	2b00      	cmp	r3, #0
    7b56:	dd5f      	ble.n	7c18 <__aeabi_dadd+0xfc>
    7b58:	2e00      	cmp	r6, #0
    7b5a:	d000      	beq.n	7b5e <__aeabi_dadd+0x42>
    7b5c:	e0a4      	b.n	7ca8 <__aeabi_dadd+0x18c>
    7b5e:	003e      	movs	r6, r7
    7b60:	4316      	orrs	r6, r2
    7b62:	d100      	bne.n	7b66 <__aeabi_dadd+0x4a>
    7b64:	e112      	b.n	7d8c <__aeabi_dadd+0x270>
    7b66:	1e5e      	subs	r6, r3, #1
    7b68:	2e00      	cmp	r6, #0
    7b6a:	d000      	beq.n	7b6e <__aeabi_dadd+0x52>
    7b6c:	e19e      	b.n	7eac <__aeabi_dadd+0x390>
    7b6e:	1a87      	subs	r7, r0, r2
    7b70:	4643      	mov	r3, r8
    7b72:	42b8      	cmp	r0, r7
    7b74:	4180      	sbcs	r0, r0
    7b76:	2501      	movs	r5, #1
    7b78:	1ac9      	subs	r1, r1, r3
    7b7a:	4240      	negs	r0, r0
    7b7c:	1a09      	subs	r1, r1, r0
    7b7e:	020b      	lsls	r3, r1, #8
    7b80:	d400      	bmi.n	7b84 <__aeabi_dadd+0x68>
    7b82:	e131      	b.n	7de8 <__aeabi_dadd+0x2cc>
    7b84:	0249      	lsls	r1, r1, #9
    7b86:	0a4e      	lsrs	r6, r1, #9
    7b88:	2e00      	cmp	r6, #0
    7b8a:	d100      	bne.n	7b8e <__aeabi_dadd+0x72>
    7b8c:	e16e      	b.n	7e6c <__aeabi_dadd+0x350>
    7b8e:	0030      	movs	r0, r6
    7b90:	f001 fe38 	bl	9804 <__clzsi2>
    7b94:	0003      	movs	r3, r0
    7b96:	3b08      	subs	r3, #8
    7b98:	2b1f      	cmp	r3, #31
    7b9a:	dd00      	ble.n	7b9e <__aeabi_dadd+0x82>
    7b9c:	e161      	b.n	7e62 <__aeabi_dadd+0x346>
    7b9e:	2220      	movs	r2, #32
    7ba0:	0039      	movs	r1, r7
    7ba2:	1ad2      	subs	r2, r2, r3
    7ba4:	409e      	lsls	r6, r3
    7ba6:	40d1      	lsrs	r1, r2
    7ba8:	409f      	lsls	r7, r3
    7baa:	430e      	orrs	r6, r1
    7bac:	429d      	cmp	r5, r3
    7bae:	dd00      	ble.n	7bb2 <__aeabi_dadd+0x96>
    7bb0:	e151      	b.n	7e56 <__aeabi_dadd+0x33a>
    7bb2:	1b5d      	subs	r5, r3, r5
    7bb4:	1c6b      	adds	r3, r5, #1
    7bb6:	2b1f      	cmp	r3, #31
    7bb8:	dd00      	ble.n	7bbc <__aeabi_dadd+0xa0>
    7bba:	e17c      	b.n	7eb6 <__aeabi_dadd+0x39a>
    7bbc:	2120      	movs	r1, #32
    7bbe:	1ac9      	subs	r1, r1, r3
    7bc0:	003d      	movs	r5, r7
    7bc2:	0030      	movs	r0, r6
    7bc4:	408f      	lsls	r7, r1
    7bc6:	4088      	lsls	r0, r1
    7bc8:	40dd      	lsrs	r5, r3
    7bca:	1e79      	subs	r1, r7, #1
    7bcc:	418f      	sbcs	r7, r1
    7bce:	0031      	movs	r1, r6
    7bd0:	2207      	movs	r2, #7
    7bd2:	4328      	orrs	r0, r5
    7bd4:	40d9      	lsrs	r1, r3
    7bd6:	2500      	movs	r5, #0
    7bd8:	4307      	orrs	r7, r0
    7bda:	403a      	ands	r2, r7
    7bdc:	2a00      	cmp	r2, #0
    7bde:	d009      	beq.n	7bf4 <__aeabi_dadd+0xd8>
    7be0:	230f      	movs	r3, #15
    7be2:	403b      	ands	r3, r7
    7be4:	2b04      	cmp	r3, #4
    7be6:	d005      	beq.n	7bf4 <__aeabi_dadd+0xd8>
    7be8:	1d3b      	adds	r3, r7, #4
    7bea:	42bb      	cmp	r3, r7
    7bec:	41bf      	sbcs	r7, r7
    7bee:	427f      	negs	r7, r7
    7bf0:	19c9      	adds	r1, r1, r7
    7bf2:	001f      	movs	r7, r3
    7bf4:	020b      	lsls	r3, r1, #8
    7bf6:	d400      	bmi.n	7bfa <__aeabi_dadd+0xde>
    7bf8:	e226      	b.n	8048 <__aeabi_dadd+0x52c>
    7bfa:	1c6a      	adds	r2, r5, #1
    7bfc:	4bc6      	ldr	r3, [pc, #792]	; (7f18 <__aeabi_dadd+0x3fc>)
    7bfe:	0555      	lsls	r5, r2, #21
    7c00:	0d6d      	lsrs	r5, r5, #21
    7c02:	429a      	cmp	r2, r3
    7c04:	d100      	bne.n	7c08 <__aeabi_dadd+0xec>
    7c06:	e106      	b.n	7e16 <__aeabi_dadd+0x2fa>
    7c08:	4ac4      	ldr	r2, [pc, #784]	; (7f1c <__aeabi_dadd+0x400>)
    7c0a:	08ff      	lsrs	r7, r7, #3
    7c0c:	400a      	ands	r2, r1
    7c0e:	0753      	lsls	r3, r2, #29
    7c10:	0252      	lsls	r2, r2, #9
    7c12:	433b      	orrs	r3, r7
    7c14:	0b12      	lsrs	r2, r2, #12
    7c16:	e08e      	b.n	7d36 <__aeabi_dadd+0x21a>
    7c18:	2b00      	cmp	r3, #0
    7c1a:	d000      	beq.n	7c1e <__aeabi_dadd+0x102>
    7c1c:	e0b8      	b.n	7d90 <__aeabi_dadd+0x274>
    7c1e:	1c6b      	adds	r3, r5, #1
    7c20:	055b      	lsls	r3, r3, #21
    7c22:	0d5b      	lsrs	r3, r3, #21
    7c24:	2b01      	cmp	r3, #1
    7c26:	dc00      	bgt.n	7c2a <__aeabi_dadd+0x10e>
    7c28:	e130      	b.n	7e8c <__aeabi_dadd+0x370>
    7c2a:	1a87      	subs	r7, r0, r2
    7c2c:	4643      	mov	r3, r8
    7c2e:	42b8      	cmp	r0, r7
    7c30:	41b6      	sbcs	r6, r6
    7c32:	1acb      	subs	r3, r1, r3
    7c34:	4276      	negs	r6, r6
    7c36:	1b9e      	subs	r6, r3, r6
    7c38:	0233      	lsls	r3, r6, #8
    7c3a:	d500      	bpl.n	7c3e <__aeabi_dadd+0x122>
    7c3c:	e14c      	b.n	7ed8 <__aeabi_dadd+0x3bc>
    7c3e:	003b      	movs	r3, r7
    7c40:	4333      	orrs	r3, r6
    7c42:	d1a1      	bne.n	7b88 <__aeabi_dadd+0x6c>
    7c44:	2200      	movs	r2, #0
    7c46:	2400      	movs	r4, #0
    7c48:	2500      	movs	r5, #0
    7c4a:	e070      	b.n	7d2e <__aeabi_dadd+0x212>
    7c4c:	2b00      	cmp	r3, #0
    7c4e:	dc00      	bgt.n	7c52 <__aeabi_dadd+0x136>
    7c50:	e0e5      	b.n	7e1e <__aeabi_dadd+0x302>
    7c52:	2e00      	cmp	r6, #0
    7c54:	d100      	bne.n	7c58 <__aeabi_dadd+0x13c>
    7c56:	e083      	b.n	7d60 <__aeabi_dadd+0x244>
    7c58:	4eaf      	ldr	r6, [pc, #700]	; (7f18 <__aeabi_dadd+0x3fc>)
    7c5a:	42b5      	cmp	r5, r6
    7c5c:	d060      	beq.n	7d20 <__aeabi_dadd+0x204>
    7c5e:	2680      	movs	r6, #128	; 0x80
    7c60:	0436      	lsls	r6, r6, #16
    7c62:	4337      	orrs	r7, r6
    7c64:	46b8      	mov	r8, r7
    7c66:	2b38      	cmp	r3, #56	; 0x38
    7c68:	dc00      	bgt.n	7c6c <__aeabi_dadd+0x150>
    7c6a:	e13e      	b.n	7eea <__aeabi_dadd+0x3ce>
    7c6c:	4643      	mov	r3, r8
    7c6e:	4313      	orrs	r3, r2
    7c70:	001f      	movs	r7, r3
    7c72:	1e7a      	subs	r2, r7, #1
    7c74:	4197      	sbcs	r7, r2
    7c76:	183f      	adds	r7, r7, r0
    7c78:	4287      	cmp	r7, r0
    7c7a:	4180      	sbcs	r0, r0
    7c7c:	4240      	negs	r0, r0
    7c7e:	1809      	adds	r1, r1, r0
    7c80:	020b      	lsls	r3, r1, #8
    7c82:	d400      	bmi.n	7c86 <__aeabi_dadd+0x16a>
    7c84:	e0b0      	b.n	7de8 <__aeabi_dadd+0x2cc>
    7c86:	4ba4      	ldr	r3, [pc, #656]	; (7f18 <__aeabi_dadd+0x3fc>)
    7c88:	3501      	adds	r5, #1
    7c8a:	429d      	cmp	r5, r3
    7c8c:	d100      	bne.n	7c90 <__aeabi_dadd+0x174>
    7c8e:	e0c3      	b.n	7e18 <__aeabi_dadd+0x2fc>
    7c90:	4aa2      	ldr	r2, [pc, #648]	; (7f1c <__aeabi_dadd+0x400>)
    7c92:	087b      	lsrs	r3, r7, #1
    7c94:	400a      	ands	r2, r1
    7c96:	2101      	movs	r1, #1
    7c98:	400f      	ands	r7, r1
    7c9a:	431f      	orrs	r7, r3
    7c9c:	0851      	lsrs	r1, r2, #1
    7c9e:	07d3      	lsls	r3, r2, #31
    7ca0:	2207      	movs	r2, #7
    7ca2:	431f      	orrs	r7, r3
    7ca4:	403a      	ands	r2, r7
    7ca6:	e799      	b.n	7bdc <__aeabi_dadd+0xc0>
    7ca8:	4e9b      	ldr	r6, [pc, #620]	; (7f18 <__aeabi_dadd+0x3fc>)
    7caa:	42b5      	cmp	r5, r6
    7cac:	d038      	beq.n	7d20 <__aeabi_dadd+0x204>
    7cae:	2680      	movs	r6, #128	; 0x80
    7cb0:	0436      	lsls	r6, r6, #16
    7cb2:	4337      	orrs	r7, r6
    7cb4:	46b8      	mov	r8, r7
    7cb6:	2b38      	cmp	r3, #56	; 0x38
    7cb8:	dd00      	ble.n	7cbc <__aeabi_dadd+0x1a0>
    7cba:	e0dc      	b.n	7e76 <__aeabi_dadd+0x35a>
    7cbc:	2b1f      	cmp	r3, #31
    7cbe:	dc00      	bgt.n	7cc2 <__aeabi_dadd+0x1a6>
    7cc0:	e130      	b.n	7f24 <__aeabi_dadd+0x408>
    7cc2:	001e      	movs	r6, r3
    7cc4:	4647      	mov	r7, r8
    7cc6:	3e20      	subs	r6, #32
    7cc8:	40f7      	lsrs	r7, r6
    7cca:	46bc      	mov	ip, r7
    7ccc:	2b20      	cmp	r3, #32
    7cce:	d004      	beq.n	7cda <__aeabi_dadd+0x1be>
    7cd0:	2640      	movs	r6, #64	; 0x40
    7cd2:	1af3      	subs	r3, r6, r3
    7cd4:	4646      	mov	r6, r8
    7cd6:	409e      	lsls	r6, r3
    7cd8:	4332      	orrs	r2, r6
    7cda:	0017      	movs	r7, r2
    7cdc:	4663      	mov	r3, ip
    7cde:	1e7a      	subs	r2, r7, #1
    7ce0:	4197      	sbcs	r7, r2
    7ce2:	431f      	orrs	r7, r3
    7ce4:	e0cc      	b.n	7e80 <__aeabi_dadd+0x364>
    7ce6:	2b00      	cmp	r3, #0
    7ce8:	d100      	bne.n	7cec <__aeabi_dadd+0x1d0>
    7cea:	e204      	b.n	80f6 <__aeabi_dadd+0x5da>
    7cec:	4643      	mov	r3, r8
    7cee:	4313      	orrs	r3, r2
    7cf0:	d100      	bne.n	7cf4 <__aeabi_dadd+0x1d8>
    7cf2:	e159      	b.n	7fa8 <__aeabi_dadd+0x48c>
    7cf4:	074b      	lsls	r3, r1, #29
    7cf6:	08c0      	lsrs	r0, r0, #3
    7cf8:	4318      	orrs	r0, r3
    7cfa:	2380      	movs	r3, #128	; 0x80
    7cfc:	08c9      	lsrs	r1, r1, #3
    7cfe:	031b      	lsls	r3, r3, #12
    7d00:	4219      	tst	r1, r3
    7d02:	d008      	beq.n	7d16 <__aeabi_dadd+0x1fa>
    7d04:	4645      	mov	r5, r8
    7d06:	08ed      	lsrs	r5, r5, #3
    7d08:	421d      	tst	r5, r3
    7d0a:	d104      	bne.n	7d16 <__aeabi_dadd+0x1fa>
    7d0c:	4643      	mov	r3, r8
    7d0e:	08d0      	lsrs	r0, r2, #3
    7d10:	0759      	lsls	r1, r3, #29
    7d12:	4308      	orrs	r0, r1
    7d14:	0029      	movs	r1, r5
    7d16:	0f42      	lsrs	r2, r0, #29
    7d18:	00c9      	lsls	r1, r1, #3
    7d1a:	4d7f      	ldr	r5, [pc, #508]	; (7f18 <__aeabi_dadd+0x3fc>)
    7d1c:	4311      	orrs	r1, r2
    7d1e:	00c0      	lsls	r0, r0, #3
    7d20:	074b      	lsls	r3, r1, #29
    7d22:	08ca      	lsrs	r2, r1, #3
    7d24:	497c      	ldr	r1, [pc, #496]	; (7f18 <__aeabi_dadd+0x3fc>)
    7d26:	08c0      	lsrs	r0, r0, #3
    7d28:	4303      	orrs	r3, r0
    7d2a:	428d      	cmp	r5, r1
    7d2c:	d068      	beq.n	7e00 <__aeabi_dadd+0x2e4>
    7d2e:	0312      	lsls	r2, r2, #12
    7d30:	056d      	lsls	r5, r5, #21
    7d32:	0b12      	lsrs	r2, r2, #12
    7d34:	0d6d      	lsrs	r5, r5, #21
    7d36:	2100      	movs	r1, #0
    7d38:	0312      	lsls	r2, r2, #12
    7d3a:	0018      	movs	r0, r3
    7d3c:	0b13      	lsrs	r3, r2, #12
    7d3e:	0d0a      	lsrs	r2, r1, #20
    7d40:	0512      	lsls	r2, r2, #20
    7d42:	431a      	orrs	r2, r3
    7d44:	4b76      	ldr	r3, [pc, #472]	; (7f20 <__aeabi_dadd+0x404>)
    7d46:	052d      	lsls	r5, r5, #20
    7d48:	4013      	ands	r3, r2
    7d4a:	432b      	orrs	r3, r5
    7d4c:	005b      	lsls	r3, r3, #1
    7d4e:	07e4      	lsls	r4, r4, #31
    7d50:	085b      	lsrs	r3, r3, #1
    7d52:	4323      	orrs	r3, r4
    7d54:	0019      	movs	r1, r3
    7d56:	bc1c      	pop	{r2, r3, r4}
    7d58:	4690      	mov	r8, r2
    7d5a:	4699      	mov	r9, r3
    7d5c:	46a2      	mov	sl, r4
    7d5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7d60:	003e      	movs	r6, r7
    7d62:	4316      	orrs	r6, r2
    7d64:	d012      	beq.n	7d8c <__aeabi_dadd+0x270>
    7d66:	1e5e      	subs	r6, r3, #1
    7d68:	2e00      	cmp	r6, #0
    7d6a:	d000      	beq.n	7d6e <__aeabi_dadd+0x252>
    7d6c:	e100      	b.n	7f70 <__aeabi_dadd+0x454>
    7d6e:	1887      	adds	r7, r0, r2
    7d70:	4287      	cmp	r7, r0
    7d72:	4180      	sbcs	r0, r0
    7d74:	4441      	add	r1, r8
    7d76:	4240      	negs	r0, r0
    7d78:	1809      	adds	r1, r1, r0
    7d7a:	2501      	movs	r5, #1
    7d7c:	020b      	lsls	r3, r1, #8
    7d7e:	d533      	bpl.n	7de8 <__aeabi_dadd+0x2cc>
    7d80:	2502      	movs	r5, #2
    7d82:	e785      	b.n	7c90 <__aeabi_dadd+0x174>
    7d84:	4664      	mov	r4, ip
    7d86:	0033      	movs	r3, r6
    7d88:	4641      	mov	r1, r8
    7d8a:	0010      	movs	r0, r2
    7d8c:	001d      	movs	r5, r3
    7d8e:	e7c7      	b.n	7d20 <__aeabi_dadd+0x204>
    7d90:	2d00      	cmp	r5, #0
    7d92:	d000      	beq.n	7d96 <__aeabi_dadd+0x27a>
    7d94:	e0da      	b.n	7f4c <__aeabi_dadd+0x430>
    7d96:	000c      	movs	r4, r1
    7d98:	4304      	orrs	r4, r0
    7d9a:	d0f3      	beq.n	7d84 <__aeabi_dadd+0x268>
    7d9c:	1c5c      	adds	r4, r3, #1
    7d9e:	d100      	bne.n	7da2 <__aeabi_dadd+0x286>
    7da0:	e19f      	b.n	80e2 <__aeabi_dadd+0x5c6>
    7da2:	4c5d      	ldr	r4, [pc, #372]	; (7f18 <__aeabi_dadd+0x3fc>)
    7da4:	42a6      	cmp	r6, r4
    7da6:	d100      	bne.n	7daa <__aeabi_dadd+0x28e>
    7da8:	e12f      	b.n	800a <__aeabi_dadd+0x4ee>
    7daa:	43db      	mvns	r3, r3
    7dac:	2b38      	cmp	r3, #56	; 0x38
    7dae:	dd00      	ble.n	7db2 <__aeabi_dadd+0x296>
    7db0:	e166      	b.n	8080 <__aeabi_dadd+0x564>
    7db2:	2b1f      	cmp	r3, #31
    7db4:	dd00      	ble.n	7db8 <__aeabi_dadd+0x29c>
    7db6:	e183      	b.n	80c0 <__aeabi_dadd+0x5a4>
    7db8:	2420      	movs	r4, #32
    7dba:	0005      	movs	r5, r0
    7dbc:	1ae4      	subs	r4, r4, r3
    7dbe:	000f      	movs	r7, r1
    7dc0:	40dd      	lsrs	r5, r3
    7dc2:	40d9      	lsrs	r1, r3
    7dc4:	40a0      	lsls	r0, r4
    7dc6:	4643      	mov	r3, r8
    7dc8:	40a7      	lsls	r7, r4
    7dca:	1a5b      	subs	r3, r3, r1
    7dcc:	1e44      	subs	r4, r0, #1
    7dce:	41a0      	sbcs	r0, r4
    7dd0:	4698      	mov	r8, r3
    7dd2:	432f      	orrs	r7, r5
    7dd4:	4338      	orrs	r0, r7
    7dd6:	1a17      	subs	r7, r2, r0
    7dd8:	42ba      	cmp	r2, r7
    7dda:	4192      	sbcs	r2, r2
    7ddc:	4643      	mov	r3, r8
    7dde:	4252      	negs	r2, r2
    7de0:	1a99      	subs	r1, r3, r2
    7de2:	4664      	mov	r4, ip
    7de4:	0035      	movs	r5, r6
    7de6:	e6ca      	b.n	7b7e <__aeabi_dadd+0x62>
    7de8:	2207      	movs	r2, #7
    7dea:	403a      	ands	r2, r7
    7dec:	2a00      	cmp	r2, #0
    7dee:	d000      	beq.n	7df2 <__aeabi_dadd+0x2d6>
    7df0:	e6f6      	b.n	7be0 <__aeabi_dadd+0xc4>
    7df2:	074b      	lsls	r3, r1, #29
    7df4:	08ca      	lsrs	r2, r1, #3
    7df6:	4948      	ldr	r1, [pc, #288]	; (7f18 <__aeabi_dadd+0x3fc>)
    7df8:	08ff      	lsrs	r7, r7, #3
    7dfa:	433b      	orrs	r3, r7
    7dfc:	428d      	cmp	r5, r1
    7dfe:	d196      	bne.n	7d2e <__aeabi_dadd+0x212>
    7e00:	0019      	movs	r1, r3
    7e02:	4311      	orrs	r1, r2
    7e04:	d100      	bne.n	7e08 <__aeabi_dadd+0x2ec>
    7e06:	e19e      	b.n	8146 <__aeabi_dadd+0x62a>
    7e08:	2180      	movs	r1, #128	; 0x80
    7e0a:	0309      	lsls	r1, r1, #12
    7e0c:	430a      	orrs	r2, r1
    7e0e:	0312      	lsls	r2, r2, #12
    7e10:	0b12      	lsrs	r2, r2, #12
    7e12:	4d41      	ldr	r5, [pc, #260]	; (7f18 <__aeabi_dadd+0x3fc>)
    7e14:	e78f      	b.n	7d36 <__aeabi_dadd+0x21a>
    7e16:	0015      	movs	r5, r2
    7e18:	2200      	movs	r2, #0
    7e1a:	2300      	movs	r3, #0
    7e1c:	e78b      	b.n	7d36 <__aeabi_dadd+0x21a>
    7e1e:	2b00      	cmp	r3, #0
    7e20:	d000      	beq.n	7e24 <__aeabi_dadd+0x308>
    7e22:	e0c7      	b.n	7fb4 <__aeabi_dadd+0x498>
    7e24:	1c6b      	adds	r3, r5, #1
    7e26:	055f      	lsls	r7, r3, #21
    7e28:	0d7f      	lsrs	r7, r7, #21
    7e2a:	2f01      	cmp	r7, #1
    7e2c:	dc00      	bgt.n	7e30 <__aeabi_dadd+0x314>
    7e2e:	e0f1      	b.n	8014 <__aeabi_dadd+0x4f8>
    7e30:	4d39      	ldr	r5, [pc, #228]	; (7f18 <__aeabi_dadd+0x3fc>)
    7e32:	42ab      	cmp	r3, r5
    7e34:	d100      	bne.n	7e38 <__aeabi_dadd+0x31c>
    7e36:	e0b9      	b.n	7fac <__aeabi_dadd+0x490>
    7e38:	1885      	adds	r5, r0, r2
    7e3a:	000a      	movs	r2, r1
    7e3c:	4285      	cmp	r5, r0
    7e3e:	4189      	sbcs	r1, r1
    7e40:	4442      	add	r2, r8
    7e42:	4249      	negs	r1, r1
    7e44:	1851      	adds	r1, r2, r1
    7e46:	2207      	movs	r2, #7
    7e48:	07cf      	lsls	r7, r1, #31
    7e4a:	086d      	lsrs	r5, r5, #1
    7e4c:	432f      	orrs	r7, r5
    7e4e:	0849      	lsrs	r1, r1, #1
    7e50:	403a      	ands	r2, r7
    7e52:	001d      	movs	r5, r3
    7e54:	e6c2      	b.n	7bdc <__aeabi_dadd+0xc0>
    7e56:	2207      	movs	r2, #7
    7e58:	4930      	ldr	r1, [pc, #192]	; (7f1c <__aeabi_dadd+0x400>)
    7e5a:	1aed      	subs	r5, r5, r3
    7e5c:	4031      	ands	r1, r6
    7e5e:	403a      	ands	r2, r7
    7e60:	e6bc      	b.n	7bdc <__aeabi_dadd+0xc0>
    7e62:	003e      	movs	r6, r7
    7e64:	3828      	subs	r0, #40	; 0x28
    7e66:	4086      	lsls	r6, r0
    7e68:	2700      	movs	r7, #0
    7e6a:	e69f      	b.n	7bac <__aeabi_dadd+0x90>
    7e6c:	0038      	movs	r0, r7
    7e6e:	f001 fcc9 	bl	9804 <__clzsi2>
    7e72:	3020      	adds	r0, #32
    7e74:	e68e      	b.n	7b94 <__aeabi_dadd+0x78>
    7e76:	4643      	mov	r3, r8
    7e78:	4313      	orrs	r3, r2
    7e7a:	001f      	movs	r7, r3
    7e7c:	1e7a      	subs	r2, r7, #1
    7e7e:	4197      	sbcs	r7, r2
    7e80:	1bc7      	subs	r7, r0, r7
    7e82:	42b8      	cmp	r0, r7
    7e84:	4180      	sbcs	r0, r0
    7e86:	4240      	negs	r0, r0
    7e88:	1a09      	subs	r1, r1, r0
    7e8a:	e678      	b.n	7b7e <__aeabi_dadd+0x62>
    7e8c:	000e      	movs	r6, r1
    7e8e:	003b      	movs	r3, r7
    7e90:	4306      	orrs	r6, r0
    7e92:	4313      	orrs	r3, r2
    7e94:	2d00      	cmp	r5, #0
    7e96:	d161      	bne.n	7f5c <__aeabi_dadd+0x440>
    7e98:	2e00      	cmp	r6, #0
    7e9a:	d000      	beq.n	7e9e <__aeabi_dadd+0x382>
    7e9c:	e0f4      	b.n	8088 <__aeabi_dadd+0x56c>
    7e9e:	2b00      	cmp	r3, #0
    7ea0:	d100      	bne.n	7ea4 <__aeabi_dadd+0x388>
    7ea2:	e11b      	b.n	80dc <__aeabi_dadd+0x5c0>
    7ea4:	4664      	mov	r4, ip
    7ea6:	0039      	movs	r1, r7
    7ea8:	0010      	movs	r0, r2
    7eaa:	e739      	b.n	7d20 <__aeabi_dadd+0x204>
    7eac:	4f1a      	ldr	r7, [pc, #104]	; (7f18 <__aeabi_dadd+0x3fc>)
    7eae:	42bb      	cmp	r3, r7
    7eb0:	d07a      	beq.n	7fa8 <__aeabi_dadd+0x48c>
    7eb2:	0033      	movs	r3, r6
    7eb4:	e6ff      	b.n	7cb6 <__aeabi_dadd+0x19a>
    7eb6:	0030      	movs	r0, r6
    7eb8:	3d1f      	subs	r5, #31
    7eba:	40e8      	lsrs	r0, r5
    7ebc:	2b20      	cmp	r3, #32
    7ebe:	d003      	beq.n	7ec8 <__aeabi_dadd+0x3ac>
    7ec0:	2140      	movs	r1, #64	; 0x40
    7ec2:	1acb      	subs	r3, r1, r3
    7ec4:	409e      	lsls	r6, r3
    7ec6:	4337      	orrs	r7, r6
    7ec8:	1e7b      	subs	r3, r7, #1
    7eca:	419f      	sbcs	r7, r3
    7ecc:	2207      	movs	r2, #7
    7ece:	4307      	orrs	r7, r0
    7ed0:	403a      	ands	r2, r7
    7ed2:	2100      	movs	r1, #0
    7ed4:	2500      	movs	r5, #0
    7ed6:	e789      	b.n	7dec <__aeabi_dadd+0x2d0>
    7ed8:	1a17      	subs	r7, r2, r0
    7eda:	4643      	mov	r3, r8
    7edc:	42ba      	cmp	r2, r7
    7ede:	41b6      	sbcs	r6, r6
    7ee0:	1a59      	subs	r1, r3, r1
    7ee2:	4276      	negs	r6, r6
    7ee4:	1b8e      	subs	r6, r1, r6
    7ee6:	4664      	mov	r4, ip
    7ee8:	e64e      	b.n	7b88 <__aeabi_dadd+0x6c>
    7eea:	2b1f      	cmp	r3, #31
    7eec:	dd00      	ble.n	7ef0 <__aeabi_dadd+0x3d4>
    7eee:	e0ad      	b.n	804c <__aeabi_dadd+0x530>
    7ef0:	2620      	movs	r6, #32
    7ef2:	4647      	mov	r7, r8
    7ef4:	1af6      	subs	r6, r6, r3
    7ef6:	40b7      	lsls	r7, r6
    7ef8:	46b9      	mov	r9, r7
    7efa:	0017      	movs	r7, r2
    7efc:	46b2      	mov	sl, r6
    7efe:	40df      	lsrs	r7, r3
    7f00:	464e      	mov	r6, r9
    7f02:	433e      	orrs	r6, r7
    7f04:	0037      	movs	r7, r6
    7f06:	4656      	mov	r6, sl
    7f08:	40b2      	lsls	r2, r6
    7f0a:	1e56      	subs	r6, r2, #1
    7f0c:	41b2      	sbcs	r2, r6
    7f0e:	4317      	orrs	r7, r2
    7f10:	4642      	mov	r2, r8
    7f12:	40da      	lsrs	r2, r3
    7f14:	1889      	adds	r1, r1, r2
    7f16:	e6ae      	b.n	7c76 <__aeabi_dadd+0x15a>
    7f18:	000007ff 	.word	0x000007ff
    7f1c:	ff7fffff 	.word	0xff7fffff
    7f20:	800fffff 	.word	0x800fffff
    7f24:	2620      	movs	r6, #32
    7f26:	4647      	mov	r7, r8
    7f28:	1af6      	subs	r6, r6, r3
    7f2a:	40b7      	lsls	r7, r6
    7f2c:	46b9      	mov	r9, r7
    7f2e:	0017      	movs	r7, r2
    7f30:	46b2      	mov	sl, r6
    7f32:	40df      	lsrs	r7, r3
    7f34:	464e      	mov	r6, r9
    7f36:	433e      	orrs	r6, r7
    7f38:	0037      	movs	r7, r6
    7f3a:	4656      	mov	r6, sl
    7f3c:	40b2      	lsls	r2, r6
    7f3e:	1e56      	subs	r6, r2, #1
    7f40:	41b2      	sbcs	r2, r6
    7f42:	4317      	orrs	r7, r2
    7f44:	4642      	mov	r2, r8
    7f46:	40da      	lsrs	r2, r3
    7f48:	1a89      	subs	r1, r1, r2
    7f4a:	e799      	b.n	7e80 <__aeabi_dadd+0x364>
    7f4c:	4c7f      	ldr	r4, [pc, #508]	; (814c <__aeabi_dadd+0x630>)
    7f4e:	42a6      	cmp	r6, r4
    7f50:	d05b      	beq.n	800a <__aeabi_dadd+0x4ee>
    7f52:	2480      	movs	r4, #128	; 0x80
    7f54:	0424      	lsls	r4, r4, #16
    7f56:	425b      	negs	r3, r3
    7f58:	4321      	orrs	r1, r4
    7f5a:	e727      	b.n	7dac <__aeabi_dadd+0x290>
    7f5c:	2e00      	cmp	r6, #0
    7f5e:	d10c      	bne.n	7f7a <__aeabi_dadd+0x45e>
    7f60:	2b00      	cmp	r3, #0
    7f62:	d100      	bne.n	7f66 <__aeabi_dadd+0x44a>
    7f64:	e0cb      	b.n	80fe <__aeabi_dadd+0x5e2>
    7f66:	4664      	mov	r4, ip
    7f68:	0039      	movs	r1, r7
    7f6a:	0010      	movs	r0, r2
    7f6c:	4d77      	ldr	r5, [pc, #476]	; (814c <__aeabi_dadd+0x630>)
    7f6e:	e6d7      	b.n	7d20 <__aeabi_dadd+0x204>
    7f70:	4f76      	ldr	r7, [pc, #472]	; (814c <__aeabi_dadd+0x630>)
    7f72:	42bb      	cmp	r3, r7
    7f74:	d018      	beq.n	7fa8 <__aeabi_dadd+0x48c>
    7f76:	0033      	movs	r3, r6
    7f78:	e675      	b.n	7c66 <__aeabi_dadd+0x14a>
    7f7a:	2b00      	cmp	r3, #0
    7f7c:	d014      	beq.n	7fa8 <__aeabi_dadd+0x48c>
    7f7e:	074b      	lsls	r3, r1, #29
    7f80:	08c0      	lsrs	r0, r0, #3
    7f82:	4318      	orrs	r0, r3
    7f84:	2380      	movs	r3, #128	; 0x80
    7f86:	08c9      	lsrs	r1, r1, #3
    7f88:	031b      	lsls	r3, r3, #12
    7f8a:	4219      	tst	r1, r3
    7f8c:	d007      	beq.n	7f9e <__aeabi_dadd+0x482>
    7f8e:	08fc      	lsrs	r4, r7, #3
    7f90:	421c      	tst	r4, r3
    7f92:	d104      	bne.n	7f9e <__aeabi_dadd+0x482>
    7f94:	0779      	lsls	r1, r7, #29
    7f96:	08d0      	lsrs	r0, r2, #3
    7f98:	4308      	orrs	r0, r1
    7f9a:	46e1      	mov	r9, ip
    7f9c:	0021      	movs	r1, r4
    7f9e:	464c      	mov	r4, r9
    7fa0:	0f42      	lsrs	r2, r0, #29
    7fa2:	00c9      	lsls	r1, r1, #3
    7fa4:	4311      	orrs	r1, r2
    7fa6:	00c0      	lsls	r0, r0, #3
    7fa8:	4d68      	ldr	r5, [pc, #416]	; (814c <__aeabi_dadd+0x630>)
    7faa:	e6b9      	b.n	7d20 <__aeabi_dadd+0x204>
    7fac:	001d      	movs	r5, r3
    7fae:	2200      	movs	r2, #0
    7fb0:	2300      	movs	r3, #0
    7fb2:	e6c0      	b.n	7d36 <__aeabi_dadd+0x21a>
    7fb4:	2d00      	cmp	r5, #0
    7fb6:	d15b      	bne.n	8070 <__aeabi_dadd+0x554>
    7fb8:	000d      	movs	r5, r1
    7fba:	4305      	orrs	r5, r0
    7fbc:	d100      	bne.n	7fc0 <__aeabi_dadd+0x4a4>
    7fbe:	e6e2      	b.n	7d86 <__aeabi_dadd+0x26a>
    7fc0:	1c5d      	adds	r5, r3, #1
    7fc2:	d100      	bne.n	7fc6 <__aeabi_dadd+0x4aa>
    7fc4:	e0b0      	b.n	8128 <__aeabi_dadd+0x60c>
    7fc6:	4d61      	ldr	r5, [pc, #388]	; (814c <__aeabi_dadd+0x630>)
    7fc8:	42ae      	cmp	r6, r5
    7fca:	d01f      	beq.n	800c <__aeabi_dadd+0x4f0>
    7fcc:	43db      	mvns	r3, r3
    7fce:	2b38      	cmp	r3, #56	; 0x38
    7fd0:	dc71      	bgt.n	80b6 <__aeabi_dadd+0x59a>
    7fd2:	2b1f      	cmp	r3, #31
    7fd4:	dd00      	ble.n	7fd8 <__aeabi_dadd+0x4bc>
    7fd6:	e096      	b.n	8106 <__aeabi_dadd+0x5ea>
    7fd8:	2520      	movs	r5, #32
    7fda:	000f      	movs	r7, r1
    7fdc:	1aed      	subs	r5, r5, r3
    7fde:	40af      	lsls	r7, r5
    7fe0:	46b9      	mov	r9, r7
    7fe2:	0007      	movs	r7, r0
    7fe4:	46aa      	mov	sl, r5
    7fe6:	40df      	lsrs	r7, r3
    7fe8:	464d      	mov	r5, r9
    7fea:	433d      	orrs	r5, r7
    7fec:	002f      	movs	r7, r5
    7fee:	4655      	mov	r5, sl
    7ff0:	40a8      	lsls	r0, r5
    7ff2:	40d9      	lsrs	r1, r3
    7ff4:	1e45      	subs	r5, r0, #1
    7ff6:	41a8      	sbcs	r0, r5
    7ff8:	4488      	add	r8, r1
    7ffa:	4307      	orrs	r7, r0
    7ffc:	18bf      	adds	r7, r7, r2
    7ffe:	4297      	cmp	r7, r2
    8000:	4192      	sbcs	r2, r2
    8002:	4251      	negs	r1, r2
    8004:	4441      	add	r1, r8
    8006:	0035      	movs	r5, r6
    8008:	e63a      	b.n	7c80 <__aeabi_dadd+0x164>
    800a:	4664      	mov	r4, ip
    800c:	0035      	movs	r5, r6
    800e:	4641      	mov	r1, r8
    8010:	0010      	movs	r0, r2
    8012:	e685      	b.n	7d20 <__aeabi_dadd+0x204>
    8014:	000b      	movs	r3, r1
    8016:	4303      	orrs	r3, r0
    8018:	2d00      	cmp	r5, #0
    801a:	d000      	beq.n	801e <__aeabi_dadd+0x502>
    801c:	e663      	b.n	7ce6 <__aeabi_dadd+0x1ca>
    801e:	2b00      	cmp	r3, #0
    8020:	d0f5      	beq.n	800e <__aeabi_dadd+0x4f2>
    8022:	4643      	mov	r3, r8
    8024:	4313      	orrs	r3, r2
    8026:	d100      	bne.n	802a <__aeabi_dadd+0x50e>
    8028:	e67a      	b.n	7d20 <__aeabi_dadd+0x204>
    802a:	1887      	adds	r7, r0, r2
    802c:	4287      	cmp	r7, r0
    802e:	4180      	sbcs	r0, r0
    8030:	2207      	movs	r2, #7
    8032:	4441      	add	r1, r8
    8034:	4240      	negs	r0, r0
    8036:	1809      	adds	r1, r1, r0
    8038:	403a      	ands	r2, r7
    803a:	020b      	lsls	r3, r1, #8
    803c:	d400      	bmi.n	8040 <__aeabi_dadd+0x524>
    803e:	e6d5      	b.n	7dec <__aeabi_dadd+0x2d0>
    8040:	4b43      	ldr	r3, [pc, #268]	; (8150 <__aeabi_dadd+0x634>)
    8042:	3501      	adds	r5, #1
    8044:	4019      	ands	r1, r3
    8046:	e5c9      	b.n	7bdc <__aeabi_dadd+0xc0>
    8048:	0038      	movs	r0, r7
    804a:	e669      	b.n	7d20 <__aeabi_dadd+0x204>
    804c:	001e      	movs	r6, r3
    804e:	4647      	mov	r7, r8
    8050:	3e20      	subs	r6, #32
    8052:	40f7      	lsrs	r7, r6
    8054:	46bc      	mov	ip, r7
    8056:	2b20      	cmp	r3, #32
    8058:	d004      	beq.n	8064 <__aeabi_dadd+0x548>
    805a:	2640      	movs	r6, #64	; 0x40
    805c:	1af3      	subs	r3, r6, r3
    805e:	4646      	mov	r6, r8
    8060:	409e      	lsls	r6, r3
    8062:	4332      	orrs	r2, r6
    8064:	0017      	movs	r7, r2
    8066:	4663      	mov	r3, ip
    8068:	1e7a      	subs	r2, r7, #1
    806a:	4197      	sbcs	r7, r2
    806c:	431f      	orrs	r7, r3
    806e:	e602      	b.n	7c76 <__aeabi_dadd+0x15a>
    8070:	4d36      	ldr	r5, [pc, #216]	; (814c <__aeabi_dadd+0x630>)
    8072:	42ae      	cmp	r6, r5
    8074:	d0ca      	beq.n	800c <__aeabi_dadd+0x4f0>
    8076:	2580      	movs	r5, #128	; 0x80
    8078:	042d      	lsls	r5, r5, #16
    807a:	425b      	negs	r3, r3
    807c:	4329      	orrs	r1, r5
    807e:	e7a6      	b.n	7fce <__aeabi_dadd+0x4b2>
    8080:	4308      	orrs	r0, r1
    8082:	1e41      	subs	r1, r0, #1
    8084:	4188      	sbcs	r0, r1
    8086:	e6a6      	b.n	7dd6 <__aeabi_dadd+0x2ba>
    8088:	2b00      	cmp	r3, #0
    808a:	d100      	bne.n	808e <__aeabi_dadd+0x572>
    808c:	e648      	b.n	7d20 <__aeabi_dadd+0x204>
    808e:	1a87      	subs	r7, r0, r2
    8090:	4643      	mov	r3, r8
    8092:	42b8      	cmp	r0, r7
    8094:	41b6      	sbcs	r6, r6
    8096:	1acb      	subs	r3, r1, r3
    8098:	4276      	negs	r6, r6
    809a:	1b9e      	subs	r6, r3, r6
    809c:	0233      	lsls	r3, r6, #8
    809e:	d54b      	bpl.n	8138 <__aeabi_dadd+0x61c>
    80a0:	1a17      	subs	r7, r2, r0
    80a2:	4643      	mov	r3, r8
    80a4:	42ba      	cmp	r2, r7
    80a6:	4192      	sbcs	r2, r2
    80a8:	1a59      	subs	r1, r3, r1
    80aa:	4252      	negs	r2, r2
    80ac:	1a89      	subs	r1, r1, r2
    80ae:	2207      	movs	r2, #7
    80b0:	4664      	mov	r4, ip
    80b2:	403a      	ands	r2, r7
    80b4:	e592      	b.n	7bdc <__aeabi_dadd+0xc0>
    80b6:	4301      	orrs	r1, r0
    80b8:	000f      	movs	r7, r1
    80ba:	1e79      	subs	r1, r7, #1
    80bc:	418f      	sbcs	r7, r1
    80be:	e79d      	b.n	7ffc <__aeabi_dadd+0x4e0>
    80c0:	001c      	movs	r4, r3
    80c2:	000f      	movs	r7, r1
    80c4:	3c20      	subs	r4, #32
    80c6:	40e7      	lsrs	r7, r4
    80c8:	2b20      	cmp	r3, #32
    80ca:	d003      	beq.n	80d4 <__aeabi_dadd+0x5b8>
    80cc:	2440      	movs	r4, #64	; 0x40
    80ce:	1ae3      	subs	r3, r4, r3
    80d0:	4099      	lsls	r1, r3
    80d2:	4308      	orrs	r0, r1
    80d4:	1e41      	subs	r1, r0, #1
    80d6:	4188      	sbcs	r0, r1
    80d8:	4338      	orrs	r0, r7
    80da:	e67c      	b.n	7dd6 <__aeabi_dadd+0x2ba>
    80dc:	2200      	movs	r2, #0
    80de:	2400      	movs	r4, #0
    80e0:	e625      	b.n	7d2e <__aeabi_dadd+0x212>
    80e2:	1a17      	subs	r7, r2, r0
    80e4:	4643      	mov	r3, r8
    80e6:	42ba      	cmp	r2, r7
    80e8:	4192      	sbcs	r2, r2
    80ea:	1a59      	subs	r1, r3, r1
    80ec:	4252      	negs	r2, r2
    80ee:	1a89      	subs	r1, r1, r2
    80f0:	4664      	mov	r4, ip
    80f2:	0035      	movs	r5, r6
    80f4:	e543      	b.n	7b7e <__aeabi_dadd+0x62>
    80f6:	4641      	mov	r1, r8
    80f8:	0010      	movs	r0, r2
    80fa:	4d14      	ldr	r5, [pc, #80]	; (814c <__aeabi_dadd+0x630>)
    80fc:	e610      	b.n	7d20 <__aeabi_dadd+0x204>
    80fe:	2280      	movs	r2, #128	; 0x80
    8100:	2400      	movs	r4, #0
    8102:	0312      	lsls	r2, r2, #12
    8104:	e680      	b.n	7e08 <__aeabi_dadd+0x2ec>
    8106:	001d      	movs	r5, r3
    8108:	000f      	movs	r7, r1
    810a:	3d20      	subs	r5, #32
    810c:	40ef      	lsrs	r7, r5
    810e:	46bc      	mov	ip, r7
    8110:	2b20      	cmp	r3, #32
    8112:	d003      	beq.n	811c <__aeabi_dadd+0x600>
    8114:	2540      	movs	r5, #64	; 0x40
    8116:	1aeb      	subs	r3, r5, r3
    8118:	4099      	lsls	r1, r3
    811a:	4308      	orrs	r0, r1
    811c:	0007      	movs	r7, r0
    811e:	4663      	mov	r3, ip
    8120:	1e78      	subs	r0, r7, #1
    8122:	4187      	sbcs	r7, r0
    8124:	431f      	orrs	r7, r3
    8126:	e769      	b.n	7ffc <__aeabi_dadd+0x4e0>
    8128:	1887      	adds	r7, r0, r2
    812a:	4297      	cmp	r7, r2
    812c:	419b      	sbcs	r3, r3
    812e:	4441      	add	r1, r8
    8130:	425b      	negs	r3, r3
    8132:	18c9      	adds	r1, r1, r3
    8134:	0035      	movs	r5, r6
    8136:	e5a3      	b.n	7c80 <__aeabi_dadd+0x164>
    8138:	003b      	movs	r3, r7
    813a:	4333      	orrs	r3, r6
    813c:	d0ce      	beq.n	80dc <__aeabi_dadd+0x5c0>
    813e:	2207      	movs	r2, #7
    8140:	0031      	movs	r1, r6
    8142:	403a      	ands	r2, r7
    8144:	e652      	b.n	7dec <__aeabi_dadd+0x2d0>
    8146:	2300      	movs	r3, #0
    8148:	001a      	movs	r2, r3
    814a:	e5f4      	b.n	7d36 <__aeabi_dadd+0x21a>
    814c:	000007ff 	.word	0x000007ff
    8150:	ff7fffff 	.word	0xff7fffff

00008154 <__aeabi_ddiv>:
__aeabi_ddiv():
    8154:	b5f0      	push	{r4, r5, r6, r7, lr}
    8156:	4657      	mov	r7, sl
    8158:	46de      	mov	lr, fp
    815a:	464e      	mov	r6, r9
    815c:	4645      	mov	r5, r8
    815e:	b5e0      	push	{r5, r6, r7, lr}
    8160:	4683      	mov	fp, r0
    8162:	0007      	movs	r7, r0
    8164:	030e      	lsls	r6, r1, #12
    8166:	0048      	lsls	r0, r1, #1
    8168:	b085      	sub	sp, #20
    816a:	4692      	mov	sl, r2
    816c:	001c      	movs	r4, r3
    816e:	0b36      	lsrs	r6, r6, #12
    8170:	0d40      	lsrs	r0, r0, #21
    8172:	0fcd      	lsrs	r5, r1, #31
    8174:	2800      	cmp	r0, #0
    8176:	d100      	bne.n	817a <__aeabi_ddiv+0x26>
    8178:	e09d      	b.n	82b6 <__aeabi_ddiv+0x162>
    817a:	4b95      	ldr	r3, [pc, #596]	; (83d0 <__aeabi_ddiv+0x27c>)
    817c:	4298      	cmp	r0, r3
    817e:	d039      	beq.n	81f4 <__aeabi_ddiv+0xa0>
    8180:	2380      	movs	r3, #128	; 0x80
    8182:	00f6      	lsls	r6, r6, #3
    8184:	041b      	lsls	r3, r3, #16
    8186:	431e      	orrs	r6, r3
    8188:	4a92      	ldr	r2, [pc, #584]	; (83d4 <__aeabi_ddiv+0x280>)
    818a:	0f7b      	lsrs	r3, r7, #29
    818c:	4333      	orrs	r3, r6
    818e:	4699      	mov	r9, r3
    8190:	4694      	mov	ip, r2
    8192:	0003      	movs	r3, r0
    8194:	4463      	add	r3, ip
    8196:	9300      	str	r3, [sp, #0]
    8198:	2300      	movs	r3, #0
    819a:	2600      	movs	r6, #0
    819c:	00ff      	lsls	r7, r7, #3
    819e:	9302      	str	r3, [sp, #8]
    81a0:	0323      	lsls	r3, r4, #12
    81a2:	0b1b      	lsrs	r3, r3, #12
    81a4:	4698      	mov	r8, r3
    81a6:	0063      	lsls	r3, r4, #1
    81a8:	0fe4      	lsrs	r4, r4, #31
    81aa:	4652      	mov	r2, sl
    81ac:	0d5b      	lsrs	r3, r3, #21
    81ae:	9401      	str	r4, [sp, #4]
    81b0:	d100      	bne.n	81b4 <__aeabi_ddiv+0x60>
    81b2:	e0b3      	b.n	831c <__aeabi_ddiv+0x1c8>
    81b4:	4986      	ldr	r1, [pc, #536]	; (83d0 <__aeabi_ddiv+0x27c>)
    81b6:	428b      	cmp	r3, r1
    81b8:	d100      	bne.n	81bc <__aeabi_ddiv+0x68>
    81ba:	e09e      	b.n	82fa <__aeabi_ddiv+0x1a6>
    81bc:	4642      	mov	r2, r8
    81be:	00d1      	lsls	r1, r2, #3
    81c0:	2280      	movs	r2, #128	; 0x80
    81c2:	0412      	lsls	r2, r2, #16
    81c4:	430a      	orrs	r2, r1
    81c6:	4651      	mov	r1, sl
    81c8:	0f49      	lsrs	r1, r1, #29
    81ca:	4311      	orrs	r1, r2
    81cc:	468b      	mov	fp, r1
    81ce:	4981      	ldr	r1, [pc, #516]	; (83d4 <__aeabi_ddiv+0x280>)
    81d0:	4652      	mov	r2, sl
    81d2:	468c      	mov	ip, r1
    81d4:	9900      	ldr	r1, [sp, #0]
    81d6:	4463      	add	r3, ip
    81d8:	1acb      	subs	r3, r1, r3
    81da:	2100      	movs	r1, #0
    81dc:	00d2      	lsls	r2, r2, #3
    81de:	9300      	str	r3, [sp, #0]
    81e0:	002b      	movs	r3, r5
    81e2:	4063      	eors	r3, r4
    81e4:	469a      	mov	sl, r3
    81e6:	2e0f      	cmp	r6, #15
    81e8:	d900      	bls.n	81ec <__aeabi_ddiv+0x98>
    81ea:	e105      	b.n	83f8 <__aeabi_ddiv+0x2a4>
    81ec:	4b7a      	ldr	r3, [pc, #488]	; (83d8 <__aeabi_ddiv+0x284>)
    81ee:	00b6      	lsls	r6, r6, #2
    81f0:	599b      	ldr	r3, [r3, r6]
    81f2:	469f      	mov	pc, r3
    81f4:	465b      	mov	r3, fp
    81f6:	4333      	orrs	r3, r6
    81f8:	4699      	mov	r9, r3
    81fa:	d000      	beq.n	81fe <__aeabi_ddiv+0xaa>
    81fc:	e0b8      	b.n	8370 <__aeabi_ddiv+0x21c>
    81fe:	2302      	movs	r3, #2
    8200:	2608      	movs	r6, #8
    8202:	2700      	movs	r7, #0
    8204:	9000      	str	r0, [sp, #0]
    8206:	9302      	str	r3, [sp, #8]
    8208:	e7ca      	b.n	81a0 <__aeabi_ddiv+0x4c>
    820a:	46cb      	mov	fp, r9
    820c:	003a      	movs	r2, r7
    820e:	9902      	ldr	r1, [sp, #8]
    8210:	9501      	str	r5, [sp, #4]
    8212:	9b01      	ldr	r3, [sp, #4]
    8214:	469a      	mov	sl, r3
    8216:	2902      	cmp	r1, #2
    8218:	d027      	beq.n	826a <__aeabi_ddiv+0x116>
    821a:	2903      	cmp	r1, #3
    821c:	d100      	bne.n	8220 <__aeabi_ddiv+0xcc>
    821e:	e280      	b.n	8722 <__aeabi_ddiv+0x5ce>
    8220:	2901      	cmp	r1, #1
    8222:	d044      	beq.n	82ae <__aeabi_ddiv+0x15a>
    8224:	496d      	ldr	r1, [pc, #436]	; (83dc <__aeabi_ddiv+0x288>)
    8226:	9b00      	ldr	r3, [sp, #0]
    8228:	468c      	mov	ip, r1
    822a:	4463      	add	r3, ip
    822c:	001c      	movs	r4, r3
    822e:	2c00      	cmp	r4, #0
    8230:	dd38      	ble.n	82a4 <__aeabi_ddiv+0x150>
    8232:	0753      	lsls	r3, r2, #29
    8234:	d000      	beq.n	8238 <__aeabi_ddiv+0xe4>
    8236:	e213      	b.n	8660 <__aeabi_ddiv+0x50c>
    8238:	08d2      	lsrs	r2, r2, #3
    823a:	465b      	mov	r3, fp
    823c:	01db      	lsls	r3, r3, #7
    823e:	d509      	bpl.n	8254 <__aeabi_ddiv+0x100>
    8240:	4659      	mov	r1, fp
    8242:	4b67      	ldr	r3, [pc, #412]	; (83e0 <__aeabi_ddiv+0x28c>)
    8244:	4019      	ands	r1, r3
    8246:	468b      	mov	fp, r1
    8248:	2180      	movs	r1, #128	; 0x80
    824a:	00c9      	lsls	r1, r1, #3
    824c:	468c      	mov	ip, r1
    824e:	9b00      	ldr	r3, [sp, #0]
    8250:	4463      	add	r3, ip
    8252:	001c      	movs	r4, r3
    8254:	4b63      	ldr	r3, [pc, #396]	; (83e4 <__aeabi_ddiv+0x290>)
    8256:	429c      	cmp	r4, r3
    8258:	dc07      	bgt.n	826a <__aeabi_ddiv+0x116>
    825a:	465b      	mov	r3, fp
    825c:	0564      	lsls	r4, r4, #21
    825e:	075f      	lsls	r7, r3, #29
    8260:	025b      	lsls	r3, r3, #9
    8262:	4317      	orrs	r7, r2
    8264:	0b1b      	lsrs	r3, r3, #12
    8266:	0d62      	lsrs	r2, r4, #21
    8268:	e002      	b.n	8270 <__aeabi_ddiv+0x11c>
    826a:	2300      	movs	r3, #0
    826c:	2700      	movs	r7, #0
    826e:	4a58      	ldr	r2, [pc, #352]	; (83d0 <__aeabi_ddiv+0x27c>)
    8270:	2100      	movs	r1, #0
    8272:	031b      	lsls	r3, r3, #12
    8274:	0b1c      	lsrs	r4, r3, #12
    8276:	0d0b      	lsrs	r3, r1, #20
    8278:	051b      	lsls	r3, r3, #20
    827a:	4323      	orrs	r3, r4
    827c:	0514      	lsls	r4, r2, #20
    827e:	4a5a      	ldr	r2, [pc, #360]	; (83e8 <__aeabi_ddiv+0x294>)
    8280:	0038      	movs	r0, r7
    8282:	4013      	ands	r3, r2
    8284:	431c      	orrs	r4, r3
    8286:	4653      	mov	r3, sl
    8288:	0064      	lsls	r4, r4, #1
    828a:	07db      	lsls	r3, r3, #31
    828c:	0864      	lsrs	r4, r4, #1
    828e:	431c      	orrs	r4, r3
    8290:	0021      	movs	r1, r4
    8292:	b005      	add	sp, #20
    8294:	bc3c      	pop	{r2, r3, r4, r5}
    8296:	4690      	mov	r8, r2
    8298:	4699      	mov	r9, r3
    829a:	46a2      	mov	sl, r4
    829c:	46ab      	mov	fp, r5
    829e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    82a0:	2201      	movs	r2, #1
    82a2:	4252      	negs	r2, r2
    82a4:	2301      	movs	r3, #1
    82a6:	1b1b      	subs	r3, r3, r4
    82a8:	2b38      	cmp	r3, #56	; 0x38
    82aa:	dc00      	bgt.n	82ae <__aeabi_ddiv+0x15a>
    82ac:	e1ad      	b.n	860a <__aeabi_ddiv+0x4b6>
    82ae:	2200      	movs	r2, #0
    82b0:	2300      	movs	r3, #0
    82b2:	2700      	movs	r7, #0
    82b4:	e7dc      	b.n	8270 <__aeabi_ddiv+0x11c>
    82b6:	465b      	mov	r3, fp
    82b8:	4333      	orrs	r3, r6
    82ba:	4699      	mov	r9, r3
    82bc:	d05e      	beq.n	837c <__aeabi_ddiv+0x228>
    82be:	2e00      	cmp	r6, #0
    82c0:	d100      	bne.n	82c4 <__aeabi_ddiv+0x170>
    82c2:	e18a      	b.n	85da <__aeabi_ddiv+0x486>
    82c4:	0030      	movs	r0, r6
    82c6:	f001 fa9d 	bl	9804 <__clzsi2>
    82ca:	0003      	movs	r3, r0
    82cc:	3b0b      	subs	r3, #11
    82ce:	2b1c      	cmp	r3, #28
    82d0:	dd00      	ble.n	82d4 <__aeabi_ddiv+0x180>
    82d2:	e17b      	b.n	85cc <__aeabi_ddiv+0x478>
    82d4:	221d      	movs	r2, #29
    82d6:	1ad3      	subs	r3, r2, r3
    82d8:	465a      	mov	r2, fp
    82da:	0001      	movs	r1, r0
    82dc:	40da      	lsrs	r2, r3
    82de:	3908      	subs	r1, #8
    82e0:	408e      	lsls	r6, r1
    82e2:	0013      	movs	r3, r2
    82e4:	465f      	mov	r7, fp
    82e6:	4333      	orrs	r3, r6
    82e8:	4699      	mov	r9, r3
    82ea:	408f      	lsls	r7, r1
    82ec:	4b3f      	ldr	r3, [pc, #252]	; (83ec <__aeabi_ddiv+0x298>)
    82ee:	2600      	movs	r6, #0
    82f0:	1a1b      	subs	r3, r3, r0
    82f2:	9300      	str	r3, [sp, #0]
    82f4:	2300      	movs	r3, #0
    82f6:	9302      	str	r3, [sp, #8]
    82f8:	e752      	b.n	81a0 <__aeabi_ddiv+0x4c>
    82fa:	4641      	mov	r1, r8
    82fc:	4653      	mov	r3, sl
    82fe:	430b      	orrs	r3, r1
    8300:	493b      	ldr	r1, [pc, #236]	; (83f0 <__aeabi_ddiv+0x29c>)
    8302:	469b      	mov	fp, r3
    8304:	468c      	mov	ip, r1
    8306:	9b00      	ldr	r3, [sp, #0]
    8308:	4463      	add	r3, ip
    830a:	9300      	str	r3, [sp, #0]
    830c:	465b      	mov	r3, fp
    830e:	2b00      	cmp	r3, #0
    8310:	d13b      	bne.n	838a <__aeabi_ddiv+0x236>
    8312:	2302      	movs	r3, #2
    8314:	2200      	movs	r2, #0
    8316:	431e      	orrs	r6, r3
    8318:	2102      	movs	r1, #2
    831a:	e761      	b.n	81e0 <__aeabi_ddiv+0x8c>
    831c:	4643      	mov	r3, r8
    831e:	4313      	orrs	r3, r2
    8320:	469b      	mov	fp, r3
    8322:	d037      	beq.n	8394 <__aeabi_ddiv+0x240>
    8324:	4643      	mov	r3, r8
    8326:	2b00      	cmp	r3, #0
    8328:	d100      	bne.n	832c <__aeabi_ddiv+0x1d8>
    832a:	e162      	b.n	85f2 <__aeabi_ddiv+0x49e>
    832c:	4640      	mov	r0, r8
    832e:	f001 fa69 	bl	9804 <__clzsi2>
    8332:	0003      	movs	r3, r0
    8334:	3b0b      	subs	r3, #11
    8336:	2b1c      	cmp	r3, #28
    8338:	dd00      	ble.n	833c <__aeabi_ddiv+0x1e8>
    833a:	e153      	b.n	85e4 <__aeabi_ddiv+0x490>
    833c:	0002      	movs	r2, r0
    833e:	4641      	mov	r1, r8
    8340:	3a08      	subs	r2, #8
    8342:	4091      	lsls	r1, r2
    8344:	4688      	mov	r8, r1
    8346:	211d      	movs	r1, #29
    8348:	1acb      	subs	r3, r1, r3
    834a:	4651      	mov	r1, sl
    834c:	40d9      	lsrs	r1, r3
    834e:	000b      	movs	r3, r1
    8350:	4641      	mov	r1, r8
    8352:	430b      	orrs	r3, r1
    8354:	469b      	mov	fp, r3
    8356:	4653      	mov	r3, sl
    8358:	4093      	lsls	r3, r2
    835a:	001a      	movs	r2, r3
    835c:	9b00      	ldr	r3, [sp, #0]
    835e:	4925      	ldr	r1, [pc, #148]	; (83f4 <__aeabi_ddiv+0x2a0>)
    8360:	469c      	mov	ip, r3
    8362:	4460      	add	r0, ip
    8364:	0003      	movs	r3, r0
    8366:	468c      	mov	ip, r1
    8368:	4463      	add	r3, ip
    836a:	9300      	str	r3, [sp, #0]
    836c:	2100      	movs	r1, #0
    836e:	e737      	b.n	81e0 <__aeabi_ddiv+0x8c>
    8370:	2303      	movs	r3, #3
    8372:	46b1      	mov	r9, r6
    8374:	9000      	str	r0, [sp, #0]
    8376:	260c      	movs	r6, #12
    8378:	9302      	str	r3, [sp, #8]
    837a:	e711      	b.n	81a0 <__aeabi_ddiv+0x4c>
    837c:	2300      	movs	r3, #0
    837e:	9300      	str	r3, [sp, #0]
    8380:	3301      	adds	r3, #1
    8382:	2604      	movs	r6, #4
    8384:	2700      	movs	r7, #0
    8386:	9302      	str	r3, [sp, #8]
    8388:	e70a      	b.n	81a0 <__aeabi_ddiv+0x4c>
    838a:	2303      	movs	r3, #3
    838c:	46c3      	mov	fp, r8
    838e:	431e      	orrs	r6, r3
    8390:	2103      	movs	r1, #3
    8392:	e725      	b.n	81e0 <__aeabi_ddiv+0x8c>
    8394:	3301      	adds	r3, #1
    8396:	431e      	orrs	r6, r3
    8398:	2200      	movs	r2, #0
    839a:	2101      	movs	r1, #1
    839c:	e720      	b.n	81e0 <__aeabi_ddiv+0x8c>
    839e:	2300      	movs	r3, #0
    83a0:	469a      	mov	sl, r3
    83a2:	2380      	movs	r3, #128	; 0x80
    83a4:	2700      	movs	r7, #0
    83a6:	031b      	lsls	r3, r3, #12
    83a8:	4a09      	ldr	r2, [pc, #36]	; (83d0 <__aeabi_ddiv+0x27c>)
    83aa:	e761      	b.n	8270 <__aeabi_ddiv+0x11c>
    83ac:	2380      	movs	r3, #128	; 0x80
    83ae:	4649      	mov	r1, r9
    83b0:	031b      	lsls	r3, r3, #12
    83b2:	4219      	tst	r1, r3
    83b4:	d100      	bne.n	83b8 <__aeabi_ddiv+0x264>
    83b6:	e0e2      	b.n	857e <__aeabi_ddiv+0x42a>
    83b8:	4659      	mov	r1, fp
    83ba:	4219      	tst	r1, r3
    83bc:	d000      	beq.n	83c0 <__aeabi_ddiv+0x26c>
    83be:	e0de      	b.n	857e <__aeabi_ddiv+0x42a>
    83c0:	430b      	orrs	r3, r1
    83c2:	031b      	lsls	r3, r3, #12
    83c4:	0017      	movs	r7, r2
    83c6:	0b1b      	lsrs	r3, r3, #12
    83c8:	46a2      	mov	sl, r4
    83ca:	4a01      	ldr	r2, [pc, #4]	; (83d0 <__aeabi_ddiv+0x27c>)
    83cc:	e750      	b.n	8270 <__aeabi_ddiv+0x11c>
    83ce:	46c0      	nop			; (mov r8, r8)
    83d0:	000007ff 	.word	0x000007ff
    83d4:	fffffc01 	.word	0xfffffc01
    83d8:	0000afcc 	.word	0x0000afcc
    83dc:	000003ff 	.word	0x000003ff
    83e0:	feffffff 	.word	0xfeffffff
    83e4:	000007fe 	.word	0x000007fe
    83e8:	800fffff 	.word	0x800fffff
    83ec:	fffffc0d 	.word	0xfffffc0d
    83f0:	fffff801 	.word	0xfffff801
    83f4:	000003f3 	.word	0x000003f3
    83f8:	45d9      	cmp	r9, fp
    83fa:	d900      	bls.n	83fe <__aeabi_ddiv+0x2aa>
    83fc:	e0cb      	b.n	8596 <__aeabi_ddiv+0x442>
    83fe:	d100      	bne.n	8402 <__aeabi_ddiv+0x2ae>
    8400:	e0c6      	b.n	8590 <__aeabi_ddiv+0x43c>
    8402:	003c      	movs	r4, r7
    8404:	4648      	mov	r0, r9
    8406:	2700      	movs	r7, #0
    8408:	9b00      	ldr	r3, [sp, #0]
    840a:	3b01      	subs	r3, #1
    840c:	9300      	str	r3, [sp, #0]
    840e:	465b      	mov	r3, fp
    8410:	0e16      	lsrs	r6, r2, #24
    8412:	021b      	lsls	r3, r3, #8
    8414:	431e      	orrs	r6, r3
    8416:	0213      	lsls	r3, r2, #8
    8418:	4698      	mov	r8, r3
    841a:	0433      	lsls	r3, r6, #16
    841c:	0c1b      	lsrs	r3, r3, #16
    841e:	4699      	mov	r9, r3
    8420:	0c31      	lsrs	r1, r6, #16
    8422:	9101      	str	r1, [sp, #4]
    8424:	f7fe fcc6 	bl	6db4 <__aeabi_uidivmod>
    8428:	464a      	mov	r2, r9
    842a:	4342      	muls	r2, r0
    842c:	040b      	lsls	r3, r1, #16
    842e:	0c21      	lsrs	r1, r4, #16
    8430:	0005      	movs	r5, r0
    8432:	4319      	orrs	r1, r3
    8434:	428a      	cmp	r2, r1
    8436:	d907      	bls.n	8448 <__aeabi_ddiv+0x2f4>
    8438:	1989      	adds	r1, r1, r6
    843a:	3d01      	subs	r5, #1
    843c:	428e      	cmp	r6, r1
    843e:	d803      	bhi.n	8448 <__aeabi_ddiv+0x2f4>
    8440:	428a      	cmp	r2, r1
    8442:	d901      	bls.n	8448 <__aeabi_ddiv+0x2f4>
    8444:	1e85      	subs	r5, r0, #2
    8446:	1989      	adds	r1, r1, r6
    8448:	1a88      	subs	r0, r1, r2
    844a:	9901      	ldr	r1, [sp, #4]
    844c:	f7fe fcb2 	bl	6db4 <__aeabi_uidivmod>
    8450:	0409      	lsls	r1, r1, #16
    8452:	468c      	mov	ip, r1
    8454:	464a      	mov	r2, r9
    8456:	0421      	lsls	r1, r4, #16
    8458:	4664      	mov	r4, ip
    845a:	4342      	muls	r2, r0
    845c:	0c09      	lsrs	r1, r1, #16
    845e:	0003      	movs	r3, r0
    8460:	4321      	orrs	r1, r4
    8462:	428a      	cmp	r2, r1
    8464:	d904      	bls.n	8470 <__aeabi_ddiv+0x31c>
    8466:	1989      	adds	r1, r1, r6
    8468:	3b01      	subs	r3, #1
    846a:	428e      	cmp	r6, r1
    846c:	d800      	bhi.n	8470 <__aeabi_ddiv+0x31c>
    846e:	e0f1      	b.n	8654 <__aeabi_ddiv+0x500>
    8470:	042d      	lsls	r5, r5, #16
    8472:	431d      	orrs	r5, r3
    8474:	46ab      	mov	fp, r5
    8476:	4643      	mov	r3, r8
    8478:	1a89      	subs	r1, r1, r2
    847a:	4642      	mov	r2, r8
    847c:	0c28      	lsrs	r0, r5, #16
    847e:	0412      	lsls	r2, r2, #16
    8480:	0c1d      	lsrs	r5, r3, #16
    8482:	465b      	mov	r3, fp
    8484:	0c14      	lsrs	r4, r2, #16
    8486:	0022      	movs	r2, r4
    8488:	041b      	lsls	r3, r3, #16
    848a:	0c1b      	lsrs	r3, r3, #16
    848c:	435a      	muls	r2, r3
    848e:	9403      	str	r4, [sp, #12]
    8490:	436b      	muls	r3, r5
    8492:	4344      	muls	r4, r0
    8494:	9502      	str	r5, [sp, #8]
    8496:	4368      	muls	r0, r5
    8498:	191b      	adds	r3, r3, r4
    849a:	0c15      	lsrs	r5, r2, #16
    849c:	18eb      	adds	r3, r5, r3
    849e:	429c      	cmp	r4, r3
    84a0:	d903      	bls.n	84aa <__aeabi_ddiv+0x356>
    84a2:	2480      	movs	r4, #128	; 0x80
    84a4:	0264      	lsls	r4, r4, #9
    84a6:	46a4      	mov	ip, r4
    84a8:	4460      	add	r0, ip
    84aa:	0c1c      	lsrs	r4, r3, #16
    84ac:	0415      	lsls	r5, r2, #16
    84ae:	041b      	lsls	r3, r3, #16
    84b0:	0c2d      	lsrs	r5, r5, #16
    84b2:	1820      	adds	r0, r4, r0
    84b4:	195d      	adds	r5, r3, r5
    84b6:	4281      	cmp	r1, r0
    84b8:	d377      	bcc.n	85aa <__aeabi_ddiv+0x456>
    84ba:	d073      	beq.n	85a4 <__aeabi_ddiv+0x450>
    84bc:	1a0c      	subs	r4, r1, r0
    84be:	4aa2      	ldr	r2, [pc, #648]	; (8748 <__aeabi_ddiv+0x5f4>)
    84c0:	1b7d      	subs	r5, r7, r5
    84c2:	42af      	cmp	r7, r5
    84c4:	41bf      	sbcs	r7, r7
    84c6:	4694      	mov	ip, r2
    84c8:	9b00      	ldr	r3, [sp, #0]
    84ca:	427f      	negs	r7, r7
    84cc:	4463      	add	r3, ip
    84ce:	1be0      	subs	r0, r4, r7
    84d0:	001c      	movs	r4, r3
    84d2:	4286      	cmp	r6, r0
    84d4:	d100      	bne.n	84d8 <__aeabi_ddiv+0x384>
    84d6:	e0db      	b.n	8690 <__aeabi_ddiv+0x53c>
    84d8:	9901      	ldr	r1, [sp, #4]
    84da:	f7fe fc6b 	bl	6db4 <__aeabi_uidivmod>
    84de:	464a      	mov	r2, r9
    84e0:	4342      	muls	r2, r0
    84e2:	040b      	lsls	r3, r1, #16
    84e4:	0c29      	lsrs	r1, r5, #16
    84e6:	0007      	movs	r7, r0
    84e8:	4319      	orrs	r1, r3
    84ea:	428a      	cmp	r2, r1
    84ec:	d907      	bls.n	84fe <__aeabi_ddiv+0x3aa>
    84ee:	1989      	adds	r1, r1, r6
    84f0:	3f01      	subs	r7, #1
    84f2:	428e      	cmp	r6, r1
    84f4:	d803      	bhi.n	84fe <__aeabi_ddiv+0x3aa>
    84f6:	428a      	cmp	r2, r1
    84f8:	d901      	bls.n	84fe <__aeabi_ddiv+0x3aa>
    84fa:	1e87      	subs	r7, r0, #2
    84fc:	1989      	adds	r1, r1, r6
    84fe:	1a88      	subs	r0, r1, r2
    8500:	9901      	ldr	r1, [sp, #4]
    8502:	f7fe fc57 	bl	6db4 <__aeabi_uidivmod>
    8506:	0409      	lsls	r1, r1, #16
    8508:	464a      	mov	r2, r9
    850a:	4689      	mov	r9, r1
    850c:	0429      	lsls	r1, r5, #16
    850e:	464d      	mov	r5, r9
    8510:	4342      	muls	r2, r0
    8512:	0c09      	lsrs	r1, r1, #16
    8514:	0003      	movs	r3, r0
    8516:	4329      	orrs	r1, r5
    8518:	428a      	cmp	r2, r1
    851a:	d907      	bls.n	852c <__aeabi_ddiv+0x3d8>
    851c:	1989      	adds	r1, r1, r6
    851e:	3b01      	subs	r3, #1
    8520:	428e      	cmp	r6, r1
    8522:	d803      	bhi.n	852c <__aeabi_ddiv+0x3d8>
    8524:	428a      	cmp	r2, r1
    8526:	d901      	bls.n	852c <__aeabi_ddiv+0x3d8>
    8528:	1e83      	subs	r3, r0, #2
    852a:	1989      	adds	r1, r1, r6
    852c:	043f      	lsls	r7, r7, #16
    852e:	1a89      	subs	r1, r1, r2
    8530:	003a      	movs	r2, r7
    8532:	9f03      	ldr	r7, [sp, #12]
    8534:	431a      	orrs	r2, r3
    8536:	0038      	movs	r0, r7
    8538:	0413      	lsls	r3, r2, #16
    853a:	0c1b      	lsrs	r3, r3, #16
    853c:	4358      	muls	r0, r3
    853e:	4681      	mov	r9, r0
    8540:	9802      	ldr	r0, [sp, #8]
    8542:	0c15      	lsrs	r5, r2, #16
    8544:	436f      	muls	r7, r5
    8546:	4343      	muls	r3, r0
    8548:	4345      	muls	r5, r0
    854a:	4648      	mov	r0, r9
    854c:	0c00      	lsrs	r0, r0, #16
    854e:	4684      	mov	ip, r0
    8550:	19db      	adds	r3, r3, r7
    8552:	4463      	add	r3, ip
    8554:	429f      	cmp	r7, r3
    8556:	d903      	bls.n	8560 <__aeabi_ddiv+0x40c>
    8558:	2080      	movs	r0, #128	; 0x80
    855a:	0240      	lsls	r0, r0, #9
    855c:	4684      	mov	ip, r0
    855e:	4465      	add	r5, ip
    8560:	4648      	mov	r0, r9
    8562:	0c1f      	lsrs	r7, r3, #16
    8564:	0400      	lsls	r0, r0, #16
    8566:	041b      	lsls	r3, r3, #16
    8568:	0c00      	lsrs	r0, r0, #16
    856a:	197d      	adds	r5, r7, r5
    856c:	1818      	adds	r0, r3, r0
    856e:	42a9      	cmp	r1, r5
    8570:	d200      	bcs.n	8574 <__aeabi_ddiv+0x420>
    8572:	e084      	b.n	867e <__aeabi_ddiv+0x52a>
    8574:	d100      	bne.n	8578 <__aeabi_ddiv+0x424>
    8576:	e07f      	b.n	8678 <__aeabi_ddiv+0x524>
    8578:	2301      	movs	r3, #1
    857a:	431a      	orrs	r2, r3
    857c:	e657      	b.n	822e <__aeabi_ddiv+0xda>
    857e:	2380      	movs	r3, #128	; 0x80
    8580:	464a      	mov	r2, r9
    8582:	031b      	lsls	r3, r3, #12
    8584:	4313      	orrs	r3, r2
    8586:	031b      	lsls	r3, r3, #12
    8588:	0b1b      	lsrs	r3, r3, #12
    858a:	46aa      	mov	sl, r5
    858c:	4a6f      	ldr	r2, [pc, #444]	; (874c <__aeabi_ddiv+0x5f8>)
    858e:	e66f      	b.n	8270 <__aeabi_ddiv+0x11c>
    8590:	42ba      	cmp	r2, r7
    8592:	d900      	bls.n	8596 <__aeabi_ddiv+0x442>
    8594:	e735      	b.n	8402 <__aeabi_ddiv+0x2ae>
    8596:	464b      	mov	r3, r9
    8598:	07dc      	lsls	r4, r3, #31
    859a:	0858      	lsrs	r0, r3, #1
    859c:	087b      	lsrs	r3, r7, #1
    859e:	431c      	orrs	r4, r3
    85a0:	07ff      	lsls	r7, r7, #31
    85a2:	e734      	b.n	840e <__aeabi_ddiv+0x2ba>
    85a4:	2400      	movs	r4, #0
    85a6:	42af      	cmp	r7, r5
    85a8:	d289      	bcs.n	84be <__aeabi_ddiv+0x36a>
    85aa:	4447      	add	r7, r8
    85ac:	4547      	cmp	r7, r8
    85ae:	41a4      	sbcs	r4, r4
    85b0:	465b      	mov	r3, fp
    85b2:	4264      	negs	r4, r4
    85b4:	19a4      	adds	r4, r4, r6
    85b6:	1864      	adds	r4, r4, r1
    85b8:	3b01      	subs	r3, #1
    85ba:	42a6      	cmp	r6, r4
    85bc:	d21e      	bcs.n	85fc <__aeabi_ddiv+0x4a8>
    85be:	42a0      	cmp	r0, r4
    85c0:	d86d      	bhi.n	869e <__aeabi_ddiv+0x54a>
    85c2:	d100      	bne.n	85c6 <__aeabi_ddiv+0x472>
    85c4:	e0b6      	b.n	8734 <__aeabi_ddiv+0x5e0>
    85c6:	1a24      	subs	r4, r4, r0
    85c8:	469b      	mov	fp, r3
    85ca:	e778      	b.n	84be <__aeabi_ddiv+0x36a>
    85cc:	0003      	movs	r3, r0
    85ce:	465a      	mov	r2, fp
    85d0:	3b28      	subs	r3, #40	; 0x28
    85d2:	409a      	lsls	r2, r3
    85d4:	2700      	movs	r7, #0
    85d6:	4691      	mov	r9, r2
    85d8:	e688      	b.n	82ec <__aeabi_ddiv+0x198>
    85da:	4658      	mov	r0, fp
    85dc:	f001 f912 	bl	9804 <__clzsi2>
    85e0:	3020      	adds	r0, #32
    85e2:	e672      	b.n	82ca <__aeabi_ddiv+0x176>
    85e4:	0003      	movs	r3, r0
    85e6:	4652      	mov	r2, sl
    85e8:	3b28      	subs	r3, #40	; 0x28
    85ea:	409a      	lsls	r2, r3
    85ec:	4693      	mov	fp, r2
    85ee:	2200      	movs	r2, #0
    85f0:	e6b4      	b.n	835c <__aeabi_ddiv+0x208>
    85f2:	4650      	mov	r0, sl
    85f4:	f001 f906 	bl	9804 <__clzsi2>
    85f8:	3020      	adds	r0, #32
    85fa:	e69a      	b.n	8332 <__aeabi_ddiv+0x1de>
    85fc:	42a6      	cmp	r6, r4
    85fe:	d1e2      	bne.n	85c6 <__aeabi_ddiv+0x472>
    8600:	45b8      	cmp	r8, r7
    8602:	d9dc      	bls.n	85be <__aeabi_ddiv+0x46a>
    8604:	1a34      	subs	r4, r6, r0
    8606:	469b      	mov	fp, r3
    8608:	e759      	b.n	84be <__aeabi_ddiv+0x36a>
    860a:	2b1f      	cmp	r3, #31
    860c:	dc65      	bgt.n	86da <__aeabi_ddiv+0x586>
    860e:	4c50      	ldr	r4, [pc, #320]	; (8750 <__aeabi_ddiv+0x5fc>)
    8610:	9900      	ldr	r1, [sp, #0]
    8612:	46a4      	mov	ip, r4
    8614:	465c      	mov	r4, fp
    8616:	4461      	add	r1, ip
    8618:	0008      	movs	r0, r1
    861a:	408c      	lsls	r4, r1
    861c:	0011      	movs	r1, r2
    861e:	4082      	lsls	r2, r0
    8620:	40d9      	lsrs	r1, r3
    8622:	1e50      	subs	r0, r2, #1
    8624:	4182      	sbcs	r2, r0
    8626:	430c      	orrs	r4, r1
    8628:	4314      	orrs	r4, r2
    862a:	465a      	mov	r2, fp
    862c:	40da      	lsrs	r2, r3
    862e:	0013      	movs	r3, r2
    8630:	0762      	lsls	r2, r4, #29
    8632:	d009      	beq.n	8648 <__aeabi_ddiv+0x4f4>
    8634:	220f      	movs	r2, #15
    8636:	4022      	ands	r2, r4
    8638:	2a04      	cmp	r2, #4
    863a:	d005      	beq.n	8648 <__aeabi_ddiv+0x4f4>
    863c:	0022      	movs	r2, r4
    863e:	1d14      	adds	r4, r2, #4
    8640:	4294      	cmp	r4, r2
    8642:	4189      	sbcs	r1, r1
    8644:	4249      	negs	r1, r1
    8646:	185b      	adds	r3, r3, r1
    8648:	021a      	lsls	r2, r3, #8
    864a:	d562      	bpl.n	8712 <__aeabi_ddiv+0x5be>
    864c:	2201      	movs	r2, #1
    864e:	2300      	movs	r3, #0
    8650:	2700      	movs	r7, #0
    8652:	e60d      	b.n	8270 <__aeabi_ddiv+0x11c>
    8654:	428a      	cmp	r2, r1
    8656:	d800      	bhi.n	865a <__aeabi_ddiv+0x506>
    8658:	e70a      	b.n	8470 <__aeabi_ddiv+0x31c>
    865a:	1e83      	subs	r3, r0, #2
    865c:	1989      	adds	r1, r1, r6
    865e:	e707      	b.n	8470 <__aeabi_ddiv+0x31c>
    8660:	230f      	movs	r3, #15
    8662:	4013      	ands	r3, r2
    8664:	2b04      	cmp	r3, #4
    8666:	d100      	bne.n	866a <__aeabi_ddiv+0x516>
    8668:	e5e6      	b.n	8238 <__aeabi_ddiv+0xe4>
    866a:	1d17      	adds	r7, r2, #4
    866c:	4297      	cmp	r7, r2
    866e:	4192      	sbcs	r2, r2
    8670:	4253      	negs	r3, r2
    8672:	449b      	add	fp, r3
    8674:	08fa      	lsrs	r2, r7, #3
    8676:	e5e0      	b.n	823a <__aeabi_ddiv+0xe6>
    8678:	2800      	cmp	r0, #0
    867a:	d100      	bne.n	867e <__aeabi_ddiv+0x52a>
    867c:	e5d7      	b.n	822e <__aeabi_ddiv+0xda>
    867e:	1871      	adds	r1, r6, r1
    8680:	1e53      	subs	r3, r2, #1
    8682:	42b1      	cmp	r1, r6
    8684:	d327      	bcc.n	86d6 <__aeabi_ddiv+0x582>
    8686:	42a9      	cmp	r1, r5
    8688:	d315      	bcc.n	86b6 <__aeabi_ddiv+0x562>
    868a:	d058      	beq.n	873e <__aeabi_ddiv+0x5ea>
    868c:	001a      	movs	r2, r3
    868e:	e773      	b.n	8578 <__aeabi_ddiv+0x424>
    8690:	2b00      	cmp	r3, #0
    8692:	dc00      	bgt.n	8696 <__aeabi_ddiv+0x542>
    8694:	e604      	b.n	82a0 <__aeabi_ddiv+0x14c>
    8696:	2301      	movs	r3, #1
    8698:	2200      	movs	r2, #0
    869a:	449b      	add	fp, r3
    869c:	e5cd      	b.n	823a <__aeabi_ddiv+0xe6>
    869e:	2302      	movs	r3, #2
    86a0:	4447      	add	r7, r8
    86a2:	4547      	cmp	r7, r8
    86a4:	4189      	sbcs	r1, r1
    86a6:	425b      	negs	r3, r3
    86a8:	469c      	mov	ip, r3
    86aa:	4249      	negs	r1, r1
    86ac:	1989      	adds	r1, r1, r6
    86ae:	190c      	adds	r4, r1, r4
    86b0:	44e3      	add	fp, ip
    86b2:	1a24      	subs	r4, r4, r0
    86b4:	e703      	b.n	84be <__aeabi_ddiv+0x36a>
    86b6:	4643      	mov	r3, r8
    86b8:	005f      	lsls	r7, r3, #1
    86ba:	4547      	cmp	r7, r8
    86bc:	419b      	sbcs	r3, r3
    86be:	46b8      	mov	r8, r7
    86c0:	425b      	negs	r3, r3
    86c2:	199e      	adds	r6, r3, r6
    86c4:	3a02      	subs	r2, #2
    86c6:	1989      	adds	r1, r1, r6
    86c8:	42a9      	cmp	r1, r5
    86ca:	d000      	beq.n	86ce <__aeabi_ddiv+0x57a>
    86cc:	e754      	b.n	8578 <__aeabi_ddiv+0x424>
    86ce:	4540      	cmp	r0, r8
    86d0:	d000      	beq.n	86d4 <__aeabi_ddiv+0x580>
    86d2:	e751      	b.n	8578 <__aeabi_ddiv+0x424>
    86d4:	e5ab      	b.n	822e <__aeabi_ddiv+0xda>
    86d6:	001a      	movs	r2, r3
    86d8:	e7f6      	b.n	86c8 <__aeabi_ddiv+0x574>
    86da:	211f      	movs	r1, #31
    86dc:	465f      	mov	r7, fp
    86de:	4249      	negs	r1, r1
    86e0:	1b0c      	subs	r4, r1, r4
    86e2:	40e7      	lsrs	r7, r4
    86e4:	2b20      	cmp	r3, #32
    86e6:	d007      	beq.n	86f8 <__aeabi_ddiv+0x5a4>
    86e8:	491a      	ldr	r1, [pc, #104]	; (8754 <__aeabi_ddiv+0x600>)
    86ea:	9b00      	ldr	r3, [sp, #0]
    86ec:	468c      	mov	ip, r1
    86ee:	4463      	add	r3, ip
    86f0:	0018      	movs	r0, r3
    86f2:	465b      	mov	r3, fp
    86f4:	4083      	lsls	r3, r0
    86f6:	431a      	orrs	r2, r3
    86f8:	1e50      	subs	r0, r2, #1
    86fa:	4182      	sbcs	r2, r0
    86fc:	433a      	orrs	r2, r7
    86fe:	2707      	movs	r7, #7
    8700:	2300      	movs	r3, #0
    8702:	4017      	ands	r7, r2
    8704:	d009      	beq.n	871a <__aeabi_ddiv+0x5c6>
    8706:	210f      	movs	r1, #15
    8708:	2300      	movs	r3, #0
    870a:	4011      	ands	r1, r2
    870c:	0014      	movs	r4, r2
    870e:	2904      	cmp	r1, #4
    8710:	d195      	bne.n	863e <__aeabi_ddiv+0x4ea>
    8712:	0022      	movs	r2, r4
    8714:	075f      	lsls	r7, r3, #29
    8716:	025b      	lsls	r3, r3, #9
    8718:	0b1b      	lsrs	r3, r3, #12
    871a:	08d2      	lsrs	r2, r2, #3
    871c:	4317      	orrs	r7, r2
    871e:	2200      	movs	r2, #0
    8720:	e5a6      	b.n	8270 <__aeabi_ddiv+0x11c>
    8722:	2380      	movs	r3, #128	; 0x80
    8724:	4659      	mov	r1, fp
    8726:	031b      	lsls	r3, r3, #12
    8728:	430b      	orrs	r3, r1
    872a:	031b      	lsls	r3, r3, #12
    872c:	0017      	movs	r7, r2
    872e:	0b1b      	lsrs	r3, r3, #12
    8730:	4a06      	ldr	r2, [pc, #24]	; (874c <__aeabi_ddiv+0x5f8>)
    8732:	e59d      	b.n	8270 <__aeabi_ddiv+0x11c>
    8734:	42bd      	cmp	r5, r7
    8736:	d8b2      	bhi.n	869e <__aeabi_ddiv+0x54a>
    8738:	469b      	mov	fp, r3
    873a:	2400      	movs	r4, #0
    873c:	e6bf      	b.n	84be <__aeabi_ddiv+0x36a>
    873e:	4580      	cmp	r8, r0
    8740:	d3b9      	bcc.n	86b6 <__aeabi_ddiv+0x562>
    8742:	001a      	movs	r2, r3
    8744:	e7c3      	b.n	86ce <__aeabi_ddiv+0x57a>
    8746:	46c0      	nop			; (mov r8, r8)
    8748:	000003ff 	.word	0x000003ff
    874c:	000007ff 	.word	0x000007ff
    8750:	0000041e 	.word	0x0000041e
    8754:	0000043e 	.word	0x0000043e

00008758 <__eqdf2>:
__nedf2():
    8758:	b5f0      	push	{r4, r5, r6, r7, lr}
    875a:	464f      	mov	r7, r9
    875c:	4646      	mov	r6, r8
    875e:	46d6      	mov	lr, sl
    8760:	4684      	mov	ip, r0
    8762:	b5c0      	push	{r6, r7, lr}
    8764:	4680      	mov	r8, r0
    8766:	4e19      	ldr	r6, [pc, #100]	; (87cc <__eqdf2+0x74>)
    8768:	0318      	lsls	r0, r3, #12
    876a:	030f      	lsls	r7, r1, #12
    876c:	004d      	lsls	r5, r1, #1
    876e:	0b00      	lsrs	r0, r0, #12
    8770:	005c      	lsls	r4, r3, #1
    8772:	4682      	mov	sl, r0
    8774:	0b3f      	lsrs	r7, r7, #12
    8776:	0d6d      	lsrs	r5, r5, #21
    8778:	0fc9      	lsrs	r1, r1, #31
    877a:	4691      	mov	r9, r2
    877c:	0d64      	lsrs	r4, r4, #21
    877e:	0fdb      	lsrs	r3, r3, #31
    8780:	2001      	movs	r0, #1
    8782:	42b5      	cmp	r5, r6
    8784:	d00a      	beq.n	879c <__eqdf2+0x44>
    8786:	42b4      	cmp	r4, r6
    8788:	d003      	beq.n	8792 <__eqdf2+0x3a>
    878a:	42a5      	cmp	r5, r4
    878c:	d101      	bne.n	8792 <__eqdf2+0x3a>
    878e:	4557      	cmp	r7, sl
    8790:	d00c      	beq.n	87ac <__eqdf2+0x54>
    8792:	bc1c      	pop	{r2, r3, r4}
    8794:	4690      	mov	r8, r2
    8796:	4699      	mov	r9, r3
    8798:	46a2      	mov	sl, r4
    879a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    879c:	4666      	mov	r6, ip
    879e:	433e      	orrs	r6, r7
    87a0:	d1f7      	bne.n	8792 <__eqdf2+0x3a>
    87a2:	42ac      	cmp	r4, r5
    87a4:	d1f5      	bne.n	8792 <__eqdf2+0x3a>
    87a6:	4654      	mov	r4, sl
    87a8:	4314      	orrs	r4, r2
    87aa:	d1f2      	bne.n	8792 <__eqdf2+0x3a>
    87ac:	2001      	movs	r0, #1
    87ae:	45c8      	cmp	r8, r9
    87b0:	d1ef      	bne.n	8792 <__eqdf2+0x3a>
    87b2:	4299      	cmp	r1, r3
    87b4:	d007      	beq.n	87c6 <__eqdf2+0x6e>
    87b6:	2d00      	cmp	r5, #0
    87b8:	d1eb      	bne.n	8792 <__eqdf2+0x3a>
    87ba:	4663      	mov	r3, ip
    87bc:	431f      	orrs	r7, r3
    87be:	0038      	movs	r0, r7
    87c0:	1e47      	subs	r7, r0, #1
    87c2:	41b8      	sbcs	r0, r7
    87c4:	e7e5      	b.n	8792 <__eqdf2+0x3a>
    87c6:	2000      	movs	r0, #0
    87c8:	e7e3      	b.n	8792 <__eqdf2+0x3a>
    87ca:	46c0      	nop			; (mov r8, r8)
    87cc:	000007ff 	.word	0x000007ff

000087d0 <__gedf2>:
__gedf2():
    87d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    87d2:	464f      	mov	r7, r9
    87d4:	4646      	mov	r6, r8
    87d6:	46d6      	mov	lr, sl
    87d8:	004d      	lsls	r5, r1, #1
    87da:	b5c0      	push	{r6, r7, lr}
    87dc:	030e      	lsls	r6, r1, #12
    87de:	0fc9      	lsrs	r1, r1, #31
    87e0:	468a      	mov	sl, r1
    87e2:	492c      	ldr	r1, [pc, #176]	; (8894 <__gedf2+0xc4>)
    87e4:	031f      	lsls	r7, r3, #12
    87e6:	005c      	lsls	r4, r3, #1
    87e8:	4680      	mov	r8, r0
    87ea:	0b36      	lsrs	r6, r6, #12
    87ec:	0d6d      	lsrs	r5, r5, #21
    87ee:	4691      	mov	r9, r2
    87f0:	0b3f      	lsrs	r7, r7, #12
    87f2:	0d64      	lsrs	r4, r4, #21
    87f4:	0fdb      	lsrs	r3, r3, #31
    87f6:	428d      	cmp	r5, r1
    87f8:	d01e      	beq.n	8838 <__gedf2+0x68>
    87fa:	428c      	cmp	r4, r1
    87fc:	d016      	beq.n	882c <__gedf2+0x5c>
    87fe:	2d00      	cmp	r5, #0
    8800:	d11e      	bne.n	8840 <__gedf2+0x70>
    8802:	4330      	orrs	r0, r6
    8804:	4684      	mov	ip, r0
    8806:	2c00      	cmp	r4, #0
    8808:	d101      	bne.n	880e <__gedf2+0x3e>
    880a:	433a      	orrs	r2, r7
    880c:	d023      	beq.n	8856 <__gedf2+0x86>
    880e:	4662      	mov	r2, ip
    8810:	2a00      	cmp	r2, #0
    8812:	d01a      	beq.n	884a <__gedf2+0x7a>
    8814:	459a      	cmp	sl, r3
    8816:	d029      	beq.n	886c <__gedf2+0x9c>
    8818:	4651      	mov	r1, sl
    881a:	2002      	movs	r0, #2
    881c:	3901      	subs	r1, #1
    881e:	4008      	ands	r0, r1
    8820:	3801      	subs	r0, #1
    8822:	bc1c      	pop	{r2, r3, r4}
    8824:	4690      	mov	r8, r2
    8826:	4699      	mov	r9, r3
    8828:	46a2      	mov	sl, r4
    882a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    882c:	0039      	movs	r1, r7
    882e:	4311      	orrs	r1, r2
    8830:	d0e5      	beq.n	87fe <__gedf2+0x2e>
    8832:	2002      	movs	r0, #2
    8834:	4240      	negs	r0, r0
    8836:	e7f4      	b.n	8822 <__gedf2+0x52>
    8838:	4330      	orrs	r0, r6
    883a:	d1fa      	bne.n	8832 <__gedf2+0x62>
    883c:	42ac      	cmp	r4, r5
    883e:	d00f      	beq.n	8860 <__gedf2+0x90>
    8840:	2c00      	cmp	r4, #0
    8842:	d10f      	bne.n	8864 <__gedf2+0x94>
    8844:	433a      	orrs	r2, r7
    8846:	d0e7      	beq.n	8818 <__gedf2+0x48>
    8848:	e00c      	b.n	8864 <__gedf2+0x94>
    884a:	2201      	movs	r2, #1
    884c:	3b01      	subs	r3, #1
    884e:	4393      	bics	r3, r2
    8850:	0018      	movs	r0, r3
    8852:	3001      	adds	r0, #1
    8854:	e7e5      	b.n	8822 <__gedf2+0x52>
    8856:	4663      	mov	r3, ip
    8858:	2000      	movs	r0, #0
    885a:	2b00      	cmp	r3, #0
    885c:	d0e1      	beq.n	8822 <__gedf2+0x52>
    885e:	e7db      	b.n	8818 <__gedf2+0x48>
    8860:	433a      	orrs	r2, r7
    8862:	d1e6      	bne.n	8832 <__gedf2+0x62>
    8864:	459a      	cmp	sl, r3
    8866:	d1d7      	bne.n	8818 <__gedf2+0x48>
    8868:	42a5      	cmp	r5, r4
    886a:	dcd5      	bgt.n	8818 <__gedf2+0x48>
    886c:	42a5      	cmp	r5, r4
    886e:	db05      	blt.n	887c <__gedf2+0xac>
    8870:	42be      	cmp	r6, r7
    8872:	d8d1      	bhi.n	8818 <__gedf2+0x48>
    8874:	d008      	beq.n	8888 <__gedf2+0xb8>
    8876:	2000      	movs	r0, #0
    8878:	42be      	cmp	r6, r7
    887a:	d2d2      	bcs.n	8822 <__gedf2+0x52>
    887c:	4650      	mov	r0, sl
    887e:	2301      	movs	r3, #1
    8880:	3801      	subs	r0, #1
    8882:	4398      	bics	r0, r3
    8884:	3001      	adds	r0, #1
    8886:	e7cc      	b.n	8822 <__gedf2+0x52>
    8888:	45c8      	cmp	r8, r9
    888a:	d8c5      	bhi.n	8818 <__gedf2+0x48>
    888c:	2000      	movs	r0, #0
    888e:	45c8      	cmp	r8, r9
    8890:	d3f4      	bcc.n	887c <__gedf2+0xac>
    8892:	e7c6      	b.n	8822 <__gedf2+0x52>
    8894:	000007ff 	.word	0x000007ff

00008898 <__ledf2>:
__ledf2():
    8898:	b5f0      	push	{r4, r5, r6, r7, lr}
    889a:	464f      	mov	r7, r9
    889c:	4646      	mov	r6, r8
    889e:	46d6      	mov	lr, sl
    88a0:	004d      	lsls	r5, r1, #1
    88a2:	b5c0      	push	{r6, r7, lr}
    88a4:	030e      	lsls	r6, r1, #12
    88a6:	0fc9      	lsrs	r1, r1, #31
    88a8:	468a      	mov	sl, r1
    88aa:	492e      	ldr	r1, [pc, #184]	; (8964 <__ledf2+0xcc>)
    88ac:	031f      	lsls	r7, r3, #12
    88ae:	005c      	lsls	r4, r3, #1
    88b0:	4680      	mov	r8, r0
    88b2:	0b36      	lsrs	r6, r6, #12
    88b4:	0d6d      	lsrs	r5, r5, #21
    88b6:	4691      	mov	r9, r2
    88b8:	0b3f      	lsrs	r7, r7, #12
    88ba:	0d64      	lsrs	r4, r4, #21
    88bc:	0fdb      	lsrs	r3, r3, #31
    88be:	428d      	cmp	r5, r1
    88c0:	d018      	beq.n	88f4 <__ledf2+0x5c>
    88c2:	428c      	cmp	r4, r1
    88c4:	d011      	beq.n	88ea <__ledf2+0x52>
    88c6:	2d00      	cmp	r5, #0
    88c8:	d118      	bne.n	88fc <__ledf2+0x64>
    88ca:	4330      	orrs	r0, r6
    88cc:	4684      	mov	ip, r0
    88ce:	2c00      	cmp	r4, #0
    88d0:	d11e      	bne.n	8910 <__ledf2+0x78>
    88d2:	433a      	orrs	r2, r7
    88d4:	d11c      	bne.n	8910 <__ledf2+0x78>
    88d6:	4663      	mov	r3, ip
    88d8:	2000      	movs	r0, #0
    88da:	2b00      	cmp	r3, #0
    88dc:	d030      	beq.n	8940 <__ledf2+0xa8>
    88de:	4651      	mov	r1, sl
    88e0:	2002      	movs	r0, #2
    88e2:	3901      	subs	r1, #1
    88e4:	4008      	ands	r0, r1
    88e6:	3801      	subs	r0, #1
    88e8:	e02a      	b.n	8940 <__ledf2+0xa8>
    88ea:	0039      	movs	r1, r7
    88ec:	4311      	orrs	r1, r2
    88ee:	d0ea      	beq.n	88c6 <__ledf2+0x2e>
    88f0:	2002      	movs	r0, #2
    88f2:	e025      	b.n	8940 <__ledf2+0xa8>
    88f4:	4330      	orrs	r0, r6
    88f6:	d1fb      	bne.n	88f0 <__ledf2+0x58>
    88f8:	42ac      	cmp	r4, r5
    88fa:	d026      	beq.n	894a <__ledf2+0xb2>
    88fc:	2c00      	cmp	r4, #0
    88fe:	d126      	bne.n	894e <__ledf2+0xb6>
    8900:	433a      	orrs	r2, r7
    8902:	d124      	bne.n	894e <__ledf2+0xb6>
    8904:	4651      	mov	r1, sl
    8906:	2002      	movs	r0, #2
    8908:	3901      	subs	r1, #1
    890a:	4008      	ands	r0, r1
    890c:	3801      	subs	r0, #1
    890e:	e017      	b.n	8940 <__ledf2+0xa8>
    8910:	4662      	mov	r2, ip
    8912:	2a00      	cmp	r2, #0
    8914:	d00f      	beq.n	8936 <__ledf2+0x9e>
    8916:	459a      	cmp	sl, r3
    8918:	d1e1      	bne.n	88de <__ledf2+0x46>
    891a:	42a5      	cmp	r5, r4
    891c:	db05      	blt.n	892a <__ledf2+0x92>
    891e:	42be      	cmp	r6, r7
    8920:	d8dd      	bhi.n	88de <__ledf2+0x46>
    8922:	d019      	beq.n	8958 <__ledf2+0xc0>
    8924:	2000      	movs	r0, #0
    8926:	42be      	cmp	r6, r7
    8928:	d20a      	bcs.n	8940 <__ledf2+0xa8>
    892a:	4650      	mov	r0, sl
    892c:	2301      	movs	r3, #1
    892e:	3801      	subs	r0, #1
    8930:	4398      	bics	r0, r3
    8932:	3001      	adds	r0, #1
    8934:	e004      	b.n	8940 <__ledf2+0xa8>
    8936:	2201      	movs	r2, #1
    8938:	3b01      	subs	r3, #1
    893a:	4393      	bics	r3, r2
    893c:	0018      	movs	r0, r3
    893e:	3001      	adds	r0, #1
    8940:	bc1c      	pop	{r2, r3, r4}
    8942:	4690      	mov	r8, r2
    8944:	4699      	mov	r9, r3
    8946:	46a2      	mov	sl, r4
    8948:	bdf0      	pop	{r4, r5, r6, r7, pc}
    894a:	433a      	orrs	r2, r7
    894c:	d1d0      	bne.n	88f0 <__ledf2+0x58>
    894e:	459a      	cmp	sl, r3
    8950:	d1c5      	bne.n	88de <__ledf2+0x46>
    8952:	42a5      	cmp	r5, r4
    8954:	dcc3      	bgt.n	88de <__ledf2+0x46>
    8956:	e7e0      	b.n	891a <__ledf2+0x82>
    8958:	45c8      	cmp	r8, r9
    895a:	d8c0      	bhi.n	88de <__ledf2+0x46>
    895c:	2000      	movs	r0, #0
    895e:	45c8      	cmp	r8, r9
    8960:	d3e3      	bcc.n	892a <__ledf2+0x92>
    8962:	e7ed      	b.n	8940 <__ledf2+0xa8>
    8964:	000007ff 	.word	0x000007ff

00008968 <__aeabi_dmul>:
__aeabi_dmul():
    8968:	b5f0      	push	{r4, r5, r6, r7, lr}
    896a:	4657      	mov	r7, sl
    896c:	46de      	mov	lr, fp
    896e:	464e      	mov	r6, r9
    8970:	4645      	mov	r5, r8
    8972:	b5e0      	push	{r5, r6, r7, lr}
    8974:	4683      	mov	fp, r0
    8976:	0006      	movs	r6, r0
    8978:	030f      	lsls	r7, r1, #12
    897a:	0048      	lsls	r0, r1, #1
    897c:	b087      	sub	sp, #28
    897e:	4692      	mov	sl, r2
    8980:	001d      	movs	r5, r3
    8982:	0b3f      	lsrs	r7, r7, #12
    8984:	0d40      	lsrs	r0, r0, #21
    8986:	0fcc      	lsrs	r4, r1, #31
    8988:	2800      	cmp	r0, #0
    898a:	d100      	bne.n	898e <__aeabi_dmul+0x26>
    898c:	e06f      	b.n	8a6e <__aeabi_dmul+0x106>
    898e:	4bde      	ldr	r3, [pc, #888]	; (8d08 <__aeabi_dmul+0x3a0>)
    8990:	4298      	cmp	r0, r3
    8992:	d038      	beq.n	8a06 <__aeabi_dmul+0x9e>
    8994:	2380      	movs	r3, #128	; 0x80
    8996:	00ff      	lsls	r7, r7, #3
    8998:	041b      	lsls	r3, r3, #16
    899a:	431f      	orrs	r7, r3
    899c:	0f73      	lsrs	r3, r6, #29
    899e:	433b      	orrs	r3, r7
    89a0:	9301      	str	r3, [sp, #4]
    89a2:	4bda      	ldr	r3, [pc, #872]	; (8d0c <__aeabi_dmul+0x3a4>)
    89a4:	2700      	movs	r7, #0
    89a6:	4699      	mov	r9, r3
    89a8:	2300      	movs	r3, #0
    89aa:	469b      	mov	fp, r3
    89ac:	00f6      	lsls	r6, r6, #3
    89ae:	4481      	add	r9, r0
    89b0:	032b      	lsls	r3, r5, #12
    89b2:	0069      	lsls	r1, r5, #1
    89b4:	0b1b      	lsrs	r3, r3, #12
    89b6:	4652      	mov	r2, sl
    89b8:	4698      	mov	r8, r3
    89ba:	0d49      	lsrs	r1, r1, #21
    89bc:	0fed      	lsrs	r5, r5, #31
    89be:	2900      	cmp	r1, #0
    89c0:	d100      	bne.n	89c4 <__aeabi_dmul+0x5c>
    89c2:	e085      	b.n	8ad0 <__aeabi_dmul+0x168>
    89c4:	4bd0      	ldr	r3, [pc, #832]	; (8d08 <__aeabi_dmul+0x3a0>)
    89c6:	4299      	cmp	r1, r3
    89c8:	d100      	bne.n	89cc <__aeabi_dmul+0x64>
    89ca:	e073      	b.n	8ab4 <__aeabi_dmul+0x14c>
    89cc:	4643      	mov	r3, r8
    89ce:	00da      	lsls	r2, r3, #3
    89d0:	2380      	movs	r3, #128	; 0x80
    89d2:	041b      	lsls	r3, r3, #16
    89d4:	4313      	orrs	r3, r2
    89d6:	4652      	mov	r2, sl
    89d8:	48cc      	ldr	r0, [pc, #816]	; (8d0c <__aeabi_dmul+0x3a4>)
    89da:	0f52      	lsrs	r2, r2, #29
    89dc:	4684      	mov	ip, r0
    89de:	4313      	orrs	r3, r2
    89e0:	4652      	mov	r2, sl
    89e2:	2000      	movs	r0, #0
    89e4:	4461      	add	r1, ip
    89e6:	00d2      	lsls	r2, r2, #3
    89e8:	4489      	add	r9, r1
    89ea:	0021      	movs	r1, r4
    89ec:	4069      	eors	r1, r5
    89ee:	9100      	str	r1, [sp, #0]
    89f0:	468c      	mov	ip, r1
    89f2:	2101      	movs	r1, #1
    89f4:	4449      	add	r1, r9
    89f6:	468a      	mov	sl, r1
    89f8:	2f0f      	cmp	r7, #15
    89fa:	d900      	bls.n	89fe <__aeabi_dmul+0x96>
    89fc:	e090      	b.n	8b20 <__aeabi_dmul+0x1b8>
    89fe:	49c4      	ldr	r1, [pc, #784]	; (8d10 <__aeabi_dmul+0x3a8>)
    8a00:	00bf      	lsls	r7, r7, #2
    8a02:	59cf      	ldr	r7, [r1, r7]
    8a04:	46bf      	mov	pc, r7
    8a06:	465b      	mov	r3, fp
    8a08:	433b      	orrs	r3, r7
    8a0a:	9301      	str	r3, [sp, #4]
    8a0c:	d000      	beq.n	8a10 <__aeabi_dmul+0xa8>
    8a0e:	e16a      	b.n	8ce6 <__aeabi_dmul+0x37e>
    8a10:	2302      	movs	r3, #2
    8a12:	2708      	movs	r7, #8
    8a14:	2600      	movs	r6, #0
    8a16:	4681      	mov	r9, r0
    8a18:	469b      	mov	fp, r3
    8a1a:	e7c9      	b.n	89b0 <__aeabi_dmul+0x48>
    8a1c:	0032      	movs	r2, r6
    8a1e:	4658      	mov	r0, fp
    8a20:	9b01      	ldr	r3, [sp, #4]
    8a22:	4661      	mov	r1, ip
    8a24:	9100      	str	r1, [sp, #0]
    8a26:	2802      	cmp	r0, #2
    8a28:	d100      	bne.n	8a2c <__aeabi_dmul+0xc4>
    8a2a:	e075      	b.n	8b18 <__aeabi_dmul+0x1b0>
    8a2c:	2803      	cmp	r0, #3
    8a2e:	d100      	bne.n	8a32 <__aeabi_dmul+0xca>
    8a30:	e1fe      	b.n	8e30 <__aeabi_dmul+0x4c8>
    8a32:	2801      	cmp	r0, #1
    8a34:	d000      	beq.n	8a38 <__aeabi_dmul+0xd0>
    8a36:	e12c      	b.n	8c92 <__aeabi_dmul+0x32a>
    8a38:	2300      	movs	r3, #0
    8a3a:	2700      	movs	r7, #0
    8a3c:	2600      	movs	r6, #0
    8a3e:	2500      	movs	r5, #0
    8a40:	033f      	lsls	r7, r7, #12
    8a42:	0d2a      	lsrs	r2, r5, #20
    8a44:	0b3f      	lsrs	r7, r7, #12
    8a46:	48b3      	ldr	r0, [pc, #716]	; (8d14 <__aeabi_dmul+0x3ac>)
    8a48:	0512      	lsls	r2, r2, #20
    8a4a:	433a      	orrs	r2, r7
    8a4c:	4002      	ands	r2, r0
    8a4e:	051b      	lsls	r3, r3, #20
    8a50:	4313      	orrs	r3, r2
    8a52:	9a00      	ldr	r2, [sp, #0]
    8a54:	005b      	lsls	r3, r3, #1
    8a56:	07d1      	lsls	r1, r2, #31
    8a58:	085b      	lsrs	r3, r3, #1
    8a5a:	430b      	orrs	r3, r1
    8a5c:	0030      	movs	r0, r6
    8a5e:	0019      	movs	r1, r3
    8a60:	b007      	add	sp, #28
    8a62:	bc3c      	pop	{r2, r3, r4, r5}
    8a64:	4690      	mov	r8, r2
    8a66:	4699      	mov	r9, r3
    8a68:	46a2      	mov	sl, r4
    8a6a:	46ab      	mov	fp, r5
    8a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8a6e:	465b      	mov	r3, fp
    8a70:	433b      	orrs	r3, r7
    8a72:	9301      	str	r3, [sp, #4]
    8a74:	d100      	bne.n	8a78 <__aeabi_dmul+0x110>
    8a76:	e12f      	b.n	8cd8 <__aeabi_dmul+0x370>
    8a78:	2f00      	cmp	r7, #0
    8a7a:	d100      	bne.n	8a7e <__aeabi_dmul+0x116>
    8a7c:	e1a5      	b.n	8dca <__aeabi_dmul+0x462>
    8a7e:	0038      	movs	r0, r7
    8a80:	f000 fec0 	bl	9804 <__clzsi2>
    8a84:	0003      	movs	r3, r0
    8a86:	3b0b      	subs	r3, #11
    8a88:	2b1c      	cmp	r3, #28
    8a8a:	dd00      	ble.n	8a8e <__aeabi_dmul+0x126>
    8a8c:	e196      	b.n	8dbc <__aeabi_dmul+0x454>
    8a8e:	221d      	movs	r2, #29
    8a90:	1ad3      	subs	r3, r2, r3
    8a92:	465a      	mov	r2, fp
    8a94:	0001      	movs	r1, r0
    8a96:	40da      	lsrs	r2, r3
    8a98:	465e      	mov	r6, fp
    8a9a:	3908      	subs	r1, #8
    8a9c:	408f      	lsls	r7, r1
    8a9e:	0013      	movs	r3, r2
    8aa0:	408e      	lsls	r6, r1
    8aa2:	433b      	orrs	r3, r7
    8aa4:	9301      	str	r3, [sp, #4]
    8aa6:	4b9c      	ldr	r3, [pc, #624]	; (8d18 <__aeabi_dmul+0x3b0>)
    8aa8:	2700      	movs	r7, #0
    8aaa:	1a1b      	subs	r3, r3, r0
    8aac:	4699      	mov	r9, r3
    8aae:	2300      	movs	r3, #0
    8ab0:	469b      	mov	fp, r3
    8ab2:	e77d      	b.n	89b0 <__aeabi_dmul+0x48>
    8ab4:	4641      	mov	r1, r8
    8ab6:	4653      	mov	r3, sl
    8ab8:	430b      	orrs	r3, r1
    8aba:	4993      	ldr	r1, [pc, #588]	; (8d08 <__aeabi_dmul+0x3a0>)
    8abc:	468c      	mov	ip, r1
    8abe:	44e1      	add	r9, ip
    8ac0:	2b00      	cmp	r3, #0
    8ac2:	d000      	beq.n	8ac6 <__aeabi_dmul+0x15e>
    8ac4:	e11a      	b.n	8cfc <__aeabi_dmul+0x394>
    8ac6:	2202      	movs	r2, #2
    8ac8:	2002      	movs	r0, #2
    8aca:	4317      	orrs	r7, r2
    8acc:	2200      	movs	r2, #0
    8ace:	e78c      	b.n	89ea <__aeabi_dmul+0x82>
    8ad0:	4313      	orrs	r3, r2
    8ad2:	d100      	bne.n	8ad6 <__aeabi_dmul+0x16e>
    8ad4:	e10d      	b.n	8cf2 <__aeabi_dmul+0x38a>
    8ad6:	4643      	mov	r3, r8
    8ad8:	2b00      	cmp	r3, #0
    8ada:	d100      	bne.n	8ade <__aeabi_dmul+0x176>
    8adc:	e181      	b.n	8de2 <__aeabi_dmul+0x47a>
    8ade:	4640      	mov	r0, r8
    8ae0:	f000 fe90 	bl	9804 <__clzsi2>
    8ae4:	0002      	movs	r2, r0
    8ae6:	3a0b      	subs	r2, #11
    8ae8:	2a1c      	cmp	r2, #28
    8aea:	dd00      	ble.n	8aee <__aeabi_dmul+0x186>
    8aec:	e172      	b.n	8dd4 <__aeabi_dmul+0x46c>
    8aee:	0001      	movs	r1, r0
    8af0:	4643      	mov	r3, r8
    8af2:	3908      	subs	r1, #8
    8af4:	408b      	lsls	r3, r1
    8af6:	4698      	mov	r8, r3
    8af8:	231d      	movs	r3, #29
    8afa:	1a9a      	subs	r2, r3, r2
    8afc:	4653      	mov	r3, sl
    8afe:	40d3      	lsrs	r3, r2
    8b00:	001a      	movs	r2, r3
    8b02:	4643      	mov	r3, r8
    8b04:	4313      	orrs	r3, r2
    8b06:	4652      	mov	r2, sl
    8b08:	408a      	lsls	r2, r1
    8b0a:	4649      	mov	r1, r9
    8b0c:	1a08      	subs	r0, r1, r0
    8b0e:	4982      	ldr	r1, [pc, #520]	; (8d18 <__aeabi_dmul+0x3b0>)
    8b10:	4689      	mov	r9, r1
    8b12:	4481      	add	r9, r0
    8b14:	2000      	movs	r0, #0
    8b16:	e768      	b.n	89ea <__aeabi_dmul+0x82>
    8b18:	4b7b      	ldr	r3, [pc, #492]	; (8d08 <__aeabi_dmul+0x3a0>)
    8b1a:	2700      	movs	r7, #0
    8b1c:	2600      	movs	r6, #0
    8b1e:	e78e      	b.n	8a3e <__aeabi_dmul+0xd6>
    8b20:	0c14      	lsrs	r4, r2, #16
    8b22:	0412      	lsls	r2, r2, #16
    8b24:	0c12      	lsrs	r2, r2, #16
    8b26:	0011      	movs	r1, r2
    8b28:	0c37      	lsrs	r7, r6, #16
    8b2a:	0436      	lsls	r6, r6, #16
    8b2c:	0c35      	lsrs	r5, r6, #16
    8b2e:	4379      	muls	r1, r7
    8b30:	0028      	movs	r0, r5
    8b32:	468c      	mov	ip, r1
    8b34:	002e      	movs	r6, r5
    8b36:	4360      	muls	r0, r4
    8b38:	4460      	add	r0, ip
    8b3a:	4683      	mov	fp, r0
    8b3c:	4356      	muls	r6, r2
    8b3e:	0021      	movs	r1, r4
    8b40:	0c30      	lsrs	r0, r6, #16
    8b42:	4680      	mov	r8, r0
    8b44:	4658      	mov	r0, fp
    8b46:	4379      	muls	r1, r7
    8b48:	4440      	add	r0, r8
    8b4a:	9102      	str	r1, [sp, #8]
    8b4c:	4584      	cmp	ip, r0
    8b4e:	d906      	bls.n	8b5e <__aeabi_dmul+0x1f6>
    8b50:	4688      	mov	r8, r1
    8b52:	2180      	movs	r1, #128	; 0x80
    8b54:	0249      	lsls	r1, r1, #9
    8b56:	468c      	mov	ip, r1
    8b58:	44e0      	add	r8, ip
    8b5a:	4641      	mov	r1, r8
    8b5c:	9102      	str	r1, [sp, #8]
    8b5e:	0436      	lsls	r6, r6, #16
    8b60:	0c01      	lsrs	r1, r0, #16
    8b62:	0c36      	lsrs	r6, r6, #16
    8b64:	0400      	lsls	r0, r0, #16
    8b66:	468b      	mov	fp, r1
    8b68:	1981      	adds	r1, r0, r6
    8b6a:	0c1e      	lsrs	r6, r3, #16
    8b6c:	041b      	lsls	r3, r3, #16
    8b6e:	0c1b      	lsrs	r3, r3, #16
    8b70:	9103      	str	r1, [sp, #12]
    8b72:	0019      	movs	r1, r3
    8b74:	4379      	muls	r1, r7
    8b76:	468c      	mov	ip, r1
    8b78:	0028      	movs	r0, r5
    8b7a:	4375      	muls	r5, r6
    8b7c:	4465      	add	r5, ip
    8b7e:	46a8      	mov	r8, r5
    8b80:	4358      	muls	r0, r3
    8b82:	0c05      	lsrs	r5, r0, #16
    8b84:	4445      	add	r5, r8
    8b86:	4377      	muls	r7, r6
    8b88:	42a9      	cmp	r1, r5
    8b8a:	d903      	bls.n	8b94 <__aeabi_dmul+0x22c>
    8b8c:	2180      	movs	r1, #128	; 0x80
    8b8e:	0249      	lsls	r1, r1, #9
    8b90:	468c      	mov	ip, r1
    8b92:	4467      	add	r7, ip
    8b94:	0c29      	lsrs	r1, r5, #16
    8b96:	468c      	mov	ip, r1
    8b98:	0039      	movs	r1, r7
    8b9a:	0400      	lsls	r0, r0, #16
    8b9c:	0c00      	lsrs	r0, r0, #16
    8b9e:	042d      	lsls	r5, r5, #16
    8ba0:	182d      	adds	r5, r5, r0
    8ba2:	4461      	add	r1, ip
    8ba4:	44ab      	add	fp, r5
    8ba6:	9105      	str	r1, [sp, #20]
    8ba8:	4659      	mov	r1, fp
    8baa:	9104      	str	r1, [sp, #16]
    8bac:	9901      	ldr	r1, [sp, #4]
    8bae:	040f      	lsls	r7, r1, #16
    8bb0:	0c3f      	lsrs	r7, r7, #16
    8bb2:	0c08      	lsrs	r0, r1, #16
    8bb4:	0039      	movs	r1, r7
    8bb6:	4351      	muls	r1, r2
    8bb8:	4342      	muls	r2, r0
    8bba:	4690      	mov	r8, r2
    8bbc:	0002      	movs	r2, r0
    8bbe:	468c      	mov	ip, r1
    8bc0:	0c09      	lsrs	r1, r1, #16
    8bc2:	468b      	mov	fp, r1
    8bc4:	4362      	muls	r2, r4
    8bc6:	437c      	muls	r4, r7
    8bc8:	4444      	add	r4, r8
    8bca:	445c      	add	r4, fp
    8bcc:	45a0      	cmp	r8, r4
    8bce:	d903      	bls.n	8bd8 <__aeabi_dmul+0x270>
    8bd0:	2180      	movs	r1, #128	; 0x80
    8bd2:	0249      	lsls	r1, r1, #9
    8bd4:	4688      	mov	r8, r1
    8bd6:	4442      	add	r2, r8
    8bd8:	0c21      	lsrs	r1, r4, #16
    8bda:	4688      	mov	r8, r1
    8bdc:	4661      	mov	r1, ip
    8bde:	0409      	lsls	r1, r1, #16
    8be0:	0c09      	lsrs	r1, r1, #16
    8be2:	468c      	mov	ip, r1
    8be4:	0039      	movs	r1, r7
    8be6:	4359      	muls	r1, r3
    8be8:	4343      	muls	r3, r0
    8bea:	4370      	muls	r0, r6
    8bec:	437e      	muls	r6, r7
    8bee:	0c0f      	lsrs	r7, r1, #16
    8bf0:	18f6      	adds	r6, r6, r3
    8bf2:	0424      	lsls	r4, r4, #16
    8bf4:	19be      	adds	r6, r7, r6
    8bf6:	4464      	add	r4, ip
    8bf8:	4442      	add	r2, r8
    8bfa:	468c      	mov	ip, r1
    8bfc:	42b3      	cmp	r3, r6
    8bfe:	d903      	bls.n	8c08 <__aeabi_dmul+0x2a0>
    8c00:	2380      	movs	r3, #128	; 0x80
    8c02:	025b      	lsls	r3, r3, #9
    8c04:	4698      	mov	r8, r3
    8c06:	4440      	add	r0, r8
    8c08:	9b02      	ldr	r3, [sp, #8]
    8c0a:	4661      	mov	r1, ip
    8c0c:	4698      	mov	r8, r3
    8c0e:	9b04      	ldr	r3, [sp, #16]
    8c10:	0437      	lsls	r7, r6, #16
    8c12:	4443      	add	r3, r8
    8c14:	469b      	mov	fp, r3
    8c16:	45ab      	cmp	fp, r5
    8c18:	41ad      	sbcs	r5, r5
    8c1a:	426b      	negs	r3, r5
    8c1c:	040d      	lsls	r5, r1, #16
    8c1e:	9905      	ldr	r1, [sp, #20]
    8c20:	0c2d      	lsrs	r5, r5, #16
    8c22:	468c      	mov	ip, r1
    8c24:	197f      	adds	r7, r7, r5
    8c26:	4467      	add	r7, ip
    8c28:	18fd      	adds	r5, r7, r3
    8c2a:	46a8      	mov	r8, r5
    8c2c:	465d      	mov	r5, fp
    8c2e:	192d      	adds	r5, r5, r4
    8c30:	42a5      	cmp	r5, r4
    8c32:	41a4      	sbcs	r4, r4
    8c34:	4693      	mov	fp, r2
    8c36:	4264      	negs	r4, r4
    8c38:	46a4      	mov	ip, r4
    8c3a:	44c3      	add	fp, r8
    8c3c:	44dc      	add	ip, fp
    8c3e:	428f      	cmp	r7, r1
    8c40:	41bf      	sbcs	r7, r7
    8c42:	4598      	cmp	r8, r3
    8c44:	419b      	sbcs	r3, r3
    8c46:	4593      	cmp	fp, r2
    8c48:	4192      	sbcs	r2, r2
    8c4a:	45a4      	cmp	ip, r4
    8c4c:	41a4      	sbcs	r4, r4
    8c4e:	425b      	negs	r3, r3
    8c50:	427f      	negs	r7, r7
    8c52:	431f      	orrs	r7, r3
    8c54:	0c36      	lsrs	r6, r6, #16
    8c56:	4252      	negs	r2, r2
    8c58:	4264      	negs	r4, r4
    8c5a:	19bf      	adds	r7, r7, r6
    8c5c:	4322      	orrs	r2, r4
    8c5e:	18bf      	adds	r7, r7, r2
    8c60:	4662      	mov	r2, ip
    8c62:	1838      	adds	r0, r7, r0
    8c64:	0243      	lsls	r3, r0, #9
    8c66:	0dd2      	lsrs	r2, r2, #23
    8c68:	9903      	ldr	r1, [sp, #12]
    8c6a:	4313      	orrs	r3, r2
    8c6c:	026a      	lsls	r2, r5, #9
    8c6e:	430a      	orrs	r2, r1
    8c70:	1e50      	subs	r0, r2, #1
    8c72:	4182      	sbcs	r2, r0
    8c74:	4661      	mov	r1, ip
    8c76:	0ded      	lsrs	r5, r5, #23
    8c78:	432a      	orrs	r2, r5
    8c7a:	024e      	lsls	r6, r1, #9
    8c7c:	4332      	orrs	r2, r6
    8c7e:	01d9      	lsls	r1, r3, #7
    8c80:	d400      	bmi.n	8c84 <__aeabi_dmul+0x31c>
    8c82:	e0b3      	b.n	8dec <__aeabi_dmul+0x484>
    8c84:	2601      	movs	r6, #1
    8c86:	0850      	lsrs	r0, r2, #1
    8c88:	4032      	ands	r2, r6
    8c8a:	4302      	orrs	r2, r0
    8c8c:	07de      	lsls	r6, r3, #31
    8c8e:	4332      	orrs	r2, r6
    8c90:	085b      	lsrs	r3, r3, #1
    8c92:	4c22      	ldr	r4, [pc, #136]	; (8d1c <__aeabi_dmul+0x3b4>)
    8c94:	4454      	add	r4, sl
    8c96:	2c00      	cmp	r4, #0
    8c98:	dd62      	ble.n	8d60 <__aeabi_dmul+0x3f8>
    8c9a:	0751      	lsls	r1, r2, #29
    8c9c:	d009      	beq.n	8cb2 <__aeabi_dmul+0x34a>
    8c9e:	200f      	movs	r0, #15
    8ca0:	4010      	ands	r0, r2
    8ca2:	2804      	cmp	r0, #4
    8ca4:	d005      	beq.n	8cb2 <__aeabi_dmul+0x34a>
    8ca6:	1d10      	adds	r0, r2, #4
    8ca8:	4290      	cmp	r0, r2
    8caa:	4192      	sbcs	r2, r2
    8cac:	4252      	negs	r2, r2
    8cae:	189b      	adds	r3, r3, r2
    8cb0:	0002      	movs	r2, r0
    8cb2:	01d9      	lsls	r1, r3, #7
    8cb4:	d504      	bpl.n	8cc0 <__aeabi_dmul+0x358>
    8cb6:	2480      	movs	r4, #128	; 0x80
    8cb8:	4819      	ldr	r0, [pc, #100]	; (8d20 <__aeabi_dmul+0x3b8>)
    8cba:	00e4      	lsls	r4, r4, #3
    8cbc:	4003      	ands	r3, r0
    8cbe:	4454      	add	r4, sl
    8cc0:	4818      	ldr	r0, [pc, #96]	; (8d24 <__aeabi_dmul+0x3bc>)
    8cc2:	4284      	cmp	r4, r0
    8cc4:	dd00      	ble.n	8cc8 <__aeabi_dmul+0x360>
    8cc6:	e727      	b.n	8b18 <__aeabi_dmul+0x1b0>
    8cc8:	075e      	lsls	r6, r3, #29
    8cca:	025b      	lsls	r3, r3, #9
    8ccc:	08d2      	lsrs	r2, r2, #3
    8cce:	0b1f      	lsrs	r7, r3, #12
    8cd0:	0563      	lsls	r3, r4, #21
    8cd2:	4316      	orrs	r6, r2
    8cd4:	0d5b      	lsrs	r3, r3, #21
    8cd6:	e6b2      	b.n	8a3e <__aeabi_dmul+0xd6>
    8cd8:	2300      	movs	r3, #0
    8cda:	4699      	mov	r9, r3
    8cdc:	3301      	adds	r3, #1
    8cde:	2704      	movs	r7, #4
    8ce0:	2600      	movs	r6, #0
    8ce2:	469b      	mov	fp, r3
    8ce4:	e664      	b.n	89b0 <__aeabi_dmul+0x48>
    8ce6:	2303      	movs	r3, #3
    8ce8:	9701      	str	r7, [sp, #4]
    8cea:	4681      	mov	r9, r0
    8cec:	270c      	movs	r7, #12
    8cee:	469b      	mov	fp, r3
    8cf0:	e65e      	b.n	89b0 <__aeabi_dmul+0x48>
    8cf2:	2201      	movs	r2, #1
    8cf4:	2001      	movs	r0, #1
    8cf6:	4317      	orrs	r7, r2
    8cf8:	2200      	movs	r2, #0
    8cfa:	e676      	b.n	89ea <__aeabi_dmul+0x82>
    8cfc:	2303      	movs	r3, #3
    8cfe:	2003      	movs	r0, #3
    8d00:	431f      	orrs	r7, r3
    8d02:	4643      	mov	r3, r8
    8d04:	e671      	b.n	89ea <__aeabi_dmul+0x82>
    8d06:	46c0      	nop			; (mov r8, r8)
    8d08:	000007ff 	.word	0x000007ff
    8d0c:	fffffc01 	.word	0xfffffc01
    8d10:	0000b00c 	.word	0x0000b00c
    8d14:	800fffff 	.word	0x800fffff
    8d18:	fffffc0d 	.word	0xfffffc0d
    8d1c:	000003ff 	.word	0x000003ff
    8d20:	feffffff 	.word	0xfeffffff
    8d24:	000007fe 	.word	0x000007fe
    8d28:	2300      	movs	r3, #0
    8d2a:	2780      	movs	r7, #128	; 0x80
    8d2c:	9300      	str	r3, [sp, #0]
    8d2e:	033f      	lsls	r7, r7, #12
    8d30:	2600      	movs	r6, #0
    8d32:	4b43      	ldr	r3, [pc, #268]	; (8e40 <__aeabi_dmul+0x4d8>)
    8d34:	e683      	b.n	8a3e <__aeabi_dmul+0xd6>
    8d36:	9b01      	ldr	r3, [sp, #4]
    8d38:	0032      	movs	r2, r6
    8d3a:	46a4      	mov	ip, r4
    8d3c:	4658      	mov	r0, fp
    8d3e:	e670      	b.n	8a22 <__aeabi_dmul+0xba>
    8d40:	46ac      	mov	ip, r5
    8d42:	e66e      	b.n	8a22 <__aeabi_dmul+0xba>
    8d44:	2780      	movs	r7, #128	; 0x80
    8d46:	9901      	ldr	r1, [sp, #4]
    8d48:	033f      	lsls	r7, r7, #12
    8d4a:	4239      	tst	r1, r7
    8d4c:	d02d      	beq.n	8daa <__aeabi_dmul+0x442>
    8d4e:	423b      	tst	r3, r7
    8d50:	d12b      	bne.n	8daa <__aeabi_dmul+0x442>
    8d52:	431f      	orrs	r7, r3
    8d54:	033f      	lsls	r7, r7, #12
    8d56:	0b3f      	lsrs	r7, r7, #12
    8d58:	9500      	str	r5, [sp, #0]
    8d5a:	0016      	movs	r6, r2
    8d5c:	4b38      	ldr	r3, [pc, #224]	; (8e40 <__aeabi_dmul+0x4d8>)
    8d5e:	e66e      	b.n	8a3e <__aeabi_dmul+0xd6>
    8d60:	2501      	movs	r5, #1
    8d62:	1b2d      	subs	r5, r5, r4
    8d64:	2d38      	cmp	r5, #56	; 0x38
    8d66:	dd00      	ble.n	8d6a <__aeabi_dmul+0x402>
    8d68:	e666      	b.n	8a38 <__aeabi_dmul+0xd0>
    8d6a:	2d1f      	cmp	r5, #31
    8d6c:	dc40      	bgt.n	8df0 <__aeabi_dmul+0x488>
    8d6e:	4835      	ldr	r0, [pc, #212]	; (8e44 <__aeabi_dmul+0x4dc>)
    8d70:	001c      	movs	r4, r3
    8d72:	4450      	add	r0, sl
    8d74:	0016      	movs	r6, r2
    8d76:	4082      	lsls	r2, r0
    8d78:	4084      	lsls	r4, r0
    8d7a:	40ee      	lsrs	r6, r5
    8d7c:	1e50      	subs	r0, r2, #1
    8d7e:	4182      	sbcs	r2, r0
    8d80:	4334      	orrs	r4, r6
    8d82:	4314      	orrs	r4, r2
    8d84:	40eb      	lsrs	r3, r5
    8d86:	0762      	lsls	r2, r4, #29
    8d88:	d009      	beq.n	8d9e <__aeabi_dmul+0x436>
    8d8a:	220f      	movs	r2, #15
    8d8c:	4022      	ands	r2, r4
    8d8e:	2a04      	cmp	r2, #4
    8d90:	d005      	beq.n	8d9e <__aeabi_dmul+0x436>
    8d92:	0022      	movs	r2, r4
    8d94:	1d14      	adds	r4, r2, #4
    8d96:	4294      	cmp	r4, r2
    8d98:	4180      	sbcs	r0, r0
    8d9a:	4240      	negs	r0, r0
    8d9c:	181b      	adds	r3, r3, r0
    8d9e:	021a      	lsls	r2, r3, #8
    8da0:	d53e      	bpl.n	8e20 <__aeabi_dmul+0x4b8>
    8da2:	2301      	movs	r3, #1
    8da4:	2700      	movs	r7, #0
    8da6:	2600      	movs	r6, #0
    8da8:	e649      	b.n	8a3e <__aeabi_dmul+0xd6>
    8daa:	2780      	movs	r7, #128	; 0x80
    8dac:	9b01      	ldr	r3, [sp, #4]
    8dae:	033f      	lsls	r7, r7, #12
    8db0:	431f      	orrs	r7, r3
    8db2:	033f      	lsls	r7, r7, #12
    8db4:	0b3f      	lsrs	r7, r7, #12
    8db6:	9400      	str	r4, [sp, #0]
    8db8:	4b21      	ldr	r3, [pc, #132]	; (8e40 <__aeabi_dmul+0x4d8>)
    8dba:	e640      	b.n	8a3e <__aeabi_dmul+0xd6>
    8dbc:	0003      	movs	r3, r0
    8dbe:	465a      	mov	r2, fp
    8dc0:	3b28      	subs	r3, #40	; 0x28
    8dc2:	409a      	lsls	r2, r3
    8dc4:	2600      	movs	r6, #0
    8dc6:	9201      	str	r2, [sp, #4]
    8dc8:	e66d      	b.n	8aa6 <__aeabi_dmul+0x13e>
    8dca:	4658      	mov	r0, fp
    8dcc:	f000 fd1a 	bl	9804 <__clzsi2>
    8dd0:	3020      	adds	r0, #32
    8dd2:	e657      	b.n	8a84 <__aeabi_dmul+0x11c>
    8dd4:	0003      	movs	r3, r0
    8dd6:	4652      	mov	r2, sl
    8dd8:	3b28      	subs	r3, #40	; 0x28
    8dda:	409a      	lsls	r2, r3
    8ddc:	0013      	movs	r3, r2
    8dde:	2200      	movs	r2, #0
    8de0:	e693      	b.n	8b0a <__aeabi_dmul+0x1a2>
    8de2:	4650      	mov	r0, sl
    8de4:	f000 fd0e 	bl	9804 <__clzsi2>
    8de8:	3020      	adds	r0, #32
    8dea:	e67b      	b.n	8ae4 <__aeabi_dmul+0x17c>
    8dec:	46ca      	mov	sl, r9
    8dee:	e750      	b.n	8c92 <__aeabi_dmul+0x32a>
    8df0:	201f      	movs	r0, #31
    8df2:	001e      	movs	r6, r3
    8df4:	4240      	negs	r0, r0
    8df6:	1b04      	subs	r4, r0, r4
    8df8:	40e6      	lsrs	r6, r4
    8dfa:	2d20      	cmp	r5, #32
    8dfc:	d003      	beq.n	8e06 <__aeabi_dmul+0x49e>
    8dfe:	4c12      	ldr	r4, [pc, #72]	; (8e48 <__aeabi_dmul+0x4e0>)
    8e00:	4454      	add	r4, sl
    8e02:	40a3      	lsls	r3, r4
    8e04:	431a      	orrs	r2, r3
    8e06:	1e50      	subs	r0, r2, #1
    8e08:	4182      	sbcs	r2, r0
    8e0a:	4332      	orrs	r2, r6
    8e0c:	2607      	movs	r6, #7
    8e0e:	2700      	movs	r7, #0
    8e10:	4016      	ands	r6, r2
    8e12:	d009      	beq.n	8e28 <__aeabi_dmul+0x4c0>
    8e14:	200f      	movs	r0, #15
    8e16:	2300      	movs	r3, #0
    8e18:	4010      	ands	r0, r2
    8e1a:	0014      	movs	r4, r2
    8e1c:	2804      	cmp	r0, #4
    8e1e:	d1b9      	bne.n	8d94 <__aeabi_dmul+0x42c>
    8e20:	0022      	movs	r2, r4
    8e22:	075e      	lsls	r6, r3, #29
    8e24:	025b      	lsls	r3, r3, #9
    8e26:	0b1f      	lsrs	r7, r3, #12
    8e28:	08d2      	lsrs	r2, r2, #3
    8e2a:	4316      	orrs	r6, r2
    8e2c:	2300      	movs	r3, #0
    8e2e:	e606      	b.n	8a3e <__aeabi_dmul+0xd6>
    8e30:	2780      	movs	r7, #128	; 0x80
    8e32:	033f      	lsls	r7, r7, #12
    8e34:	431f      	orrs	r7, r3
    8e36:	033f      	lsls	r7, r7, #12
    8e38:	0b3f      	lsrs	r7, r7, #12
    8e3a:	0016      	movs	r6, r2
    8e3c:	4b00      	ldr	r3, [pc, #0]	; (8e40 <__aeabi_dmul+0x4d8>)
    8e3e:	e5fe      	b.n	8a3e <__aeabi_dmul+0xd6>
    8e40:	000007ff 	.word	0x000007ff
    8e44:	0000041e 	.word	0x0000041e
    8e48:	0000043e 	.word	0x0000043e

00008e4c <__aeabi_dsub>:
__aeabi_dsub():
    8e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8e4e:	4657      	mov	r7, sl
    8e50:	464e      	mov	r6, r9
    8e52:	4645      	mov	r5, r8
    8e54:	46de      	mov	lr, fp
    8e56:	000c      	movs	r4, r1
    8e58:	0309      	lsls	r1, r1, #12
    8e5a:	b5e0      	push	{r5, r6, r7, lr}
    8e5c:	0a49      	lsrs	r1, r1, #9
    8e5e:	0f46      	lsrs	r6, r0, #29
    8e60:	005f      	lsls	r7, r3, #1
    8e62:	4331      	orrs	r1, r6
    8e64:	031e      	lsls	r6, r3, #12
    8e66:	0fdb      	lsrs	r3, r3, #31
    8e68:	0a76      	lsrs	r6, r6, #9
    8e6a:	469b      	mov	fp, r3
    8e6c:	0f53      	lsrs	r3, r2, #29
    8e6e:	4333      	orrs	r3, r6
    8e70:	4ec8      	ldr	r6, [pc, #800]	; (9194 <__aeabi_dsub+0x348>)
    8e72:	0065      	lsls	r5, r4, #1
    8e74:	00c0      	lsls	r0, r0, #3
    8e76:	0fe4      	lsrs	r4, r4, #31
    8e78:	00d2      	lsls	r2, r2, #3
    8e7a:	0d6d      	lsrs	r5, r5, #21
    8e7c:	46a2      	mov	sl, r4
    8e7e:	4681      	mov	r9, r0
    8e80:	0d7f      	lsrs	r7, r7, #21
    8e82:	469c      	mov	ip, r3
    8e84:	4690      	mov	r8, r2
    8e86:	42b7      	cmp	r7, r6
    8e88:	d100      	bne.n	8e8c <__aeabi_dsub+0x40>
    8e8a:	e0b9      	b.n	9000 <__aeabi_dsub+0x1b4>
    8e8c:	465b      	mov	r3, fp
    8e8e:	2601      	movs	r6, #1
    8e90:	4073      	eors	r3, r6
    8e92:	469b      	mov	fp, r3
    8e94:	1bee      	subs	r6, r5, r7
    8e96:	45a3      	cmp	fp, r4
    8e98:	d100      	bne.n	8e9c <__aeabi_dsub+0x50>
    8e9a:	e083      	b.n	8fa4 <__aeabi_dsub+0x158>
    8e9c:	2e00      	cmp	r6, #0
    8e9e:	dd63      	ble.n	8f68 <__aeabi_dsub+0x11c>
    8ea0:	2f00      	cmp	r7, #0
    8ea2:	d000      	beq.n	8ea6 <__aeabi_dsub+0x5a>
    8ea4:	e0b1      	b.n	900a <__aeabi_dsub+0x1be>
    8ea6:	4663      	mov	r3, ip
    8ea8:	4313      	orrs	r3, r2
    8eaa:	d100      	bne.n	8eae <__aeabi_dsub+0x62>
    8eac:	e123      	b.n	90f6 <__aeabi_dsub+0x2aa>
    8eae:	1e73      	subs	r3, r6, #1
    8eb0:	2b00      	cmp	r3, #0
    8eb2:	d000      	beq.n	8eb6 <__aeabi_dsub+0x6a>
    8eb4:	e1ba      	b.n	922c <__aeabi_dsub+0x3e0>
    8eb6:	1a86      	subs	r6, r0, r2
    8eb8:	4663      	mov	r3, ip
    8eba:	42b0      	cmp	r0, r6
    8ebc:	4180      	sbcs	r0, r0
    8ebe:	2501      	movs	r5, #1
    8ec0:	1ac9      	subs	r1, r1, r3
    8ec2:	4240      	negs	r0, r0
    8ec4:	1a09      	subs	r1, r1, r0
    8ec6:	020b      	lsls	r3, r1, #8
    8ec8:	d400      	bmi.n	8ecc <__aeabi_dsub+0x80>
    8eca:	e147      	b.n	915c <__aeabi_dsub+0x310>
    8ecc:	0249      	lsls	r1, r1, #9
    8ece:	0a4b      	lsrs	r3, r1, #9
    8ed0:	4698      	mov	r8, r3
    8ed2:	4643      	mov	r3, r8
    8ed4:	2b00      	cmp	r3, #0
    8ed6:	d100      	bne.n	8eda <__aeabi_dsub+0x8e>
    8ed8:	e189      	b.n	91ee <__aeabi_dsub+0x3a2>
    8eda:	4640      	mov	r0, r8
    8edc:	f000 fc92 	bl	9804 <__clzsi2>
    8ee0:	0003      	movs	r3, r0
    8ee2:	3b08      	subs	r3, #8
    8ee4:	2b1f      	cmp	r3, #31
    8ee6:	dd00      	ble.n	8eea <__aeabi_dsub+0x9e>
    8ee8:	e17c      	b.n	91e4 <__aeabi_dsub+0x398>
    8eea:	2220      	movs	r2, #32
    8eec:	0030      	movs	r0, r6
    8eee:	1ad2      	subs	r2, r2, r3
    8ef0:	4641      	mov	r1, r8
    8ef2:	40d0      	lsrs	r0, r2
    8ef4:	4099      	lsls	r1, r3
    8ef6:	0002      	movs	r2, r0
    8ef8:	409e      	lsls	r6, r3
    8efa:	430a      	orrs	r2, r1
    8efc:	429d      	cmp	r5, r3
    8efe:	dd00      	ble.n	8f02 <__aeabi_dsub+0xb6>
    8f00:	e16a      	b.n	91d8 <__aeabi_dsub+0x38c>
    8f02:	1b5d      	subs	r5, r3, r5
    8f04:	1c6b      	adds	r3, r5, #1
    8f06:	2b1f      	cmp	r3, #31
    8f08:	dd00      	ble.n	8f0c <__aeabi_dsub+0xc0>
    8f0a:	e194      	b.n	9236 <__aeabi_dsub+0x3ea>
    8f0c:	2120      	movs	r1, #32
    8f0e:	0010      	movs	r0, r2
    8f10:	0035      	movs	r5, r6
    8f12:	1ac9      	subs	r1, r1, r3
    8f14:	408e      	lsls	r6, r1
    8f16:	40da      	lsrs	r2, r3
    8f18:	4088      	lsls	r0, r1
    8f1a:	40dd      	lsrs	r5, r3
    8f1c:	1e71      	subs	r1, r6, #1
    8f1e:	418e      	sbcs	r6, r1
    8f20:	0011      	movs	r1, r2
    8f22:	2207      	movs	r2, #7
    8f24:	4328      	orrs	r0, r5
    8f26:	2500      	movs	r5, #0
    8f28:	4306      	orrs	r6, r0
    8f2a:	4032      	ands	r2, r6
    8f2c:	2a00      	cmp	r2, #0
    8f2e:	d009      	beq.n	8f44 <__aeabi_dsub+0xf8>
    8f30:	230f      	movs	r3, #15
    8f32:	4033      	ands	r3, r6
    8f34:	2b04      	cmp	r3, #4
    8f36:	d005      	beq.n	8f44 <__aeabi_dsub+0xf8>
    8f38:	1d33      	adds	r3, r6, #4
    8f3a:	42b3      	cmp	r3, r6
    8f3c:	41b6      	sbcs	r6, r6
    8f3e:	4276      	negs	r6, r6
    8f40:	1989      	adds	r1, r1, r6
    8f42:	001e      	movs	r6, r3
    8f44:	020b      	lsls	r3, r1, #8
    8f46:	d400      	bmi.n	8f4a <__aeabi_dsub+0xfe>
    8f48:	e23d      	b.n	93c6 <__aeabi_dsub+0x57a>
    8f4a:	1c6a      	adds	r2, r5, #1
    8f4c:	4b91      	ldr	r3, [pc, #580]	; (9194 <__aeabi_dsub+0x348>)
    8f4e:	0555      	lsls	r5, r2, #21
    8f50:	0d6d      	lsrs	r5, r5, #21
    8f52:	429a      	cmp	r2, r3
    8f54:	d100      	bne.n	8f58 <__aeabi_dsub+0x10c>
    8f56:	e119      	b.n	918c <__aeabi_dsub+0x340>
    8f58:	4a8f      	ldr	r2, [pc, #572]	; (9198 <__aeabi_dsub+0x34c>)
    8f5a:	08f6      	lsrs	r6, r6, #3
    8f5c:	400a      	ands	r2, r1
    8f5e:	0757      	lsls	r7, r2, #29
    8f60:	0252      	lsls	r2, r2, #9
    8f62:	4337      	orrs	r7, r6
    8f64:	0b12      	lsrs	r2, r2, #12
    8f66:	e09b      	b.n	90a0 <__aeabi_dsub+0x254>
    8f68:	2e00      	cmp	r6, #0
    8f6a:	d000      	beq.n	8f6e <__aeabi_dsub+0x122>
    8f6c:	e0c5      	b.n	90fa <__aeabi_dsub+0x2ae>
    8f6e:	1c6e      	adds	r6, r5, #1
    8f70:	0576      	lsls	r6, r6, #21
    8f72:	0d76      	lsrs	r6, r6, #21
    8f74:	2e01      	cmp	r6, #1
    8f76:	dc00      	bgt.n	8f7a <__aeabi_dsub+0x12e>
    8f78:	e148      	b.n	920c <__aeabi_dsub+0x3c0>
    8f7a:	4667      	mov	r7, ip
    8f7c:	1a86      	subs	r6, r0, r2
    8f7e:	1bcb      	subs	r3, r1, r7
    8f80:	42b0      	cmp	r0, r6
    8f82:	41bf      	sbcs	r7, r7
    8f84:	427f      	negs	r7, r7
    8f86:	46b8      	mov	r8, r7
    8f88:	001f      	movs	r7, r3
    8f8a:	4643      	mov	r3, r8
    8f8c:	1aff      	subs	r7, r7, r3
    8f8e:	003b      	movs	r3, r7
    8f90:	46b8      	mov	r8, r7
    8f92:	021b      	lsls	r3, r3, #8
    8f94:	d500      	bpl.n	8f98 <__aeabi_dsub+0x14c>
    8f96:	e15f      	b.n	9258 <__aeabi_dsub+0x40c>
    8f98:	4337      	orrs	r7, r6
    8f9a:	d19a      	bne.n	8ed2 <__aeabi_dsub+0x86>
    8f9c:	2200      	movs	r2, #0
    8f9e:	2400      	movs	r4, #0
    8fa0:	2500      	movs	r5, #0
    8fa2:	e079      	b.n	9098 <__aeabi_dsub+0x24c>
    8fa4:	2e00      	cmp	r6, #0
    8fa6:	dc00      	bgt.n	8faa <__aeabi_dsub+0x15e>
    8fa8:	e0fa      	b.n	91a0 <__aeabi_dsub+0x354>
    8faa:	2f00      	cmp	r7, #0
    8fac:	d100      	bne.n	8fb0 <__aeabi_dsub+0x164>
    8fae:	e08d      	b.n	90cc <__aeabi_dsub+0x280>
    8fb0:	4b78      	ldr	r3, [pc, #480]	; (9194 <__aeabi_dsub+0x348>)
    8fb2:	429d      	cmp	r5, r3
    8fb4:	d067      	beq.n	9086 <__aeabi_dsub+0x23a>
    8fb6:	2380      	movs	r3, #128	; 0x80
    8fb8:	4667      	mov	r7, ip
    8fba:	041b      	lsls	r3, r3, #16
    8fbc:	431f      	orrs	r7, r3
    8fbe:	46bc      	mov	ip, r7
    8fc0:	2e38      	cmp	r6, #56	; 0x38
    8fc2:	dc00      	bgt.n	8fc6 <__aeabi_dsub+0x17a>
    8fc4:	e152      	b.n	926c <__aeabi_dsub+0x420>
    8fc6:	4663      	mov	r3, ip
    8fc8:	4313      	orrs	r3, r2
    8fca:	1e5a      	subs	r2, r3, #1
    8fcc:	4193      	sbcs	r3, r2
    8fce:	181e      	adds	r6, r3, r0
    8fd0:	4286      	cmp	r6, r0
    8fd2:	4180      	sbcs	r0, r0
    8fd4:	4240      	negs	r0, r0
    8fd6:	1809      	adds	r1, r1, r0
    8fd8:	020b      	lsls	r3, r1, #8
    8fda:	d400      	bmi.n	8fde <__aeabi_dsub+0x192>
    8fdc:	e0be      	b.n	915c <__aeabi_dsub+0x310>
    8fde:	4b6d      	ldr	r3, [pc, #436]	; (9194 <__aeabi_dsub+0x348>)
    8fe0:	3501      	adds	r5, #1
    8fe2:	429d      	cmp	r5, r3
    8fe4:	d100      	bne.n	8fe8 <__aeabi_dsub+0x19c>
    8fe6:	e0d2      	b.n	918e <__aeabi_dsub+0x342>
    8fe8:	4a6b      	ldr	r2, [pc, #428]	; (9198 <__aeabi_dsub+0x34c>)
    8fea:	0873      	lsrs	r3, r6, #1
    8fec:	400a      	ands	r2, r1
    8fee:	2101      	movs	r1, #1
    8ff0:	400e      	ands	r6, r1
    8ff2:	431e      	orrs	r6, r3
    8ff4:	0851      	lsrs	r1, r2, #1
    8ff6:	07d3      	lsls	r3, r2, #31
    8ff8:	2207      	movs	r2, #7
    8ffa:	431e      	orrs	r6, r3
    8ffc:	4032      	ands	r2, r6
    8ffe:	e795      	b.n	8f2c <__aeabi_dsub+0xe0>
    9000:	001e      	movs	r6, r3
    9002:	4316      	orrs	r6, r2
    9004:	d000      	beq.n	9008 <__aeabi_dsub+0x1bc>
    9006:	e745      	b.n	8e94 <__aeabi_dsub+0x48>
    9008:	e740      	b.n	8e8c <__aeabi_dsub+0x40>
    900a:	4b62      	ldr	r3, [pc, #392]	; (9194 <__aeabi_dsub+0x348>)
    900c:	429d      	cmp	r5, r3
    900e:	d03a      	beq.n	9086 <__aeabi_dsub+0x23a>
    9010:	2380      	movs	r3, #128	; 0x80
    9012:	4667      	mov	r7, ip
    9014:	041b      	lsls	r3, r3, #16
    9016:	431f      	orrs	r7, r3
    9018:	46bc      	mov	ip, r7
    901a:	2e38      	cmp	r6, #56	; 0x38
    901c:	dd00      	ble.n	9020 <__aeabi_dsub+0x1d4>
    901e:	e0eb      	b.n	91f8 <__aeabi_dsub+0x3ac>
    9020:	2e1f      	cmp	r6, #31
    9022:	dc00      	bgt.n	9026 <__aeabi_dsub+0x1da>
    9024:	e13a      	b.n	929c <__aeabi_dsub+0x450>
    9026:	0033      	movs	r3, r6
    9028:	4667      	mov	r7, ip
    902a:	3b20      	subs	r3, #32
    902c:	40df      	lsrs	r7, r3
    902e:	003b      	movs	r3, r7
    9030:	2e20      	cmp	r6, #32
    9032:	d005      	beq.n	9040 <__aeabi_dsub+0x1f4>
    9034:	2740      	movs	r7, #64	; 0x40
    9036:	1bbf      	subs	r7, r7, r6
    9038:	4666      	mov	r6, ip
    903a:	40be      	lsls	r6, r7
    903c:	4332      	orrs	r2, r6
    903e:	4690      	mov	r8, r2
    9040:	4646      	mov	r6, r8
    9042:	1e72      	subs	r2, r6, #1
    9044:	4196      	sbcs	r6, r2
    9046:	4333      	orrs	r3, r6
    9048:	e0da      	b.n	9200 <__aeabi_dsub+0x3b4>
    904a:	2b00      	cmp	r3, #0
    904c:	d100      	bne.n	9050 <__aeabi_dsub+0x204>
    904e:	e214      	b.n	947a <__aeabi_dsub+0x62e>
    9050:	4663      	mov	r3, ip
    9052:	4313      	orrs	r3, r2
    9054:	d100      	bne.n	9058 <__aeabi_dsub+0x20c>
    9056:	e168      	b.n	932a <__aeabi_dsub+0x4de>
    9058:	2380      	movs	r3, #128	; 0x80
    905a:	074e      	lsls	r6, r1, #29
    905c:	08c0      	lsrs	r0, r0, #3
    905e:	08c9      	lsrs	r1, r1, #3
    9060:	031b      	lsls	r3, r3, #12
    9062:	4306      	orrs	r6, r0
    9064:	4219      	tst	r1, r3
    9066:	d008      	beq.n	907a <__aeabi_dsub+0x22e>
    9068:	4660      	mov	r0, ip
    906a:	08c0      	lsrs	r0, r0, #3
    906c:	4218      	tst	r0, r3
    906e:	d104      	bne.n	907a <__aeabi_dsub+0x22e>
    9070:	4663      	mov	r3, ip
    9072:	0001      	movs	r1, r0
    9074:	08d2      	lsrs	r2, r2, #3
    9076:	075e      	lsls	r6, r3, #29
    9078:	4316      	orrs	r6, r2
    907a:	00f3      	lsls	r3, r6, #3
    907c:	4699      	mov	r9, r3
    907e:	00c9      	lsls	r1, r1, #3
    9080:	0f72      	lsrs	r2, r6, #29
    9082:	4d44      	ldr	r5, [pc, #272]	; (9194 <__aeabi_dsub+0x348>)
    9084:	4311      	orrs	r1, r2
    9086:	464b      	mov	r3, r9
    9088:	08de      	lsrs	r6, r3, #3
    908a:	4b42      	ldr	r3, [pc, #264]	; (9194 <__aeabi_dsub+0x348>)
    908c:	074f      	lsls	r7, r1, #29
    908e:	4337      	orrs	r7, r6
    9090:	08ca      	lsrs	r2, r1, #3
    9092:	429d      	cmp	r5, r3
    9094:	d100      	bne.n	9098 <__aeabi_dsub+0x24c>
    9096:	e06e      	b.n	9176 <__aeabi_dsub+0x32a>
    9098:	0312      	lsls	r2, r2, #12
    909a:	056d      	lsls	r5, r5, #21
    909c:	0b12      	lsrs	r2, r2, #12
    909e:	0d6d      	lsrs	r5, r5, #21
    90a0:	2100      	movs	r1, #0
    90a2:	0312      	lsls	r2, r2, #12
    90a4:	0b13      	lsrs	r3, r2, #12
    90a6:	0d0a      	lsrs	r2, r1, #20
    90a8:	0512      	lsls	r2, r2, #20
    90aa:	431a      	orrs	r2, r3
    90ac:	4b3b      	ldr	r3, [pc, #236]	; (919c <__aeabi_dsub+0x350>)
    90ae:	052d      	lsls	r5, r5, #20
    90b0:	4013      	ands	r3, r2
    90b2:	432b      	orrs	r3, r5
    90b4:	005b      	lsls	r3, r3, #1
    90b6:	07e4      	lsls	r4, r4, #31
    90b8:	085b      	lsrs	r3, r3, #1
    90ba:	4323      	orrs	r3, r4
    90bc:	0038      	movs	r0, r7
    90be:	0019      	movs	r1, r3
    90c0:	bc3c      	pop	{r2, r3, r4, r5}
    90c2:	4690      	mov	r8, r2
    90c4:	4699      	mov	r9, r3
    90c6:	46a2      	mov	sl, r4
    90c8:	46ab      	mov	fp, r5
    90ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    90cc:	4663      	mov	r3, ip
    90ce:	4313      	orrs	r3, r2
    90d0:	d011      	beq.n	90f6 <__aeabi_dsub+0x2aa>
    90d2:	1e73      	subs	r3, r6, #1
    90d4:	2b00      	cmp	r3, #0
    90d6:	d000      	beq.n	90da <__aeabi_dsub+0x28e>
    90d8:	e107      	b.n	92ea <__aeabi_dsub+0x49e>
    90da:	1886      	adds	r6, r0, r2
    90dc:	4286      	cmp	r6, r0
    90de:	4180      	sbcs	r0, r0
    90e0:	4461      	add	r1, ip
    90e2:	4240      	negs	r0, r0
    90e4:	1809      	adds	r1, r1, r0
    90e6:	2501      	movs	r5, #1
    90e8:	020b      	lsls	r3, r1, #8
    90ea:	d537      	bpl.n	915c <__aeabi_dsub+0x310>
    90ec:	2502      	movs	r5, #2
    90ee:	e77b      	b.n	8fe8 <__aeabi_dsub+0x19c>
    90f0:	003e      	movs	r6, r7
    90f2:	4661      	mov	r1, ip
    90f4:	4691      	mov	r9, r2
    90f6:	0035      	movs	r5, r6
    90f8:	e7c5      	b.n	9086 <__aeabi_dsub+0x23a>
    90fa:	465c      	mov	r4, fp
    90fc:	2d00      	cmp	r5, #0
    90fe:	d000      	beq.n	9102 <__aeabi_dsub+0x2b6>
    9100:	e0e1      	b.n	92c6 <__aeabi_dsub+0x47a>
    9102:	000b      	movs	r3, r1
    9104:	4303      	orrs	r3, r0
    9106:	d0f3      	beq.n	90f0 <__aeabi_dsub+0x2a4>
    9108:	1c73      	adds	r3, r6, #1
    910a:	d100      	bne.n	910e <__aeabi_dsub+0x2c2>
    910c:	e1ac      	b.n	9468 <__aeabi_dsub+0x61c>
    910e:	4b21      	ldr	r3, [pc, #132]	; (9194 <__aeabi_dsub+0x348>)
    9110:	429f      	cmp	r7, r3
    9112:	d100      	bne.n	9116 <__aeabi_dsub+0x2ca>
    9114:	e13a      	b.n	938c <__aeabi_dsub+0x540>
    9116:	43f3      	mvns	r3, r6
    9118:	2b38      	cmp	r3, #56	; 0x38
    911a:	dd00      	ble.n	911e <__aeabi_dsub+0x2d2>
    911c:	e16f      	b.n	93fe <__aeabi_dsub+0x5b2>
    911e:	2b1f      	cmp	r3, #31
    9120:	dd00      	ble.n	9124 <__aeabi_dsub+0x2d8>
    9122:	e18c      	b.n	943e <__aeabi_dsub+0x5f2>
    9124:	2520      	movs	r5, #32
    9126:	000e      	movs	r6, r1
    9128:	1aed      	subs	r5, r5, r3
    912a:	40ae      	lsls	r6, r5
    912c:	46b0      	mov	r8, r6
    912e:	0006      	movs	r6, r0
    9130:	46aa      	mov	sl, r5
    9132:	40de      	lsrs	r6, r3
    9134:	4645      	mov	r5, r8
    9136:	4335      	orrs	r5, r6
    9138:	002e      	movs	r6, r5
    913a:	4655      	mov	r5, sl
    913c:	40d9      	lsrs	r1, r3
    913e:	40a8      	lsls	r0, r5
    9140:	4663      	mov	r3, ip
    9142:	1e45      	subs	r5, r0, #1
    9144:	41a8      	sbcs	r0, r5
    9146:	1a5b      	subs	r3, r3, r1
    9148:	469c      	mov	ip, r3
    914a:	4330      	orrs	r0, r6
    914c:	1a16      	subs	r6, r2, r0
    914e:	42b2      	cmp	r2, r6
    9150:	4192      	sbcs	r2, r2
    9152:	4663      	mov	r3, ip
    9154:	4252      	negs	r2, r2
    9156:	1a99      	subs	r1, r3, r2
    9158:	003d      	movs	r5, r7
    915a:	e6b4      	b.n	8ec6 <__aeabi_dsub+0x7a>
    915c:	2207      	movs	r2, #7
    915e:	4032      	ands	r2, r6
    9160:	2a00      	cmp	r2, #0
    9162:	d000      	beq.n	9166 <__aeabi_dsub+0x31a>
    9164:	e6e4      	b.n	8f30 <__aeabi_dsub+0xe4>
    9166:	4b0b      	ldr	r3, [pc, #44]	; (9194 <__aeabi_dsub+0x348>)
    9168:	08f6      	lsrs	r6, r6, #3
    916a:	074f      	lsls	r7, r1, #29
    916c:	4337      	orrs	r7, r6
    916e:	08ca      	lsrs	r2, r1, #3
    9170:	429d      	cmp	r5, r3
    9172:	d000      	beq.n	9176 <__aeabi_dsub+0x32a>
    9174:	e790      	b.n	9098 <__aeabi_dsub+0x24c>
    9176:	003b      	movs	r3, r7
    9178:	4313      	orrs	r3, r2
    917a:	d100      	bne.n	917e <__aeabi_dsub+0x332>
    917c:	e1a6      	b.n	94cc <__aeabi_dsub+0x680>
    917e:	2380      	movs	r3, #128	; 0x80
    9180:	031b      	lsls	r3, r3, #12
    9182:	431a      	orrs	r2, r3
    9184:	0312      	lsls	r2, r2, #12
    9186:	0b12      	lsrs	r2, r2, #12
    9188:	4d02      	ldr	r5, [pc, #8]	; (9194 <__aeabi_dsub+0x348>)
    918a:	e789      	b.n	90a0 <__aeabi_dsub+0x254>
    918c:	0015      	movs	r5, r2
    918e:	2200      	movs	r2, #0
    9190:	2700      	movs	r7, #0
    9192:	e785      	b.n	90a0 <__aeabi_dsub+0x254>
    9194:	000007ff 	.word	0x000007ff
    9198:	ff7fffff 	.word	0xff7fffff
    919c:	800fffff 	.word	0x800fffff
    91a0:	2e00      	cmp	r6, #0
    91a2:	d000      	beq.n	91a6 <__aeabi_dsub+0x35a>
    91a4:	e0c7      	b.n	9336 <__aeabi_dsub+0x4ea>
    91a6:	1c6b      	adds	r3, r5, #1
    91a8:	055e      	lsls	r6, r3, #21
    91aa:	0d76      	lsrs	r6, r6, #21
    91ac:	2e01      	cmp	r6, #1
    91ae:	dc00      	bgt.n	91b2 <__aeabi_dsub+0x366>
    91b0:	e0f0      	b.n	9394 <__aeabi_dsub+0x548>
    91b2:	4dc8      	ldr	r5, [pc, #800]	; (94d4 <__aeabi_dsub+0x688>)
    91b4:	42ab      	cmp	r3, r5
    91b6:	d100      	bne.n	91ba <__aeabi_dsub+0x36e>
    91b8:	e0b9      	b.n	932e <__aeabi_dsub+0x4e2>
    91ba:	1885      	adds	r5, r0, r2
    91bc:	000a      	movs	r2, r1
    91be:	4285      	cmp	r5, r0
    91c0:	4189      	sbcs	r1, r1
    91c2:	4462      	add	r2, ip
    91c4:	4249      	negs	r1, r1
    91c6:	1851      	adds	r1, r2, r1
    91c8:	2207      	movs	r2, #7
    91ca:	07ce      	lsls	r6, r1, #31
    91cc:	086d      	lsrs	r5, r5, #1
    91ce:	432e      	orrs	r6, r5
    91d0:	0849      	lsrs	r1, r1, #1
    91d2:	4032      	ands	r2, r6
    91d4:	001d      	movs	r5, r3
    91d6:	e6a9      	b.n	8f2c <__aeabi_dsub+0xe0>
    91d8:	49bf      	ldr	r1, [pc, #764]	; (94d8 <__aeabi_dsub+0x68c>)
    91da:	1aed      	subs	r5, r5, r3
    91dc:	4011      	ands	r1, r2
    91de:	2207      	movs	r2, #7
    91e0:	4032      	ands	r2, r6
    91e2:	e6a3      	b.n	8f2c <__aeabi_dsub+0xe0>
    91e4:	0032      	movs	r2, r6
    91e6:	3828      	subs	r0, #40	; 0x28
    91e8:	4082      	lsls	r2, r0
    91ea:	2600      	movs	r6, #0
    91ec:	e686      	b.n	8efc <__aeabi_dsub+0xb0>
    91ee:	0030      	movs	r0, r6
    91f0:	f000 fb08 	bl	9804 <__clzsi2>
    91f4:	3020      	adds	r0, #32
    91f6:	e673      	b.n	8ee0 <__aeabi_dsub+0x94>
    91f8:	4663      	mov	r3, ip
    91fa:	4313      	orrs	r3, r2
    91fc:	1e5a      	subs	r2, r3, #1
    91fe:	4193      	sbcs	r3, r2
    9200:	1ac6      	subs	r6, r0, r3
    9202:	42b0      	cmp	r0, r6
    9204:	4180      	sbcs	r0, r0
    9206:	4240      	negs	r0, r0
    9208:	1a09      	subs	r1, r1, r0
    920a:	e65c      	b.n	8ec6 <__aeabi_dsub+0x7a>
    920c:	000e      	movs	r6, r1
    920e:	4667      	mov	r7, ip
    9210:	4306      	orrs	r6, r0
    9212:	4317      	orrs	r7, r2
    9214:	2d00      	cmp	r5, #0
    9216:	d15e      	bne.n	92d6 <__aeabi_dsub+0x48a>
    9218:	2e00      	cmp	r6, #0
    921a:	d000      	beq.n	921e <__aeabi_dsub+0x3d2>
    921c:	e0f3      	b.n	9406 <__aeabi_dsub+0x5ba>
    921e:	2f00      	cmp	r7, #0
    9220:	d100      	bne.n	9224 <__aeabi_dsub+0x3d8>
    9222:	e11e      	b.n	9462 <__aeabi_dsub+0x616>
    9224:	465c      	mov	r4, fp
    9226:	4661      	mov	r1, ip
    9228:	4691      	mov	r9, r2
    922a:	e72c      	b.n	9086 <__aeabi_dsub+0x23a>
    922c:	4fa9      	ldr	r7, [pc, #676]	; (94d4 <__aeabi_dsub+0x688>)
    922e:	42be      	cmp	r6, r7
    9230:	d07b      	beq.n	932a <__aeabi_dsub+0x4de>
    9232:	001e      	movs	r6, r3
    9234:	e6f1      	b.n	901a <__aeabi_dsub+0x1ce>
    9236:	0010      	movs	r0, r2
    9238:	3d1f      	subs	r5, #31
    923a:	40e8      	lsrs	r0, r5
    923c:	2b20      	cmp	r3, #32
    923e:	d003      	beq.n	9248 <__aeabi_dsub+0x3fc>
    9240:	2140      	movs	r1, #64	; 0x40
    9242:	1acb      	subs	r3, r1, r3
    9244:	409a      	lsls	r2, r3
    9246:	4316      	orrs	r6, r2
    9248:	1e73      	subs	r3, r6, #1
    924a:	419e      	sbcs	r6, r3
    924c:	2207      	movs	r2, #7
    924e:	4306      	orrs	r6, r0
    9250:	4032      	ands	r2, r6
    9252:	2100      	movs	r1, #0
    9254:	2500      	movs	r5, #0
    9256:	e783      	b.n	9160 <__aeabi_dsub+0x314>
    9258:	1a16      	subs	r6, r2, r0
    925a:	4663      	mov	r3, ip
    925c:	42b2      	cmp	r2, r6
    925e:	4180      	sbcs	r0, r0
    9260:	1a59      	subs	r1, r3, r1
    9262:	4240      	negs	r0, r0
    9264:	1a0b      	subs	r3, r1, r0
    9266:	4698      	mov	r8, r3
    9268:	465c      	mov	r4, fp
    926a:	e632      	b.n	8ed2 <__aeabi_dsub+0x86>
    926c:	2e1f      	cmp	r6, #31
    926e:	dd00      	ble.n	9272 <__aeabi_dsub+0x426>
    9270:	e0ab      	b.n	93ca <__aeabi_dsub+0x57e>
    9272:	2720      	movs	r7, #32
    9274:	1bbb      	subs	r3, r7, r6
    9276:	469a      	mov	sl, r3
    9278:	4663      	mov	r3, ip
    927a:	4657      	mov	r7, sl
    927c:	40bb      	lsls	r3, r7
    927e:	4699      	mov	r9, r3
    9280:	0013      	movs	r3, r2
    9282:	464f      	mov	r7, r9
    9284:	40f3      	lsrs	r3, r6
    9286:	431f      	orrs	r7, r3
    9288:	003b      	movs	r3, r7
    928a:	4657      	mov	r7, sl
    928c:	40ba      	lsls	r2, r7
    928e:	1e57      	subs	r7, r2, #1
    9290:	41ba      	sbcs	r2, r7
    9292:	4313      	orrs	r3, r2
    9294:	4662      	mov	r2, ip
    9296:	40f2      	lsrs	r2, r6
    9298:	1889      	adds	r1, r1, r2
    929a:	e698      	b.n	8fce <__aeabi_dsub+0x182>
    929c:	2720      	movs	r7, #32
    929e:	1bbb      	subs	r3, r7, r6
    92a0:	469a      	mov	sl, r3
    92a2:	4663      	mov	r3, ip
    92a4:	4657      	mov	r7, sl
    92a6:	40bb      	lsls	r3, r7
    92a8:	4699      	mov	r9, r3
    92aa:	0013      	movs	r3, r2
    92ac:	464f      	mov	r7, r9
    92ae:	40f3      	lsrs	r3, r6
    92b0:	431f      	orrs	r7, r3
    92b2:	003b      	movs	r3, r7
    92b4:	4657      	mov	r7, sl
    92b6:	40ba      	lsls	r2, r7
    92b8:	1e57      	subs	r7, r2, #1
    92ba:	41ba      	sbcs	r2, r7
    92bc:	4313      	orrs	r3, r2
    92be:	4662      	mov	r2, ip
    92c0:	40f2      	lsrs	r2, r6
    92c2:	1a89      	subs	r1, r1, r2
    92c4:	e79c      	b.n	9200 <__aeabi_dsub+0x3b4>
    92c6:	4b83      	ldr	r3, [pc, #524]	; (94d4 <__aeabi_dsub+0x688>)
    92c8:	429f      	cmp	r7, r3
    92ca:	d05f      	beq.n	938c <__aeabi_dsub+0x540>
    92cc:	2580      	movs	r5, #128	; 0x80
    92ce:	042d      	lsls	r5, r5, #16
    92d0:	4273      	negs	r3, r6
    92d2:	4329      	orrs	r1, r5
    92d4:	e720      	b.n	9118 <__aeabi_dsub+0x2cc>
    92d6:	2e00      	cmp	r6, #0
    92d8:	d10c      	bne.n	92f4 <__aeabi_dsub+0x4a8>
    92da:	2f00      	cmp	r7, #0
    92dc:	d100      	bne.n	92e0 <__aeabi_dsub+0x494>
    92de:	e0d0      	b.n	9482 <__aeabi_dsub+0x636>
    92e0:	465c      	mov	r4, fp
    92e2:	4661      	mov	r1, ip
    92e4:	4691      	mov	r9, r2
    92e6:	4d7b      	ldr	r5, [pc, #492]	; (94d4 <__aeabi_dsub+0x688>)
    92e8:	e6cd      	b.n	9086 <__aeabi_dsub+0x23a>
    92ea:	4f7a      	ldr	r7, [pc, #488]	; (94d4 <__aeabi_dsub+0x688>)
    92ec:	42be      	cmp	r6, r7
    92ee:	d01c      	beq.n	932a <__aeabi_dsub+0x4de>
    92f0:	001e      	movs	r6, r3
    92f2:	e665      	b.n	8fc0 <__aeabi_dsub+0x174>
    92f4:	2f00      	cmp	r7, #0
    92f6:	d018      	beq.n	932a <__aeabi_dsub+0x4de>
    92f8:	08c0      	lsrs	r0, r0, #3
    92fa:	074e      	lsls	r6, r1, #29
    92fc:	4306      	orrs	r6, r0
    92fe:	2080      	movs	r0, #128	; 0x80
    9300:	08c9      	lsrs	r1, r1, #3
    9302:	0300      	lsls	r0, r0, #12
    9304:	4201      	tst	r1, r0
    9306:	d008      	beq.n	931a <__aeabi_dsub+0x4ce>
    9308:	4663      	mov	r3, ip
    930a:	08dc      	lsrs	r4, r3, #3
    930c:	4204      	tst	r4, r0
    930e:	d104      	bne.n	931a <__aeabi_dsub+0x4ce>
    9310:	0021      	movs	r1, r4
    9312:	46da      	mov	sl, fp
    9314:	08d2      	lsrs	r2, r2, #3
    9316:	075e      	lsls	r6, r3, #29
    9318:	4316      	orrs	r6, r2
    931a:	00f3      	lsls	r3, r6, #3
    931c:	4699      	mov	r9, r3
    931e:	2401      	movs	r4, #1
    9320:	4653      	mov	r3, sl
    9322:	00c9      	lsls	r1, r1, #3
    9324:	0f72      	lsrs	r2, r6, #29
    9326:	4311      	orrs	r1, r2
    9328:	401c      	ands	r4, r3
    932a:	4d6a      	ldr	r5, [pc, #424]	; (94d4 <__aeabi_dsub+0x688>)
    932c:	e6ab      	b.n	9086 <__aeabi_dsub+0x23a>
    932e:	001d      	movs	r5, r3
    9330:	2200      	movs	r2, #0
    9332:	2700      	movs	r7, #0
    9334:	e6b4      	b.n	90a0 <__aeabi_dsub+0x254>
    9336:	2d00      	cmp	r5, #0
    9338:	d159      	bne.n	93ee <__aeabi_dsub+0x5a2>
    933a:	000b      	movs	r3, r1
    933c:	4303      	orrs	r3, r0
    933e:	d100      	bne.n	9342 <__aeabi_dsub+0x4f6>
    9340:	e6d6      	b.n	90f0 <__aeabi_dsub+0x2a4>
    9342:	1c73      	adds	r3, r6, #1
    9344:	d100      	bne.n	9348 <__aeabi_dsub+0x4fc>
    9346:	e0b2      	b.n	94ae <__aeabi_dsub+0x662>
    9348:	4b62      	ldr	r3, [pc, #392]	; (94d4 <__aeabi_dsub+0x688>)
    934a:	429f      	cmp	r7, r3
    934c:	d01e      	beq.n	938c <__aeabi_dsub+0x540>
    934e:	43f3      	mvns	r3, r6
    9350:	2b38      	cmp	r3, #56	; 0x38
    9352:	dc6f      	bgt.n	9434 <__aeabi_dsub+0x5e8>
    9354:	2b1f      	cmp	r3, #31
    9356:	dd00      	ble.n	935a <__aeabi_dsub+0x50e>
    9358:	e097      	b.n	948a <__aeabi_dsub+0x63e>
    935a:	2520      	movs	r5, #32
    935c:	000e      	movs	r6, r1
    935e:	1aed      	subs	r5, r5, r3
    9360:	40ae      	lsls	r6, r5
    9362:	46b0      	mov	r8, r6
    9364:	0006      	movs	r6, r0
    9366:	46aa      	mov	sl, r5
    9368:	40de      	lsrs	r6, r3
    936a:	4645      	mov	r5, r8
    936c:	4335      	orrs	r5, r6
    936e:	002e      	movs	r6, r5
    9370:	4655      	mov	r5, sl
    9372:	40a8      	lsls	r0, r5
    9374:	40d9      	lsrs	r1, r3
    9376:	1e45      	subs	r5, r0, #1
    9378:	41a8      	sbcs	r0, r5
    937a:	448c      	add	ip, r1
    937c:	4306      	orrs	r6, r0
    937e:	18b6      	adds	r6, r6, r2
    9380:	4296      	cmp	r6, r2
    9382:	4192      	sbcs	r2, r2
    9384:	4251      	negs	r1, r2
    9386:	4461      	add	r1, ip
    9388:	003d      	movs	r5, r7
    938a:	e625      	b.n	8fd8 <__aeabi_dsub+0x18c>
    938c:	003d      	movs	r5, r7
    938e:	4661      	mov	r1, ip
    9390:	4691      	mov	r9, r2
    9392:	e678      	b.n	9086 <__aeabi_dsub+0x23a>
    9394:	000b      	movs	r3, r1
    9396:	4303      	orrs	r3, r0
    9398:	2d00      	cmp	r5, #0
    939a:	d000      	beq.n	939e <__aeabi_dsub+0x552>
    939c:	e655      	b.n	904a <__aeabi_dsub+0x1fe>
    939e:	2b00      	cmp	r3, #0
    93a0:	d0f5      	beq.n	938e <__aeabi_dsub+0x542>
    93a2:	4663      	mov	r3, ip
    93a4:	4313      	orrs	r3, r2
    93a6:	d100      	bne.n	93aa <__aeabi_dsub+0x55e>
    93a8:	e66d      	b.n	9086 <__aeabi_dsub+0x23a>
    93aa:	1886      	adds	r6, r0, r2
    93ac:	4286      	cmp	r6, r0
    93ae:	4180      	sbcs	r0, r0
    93b0:	4461      	add	r1, ip
    93b2:	4240      	negs	r0, r0
    93b4:	1809      	adds	r1, r1, r0
    93b6:	2200      	movs	r2, #0
    93b8:	020b      	lsls	r3, r1, #8
    93ba:	d400      	bmi.n	93be <__aeabi_dsub+0x572>
    93bc:	e6d0      	b.n	9160 <__aeabi_dsub+0x314>
    93be:	4b46      	ldr	r3, [pc, #280]	; (94d8 <__aeabi_dsub+0x68c>)
    93c0:	3501      	adds	r5, #1
    93c2:	4019      	ands	r1, r3
    93c4:	e5b2      	b.n	8f2c <__aeabi_dsub+0xe0>
    93c6:	46b1      	mov	r9, r6
    93c8:	e65d      	b.n	9086 <__aeabi_dsub+0x23a>
    93ca:	0033      	movs	r3, r6
    93cc:	4667      	mov	r7, ip
    93ce:	3b20      	subs	r3, #32
    93d0:	40df      	lsrs	r7, r3
    93d2:	003b      	movs	r3, r7
    93d4:	2e20      	cmp	r6, #32
    93d6:	d005      	beq.n	93e4 <__aeabi_dsub+0x598>
    93d8:	2740      	movs	r7, #64	; 0x40
    93da:	1bbf      	subs	r7, r7, r6
    93dc:	4666      	mov	r6, ip
    93de:	40be      	lsls	r6, r7
    93e0:	4332      	orrs	r2, r6
    93e2:	4690      	mov	r8, r2
    93e4:	4646      	mov	r6, r8
    93e6:	1e72      	subs	r2, r6, #1
    93e8:	4196      	sbcs	r6, r2
    93ea:	4333      	orrs	r3, r6
    93ec:	e5ef      	b.n	8fce <__aeabi_dsub+0x182>
    93ee:	4b39      	ldr	r3, [pc, #228]	; (94d4 <__aeabi_dsub+0x688>)
    93f0:	429f      	cmp	r7, r3
    93f2:	d0cb      	beq.n	938c <__aeabi_dsub+0x540>
    93f4:	2580      	movs	r5, #128	; 0x80
    93f6:	042d      	lsls	r5, r5, #16
    93f8:	4273      	negs	r3, r6
    93fa:	4329      	orrs	r1, r5
    93fc:	e7a8      	b.n	9350 <__aeabi_dsub+0x504>
    93fe:	4308      	orrs	r0, r1
    9400:	1e41      	subs	r1, r0, #1
    9402:	4188      	sbcs	r0, r1
    9404:	e6a2      	b.n	914c <__aeabi_dsub+0x300>
    9406:	2f00      	cmp	r7, #0
    9408:	d100      	bne.n	940c <__aeabi_dsub+0x5c0>
    940a:	e63c      	b.n	9086 <__aeabi_dsub+0x23a>
    940c:	4663      	mov	r3, ip
    940e:	1a86      	subs	r6, r0, r2
    9410:	1acf      	subs	r7, r1, r3
    9412:	42b0      	cmp	r0, r6
    9414:	419b      	sbcs	r3, r3
    9416:	425b      	negs	r3, r3
    9418:	1afb      	subs	r3, r7, r3
    941a:	4698      	mov	r8, r3
    941c:	021b      	lsls	r3, r3, #8
    941e:	d54e      	bpl.n	94be <__aeabi_dsub+0x672>
    9420:	1a16      	subs	r6, r2, r0
    9422:	4663      	mov	r3, ip
    9424:	42b2      	cmp	r2, r6
    9426:	4192      	sbcs	r2, r2
    9428:	1a59      	subs	r1, r3, r1
    942a:	4252      	negs	r2, r2
    942c:	1a89      	subs	r1, r1, r2
    942e:	465c      	mov	r4, fp
    9430:	2200      	movs	r2, #0
    9432:	e57b      	b.n	8f2c <__aeabi_dsub+0xe0>
    9434:	4301      	orrs	r1, r0
    9436:	000e      	movs	r6, r1
    9438:	1e71      	subs	r1, r6, #1
    943a:	418e      	sbcs	r6, r1
    943c:	e79f      	b.n	937e <__aeabi_dsub+0x532>
    943e:	001d      	movs	r5, r3
    9440:	000e      	movs	r6, r1
    9442:	3d20      	subs	r5, #32
    9444:	40ee      	lsrs	r6, r5
    9446:	46b0      	mov	r8, r6
    9448:	2b20      	cmp	r3, #32
    944a:	d004      	beq.n	9456 <__aeabi_dsub+0x60a>
    944c:	2540      	movs	r5, #64	; 0x40
    944e:	1aeb      	subs	r3, r5, r3
    9450:	4099      	lsls	r1, r3
    9452:	4308      	orrs	r0, r1
    9454:	4681      	mov	r9, r0
    9456:	4648      	mov	r0, r9
    9458:	4643      	mov	r3, r8
    945a:	1e41      	subs	r1, r0, #1
    945c:	4188      	sbcs	r0, r1
    945e:	4318      	orrs	r0, r3
    9460:	e674      	b.n	914c <__aeabi_dsub+0x300>
    9462:	2200      	movs	r2, #0
    9464:	2400      	movs	r4, #0
    9466:	e617      	b.n	9098 <__aeabi_dsub+0x24c>
    9468:	1a16      	subs	r6, r2, r0
    946a:	4663      	mov	r3, ip
    946c:	42b2      	cmp	r2, r6
    946e:	4192      	sbcs	r2, r2
    9470:	1a59      	subs	r1, r3, r1
    9472:	4252      	negs	r2, r2
    9474:	1a89      	subs	r1, r1, r2
    9476:	003d      	movs	r5, r7
    9478:	e525      	b.n	8ec6 <__aeabi_dsub+0x7a>
    947a:	4661      	mov	r1, ip
    947c:	4691      	mov	r9, r2
    947e:	4d15      	ldr	r5, [pc, #84]	; (94d4 <__aeabi_dsub+0x688>)
    9480:	e601      	b.n	9086 <__aeabi_dsub+0x23a>
    9482:	2280      	movs	r2, #128	; 0x80
    9484:	2400      	movs	r4, #0
    9486:	0312      	lsls	r2, r2, #12
    9488:	e679      	b.n	917e <__aeabi_dsub+0x332>
    948a:	001d      	movs	r5, r3
    948c:	000e      	movs	r6, r1
    948e:	3d20      	subs	r5, #32
    9490:	40ee      	lsrs	r6, r5
    9492:	46b0      	mov	r8, r6
    9494:	2b20      	cmp	r3, #32
    9496:	d004      	beq.n	94a2 <__aeabi_dsub+0x656>
    9498:	2540      	movs	r5, #64	; 0x40
    949a:	1aeb      	subs	r3, r5, r3
    949c:	4099      	lsls	r1, r3
    949e:	4308      	orrs	r0, r1
    94a0:	4681      	mov	r9, r0
    94a2:	464e      	mov	r6, r9
    94a4:	4643      	mov	r3, r8
    94a6:	1e71      	subs	r1, r6, #1
    94a8:	418e      	sbcs	r6, r1
    94aa:	431e      	orrs	r6, r3
    94ac:	e767      	b.n	937e <__aeabi_dsub+0x532>
    94ae:	1886      	adds	r6, r0, r2
    94b0:	4296      	cmp	r6, r2
    94b2:	419b      	sbcs	r3, r3
    94b4:	4461      	add	r1, ip
    94b6:	425b      	negs	r3, r3
    94b8:	18c9      	adds	r1, r1, r3
    94ba:	003d      	movs	r5, r7
    94bc:	e58c      	b.n	8fd8 <__aeabi_dsub+0x18c>
    94be:	4647      	mov	r7, r8
    94c0:	4337      	orrs	r7, r6
    94c2:	d0ce      	beq.n	9462 <__aeabi_dsub+0x616>
    94c4:	2207      	movs	r2, #7
    94c6:	4641      	mov	r1, r8
    94c8:	4032      	ands	r2, r6
    94ca:	e649      	b.n	9160 <__aeabi_dsub+0x314>
    94cc:	2700      	movs	r7, #0
    94ce:	003a      	movs	r2, r7
    94d0:	e5e6      	b.n	90a0 <__aeabi_dsub+0x254>
    94d2:	46c0      	nop			; (mov r8, r8)
    94d4:	000007ff 	.word	0x000007ff
    94d8:	ff7fffff 	.word	0xff7fffff

000094dc <__aeabi_dcmpun>:
__aeabi_dcmpun():
    94dc:	b570      	push	{r4, r5, r6, lr}
    94de:	4e0c      	ldr	r6, [pc, #48]	; (9510 <__aeabi_dcmpun+0x34>)
    94e0:	030d      	lsls	r5, r1, #12
    94e2:	031c      	lsls	r4, r3, #12
    94e4:	0049      	lsls	r1, r1, #1
    94e6:	005b      	lsls	r3, r3, #1
    94e8:	0b2d      	lsrs	r5, r5, #12
    94ea:	0d49      	lsrs	r1, r1, #21
    94ec:	0b24      	lsrs	r4, r4, #12
    94ee:	0d5b      	lsrs	r3, r3, #21
    94f0:	42b1      	cmp	r1, r6
    94f2:	d008      	beq.n	9506 <__aeabi_dcmpun+0x2a>
    94f4:	4906      	ldr	r1, [pc, #24]	; (9510 <__aeabi_dcmpun+0x34>)
    94f6:	2000      	movs	r0, #0
    94f8:	428b      	cmp	r3, r1
    94fa:	d103      	bne.n	9504 <__aeabi_dcmpun+0x28>
    94fc:	4314      	orrs	r4, r2
    94fe:	0020      	movs	r0, r4
    9500:	1e44      	subs	r4, r0, #1
    9502:	41a0      	sbcs	r0, r4
    9504:	bd70      	pop	{r4, r5, r6, pc}
    9506:	4305      	orrs	r5, r0
    9508:	2001      	movs	r0, #1
    950a:	2d00      	cmp	r5, #0
    950c:	d1fa      	bne.n	9504 <__aeabi_dcmpun+0x28>
    950e:	e7f1      	b.n	94f4 <__aeabi_dcmpun+0x18>
    9510:	000007ff 	.word	0x000007ff

00009514 <__aeabi_d2iz>:
__aeabi_d2iz():
    9514:	b530      	push	{r4, r5, lr}
    9516:	4d14      	ldr	r5, [pc, #80]	; (9568 <__aeabi_d2iz+0x54>)
    9518:	030a      	lsls	r2, r1, #12
    951a:	004b      	lsls	r3, r1, #1
    951c:	0b12      	lsrs	r2, r2, #12
    951e:	0d5b      	lsrs	r3, r3, #21
    9520:	0fc9      	lsrs	r1, r1, #31
    9522:	2400      	movs	r4, #0
    9524:	42ab      	cmp	r3, r5
    9526:	dd11      	ble.n	954c <__aeabi_d2iz+0x38>
    9528:	4c10      	ldr	r4, [pc, #64]	; (956c <__aeabi_d2iz+0x58>)
    952a:	42a3      	cmp	r3, r4
    952c:	dc10      	bgt.n	9550 <__aeabi_d2iz+0x3c>
    952e:	2480      	movs	r4, #128	; 0x80
    9530:	0364      	lsls	r4, r4, #13
    9532:	4322      	orrs	r2, r4
    9534:	4c0e      	ldr	r4, [pc, #56]	; (9570 <__aeabi_d2iz+0x5c>)
    9536:	1ae4      	subs	r4, r4, r3
    9538:	2c1f      	cmp	r4, #31
    953a:	dd0c      	ble.n	9556 <__aeabi_d2iz+0x42>
    953c:	480d      	ldr	r0, [pc, #52]	; (9574 <__aeabi_d2iz+0x60>)
    953e:	1ac3      	subs	r3, r0, r3
    9540:	40da      	lsrs	r2, r3
    9542:	0013      	movs	r3, r2
    9544:	425c      	negs	r4, r3
    9546:	2900      	cmp	r1, #0
    9548:	d100      	bne.n	954c <__aeabi_d2iz+0x38>
    954a:	001c      	movs	r4, r3
    954c:	0020      	movs	r0, r4
    954e:	bd30      	pop	{r4, r5, pc}
    9550:	4b09      	ldr	r3, [pc, #36]	; (9578 <__aeabi_d2iz+0x64>)
    9552:	18cc      	adds	r4, r1, r3
    9554:	e7fa      	b.n	954c <__aeabi_d2iz+0x38>
    9556:	4d09      	ldr	r5, [pc, #36]	; (957c <__aeabi_d2iz+0x68>)
    9558:	40e0      	lsrs	r0, r4
    955a:	46ac      	mov	ip, r5
    955c:	4463      	add	r3, ip
    955e:	409a      	lsls	r2, r3
    9560:	0013      	movs	r3, r2
    9562:	4303      	orrs	r3, r0
    9564:	e7ee      	b.n	9544 <__aeabi_d2iz+0x30>
    9566:	46c0      	nop			; (mov r8, r8)
    9568:	000003fe 	.word	0x000003fe
    956c:	0000041d 	.word	0x0000041d
    9570:	00000433 	.word	0x00000433
    9574:	00000413 	.word	0x00000413
    9578:	7fffffff 	.word	0x7fffffff
    957c:	fffffbed 	.word	0xfffffbed

00009580 <__aeabi_i2d>:
__aeabi_i2d():
    9580:	b570      	push	{r4, r5, r6, lr}
    9582:	2800      	cmp	r0, #0
    9584:	d02d      	beq.n	95e2 <__aeabi_i2d+0x62>
    9586:	17c3      	asrs	r3, r0, #31
    9588:	18c5      	adds	r5, r0, r3
    958a:	405d      	eors	r5, r3
    958c:	0fc4      	lsrs	r4, r0, #31
    958e:	0028      	movs	r0, r5
    9590:	f000 f938 	bl	9804 <__clzsi2>
    9594:	4b15      	ldr	r3, [pc, #84]	; (95ec <__aeabi_i2d+0x6c>)
    9596:	1a1b      	subs	r3, r3, r0
    9598:	055b      	lsls	r3, r3, #21
    959a:	0d5b      	lsrs	r3, r3, #21
    959c:	280a      	cmp	r0, #10
    959e:	dd15      	ble.n	95cc <__aeabi_i2d+0x4c>
    95a0:	380b      	subs	r0, #11
    95a2:	4085      	lsls	r5, r0
    95a4:	2200      	movs	r2, #0
    95a6:	032d      	lsls	r5, r5, #12
    95a8:	0b2d      	lsrs	r5, r5, #12
    95aa:	2100      	movs	r1, #0
    95ac:	0010      	movs	r0, r2
    95ae:	032d      	lsls	r5, r5, #12
    95b0:	0d0a      	lsrs	r2, r1, #20
    95b2:	0b2d      	lsrs	r5, r5, #12
    95b4:	0512      	lsls	r2, r2, #20
    95b6:	432a      	orrs	r2, r5
    95b8:	4d0d      	ldr	r5, [pc, #52]	; (95f0 <__aeabi_i2d+0x70>)
    95ba:	051b      	lsls	r3, r3, #20
    95bc:	402a      	ands	r2, r5
    95be:	4313      	orrs	r3, r2
    95c0:	005b      	lsls	r3, r3, #1
    95c2:	07e4      	lsls	r4, r4, #31
    95c4:	085b      	lsrs	r3, r3, #1
    95c6:	4323      	orrs	r3, r4
    95c8:	0019      	movs	r1, r3
    95ca:	bd70      	pop	{r4, r5, r6, pc}
    95cc:	0002      	movs	r2, r0
    95ce:	0029      	movs	r1, r5
    95d0:	3215      	adds	r2, #21
    95d2:	4091      	lsls	r1, r2
    95d4:	000a      	movs	r2, r1
    95d6:	210b      	movs	r1, #11
    95d8:	1a08      	subs	r0, r1, r0
    95da:	40c5      	lsrs	r5, r0
    95dc:	032d      	lsls	r5, r5, #12
    95de:	0b2d      	lsrs	r5, r5, #12
    95e0:	e7e3      	b.n	95aa <__aeabi_i2d+0x2a>
    95e2:	2400      	movs	r4, #0
    95e4:	2300      	movs	r3, #0
    95e6:	2500      	movs	r5, #0
    95e8:	2200      	movs	r2, #0
    95ea:	e7de      	b.n	95aa <__aeabi_i2d+0x2a>
    95ec:	0000041e 	.word	0x0000041e
    95f0:	800fffff 	.word	0x800fffff

000095f4 <__aeabi_ui2d>:
__aeabi_ui2d():
    95f4:	b510      	push	{r4, lr}
    95f6:	1e04      	subs	r4, r0, #0
    95f8:	d025      	beq.n	9646 <__aeabi_ui2d+0x52>
    95fa:	f000 f903 	bl	9804 <__clzsi2>
    95fe:	4b14      	ldr	r3, [pc, #80]	; (9650 <__aeabi_ui2d+0x5c>)
    9600:	1a1b      	subs	r3, r3, r0
    9602:	055b      	lsls	r3, r3, #21
    9604:	0d5b      	lsrs	r3, r3, #21
    9606:	280a      	cmp	r0, #10
    9608:	dd12      	ble.n	9630 <__aeabi_ui2d+0x3c>
    960a:	380b      	subs	r0, #11
    960c:	4084      	lsls	r4, r0
    960e:	2200      	movs	r2, #0
    9610:	0324      	lsls	r4, r4, #12
    9612:	0b24      	lsrs	r4, r4, #12
    9614:	2100      	movs	r1, #0
    9616:	0010      	movs	r0, r2
    9618:	0324      	lsls	r4, r4, #12
    961a:	0d0a      	lsrs	r2, r1, #20
    961c:	0b24      	lsrs	r4, r4, #12
    961e:	0512      	lsls	r2, r2, #20
    9620:	4322      	orrs	r2, r4
    9622:	4c0c      	ldr	r4, [pc, #48]	; (9654 <__aeabi_ui2d+0x60>)
    9624:	051b      	lsls	r3, r3, #20
    9626:	4022      	ands	r2, r4
    9628:	4313      	orrs	r3, r2
    962a:	005b      	lsls	r3, r3, #1
    962c:	0859      	lsrs	r1, r3, #1
    962e:	bd10      	pop	{r4, pc}
    9630:	0002      	movs	r2, r0
    9632:	0021      	movs	r1, r4
    9634:	3215      	adds	r2, #21
    9636:	4091      	lsls	r1, r2
    9638:	000a      	movs	r2, r1
    963a:	210b      	movs	r1, #11
    963c:	1a08      	subs	r0, r1, r0
    963e:	40c4      	lsrs	r4, r0
    9640:	0324      	lsls	r4, r4, #12
    9642:	0b24      	lsrs	r4, r4, #12
    9644:	e7e6      	b.n	9614 <__aeabi_ui2d+0x20>
    9646:	2300      	movs	r3, #0
    9648:	2400      	movs	r4, #0
    964a:	2200      	movs	r2, #0
    964c:	e7e2      	b.n	9614 <__aeabi_ui2d+0x20>
    964e:	46c0      	nop			; (mov r8, r8)
    9650:	0000041e 	.word	0x0000041e
    9654:	800fffff 	.word	0x800fffff

00009658 <__aeabi_f2d>:
__aeabi_f2d():
    9658:	0041      	lsls	r1, r0, #1
    965a:	0e09      	lsrs	r1, r1, #24
    965c:	1c4b      	adds	r3, r1, #1
    965e:	b570      	push	{r4, r5, r6, lr}
    9660:	b2db      	uxtb	r3, r3
    9662:	0246      	lsls	r6, r0, #9
    9664:	0a75      	lsrs	r5, r6, #9
    9666:	0fc4      	lsrs	r4, r0, #31
    9668:	2b01      	cmp	r3, #1
    966a:	dd14      	ble.n	9696 <__aeabi_f2d+0x3e>
    966c:	23e0      	movs	r3, #224	; 0xe0
    966e:	009b      	lsls	r3, r3, #2
    9670:	076d      	lsls	r5, r5, #29
    9672:	0b36      	lsrs	r6, r6, #12
    9674:	18cb      	adds	r3, r1, r3
    9676:	2100      	movs	r1, #0
    9678:	0d0a      	lsrs	r2, r1, #20
    967a:	0028      	movs	r0, r5
    967c:	0512      	lsls	r2, r2, #20
    967e:	4d1c      	ldr	r5, [pc, #112]	; (96f0 <__aeabi_f2d+0x98>)
    9680:	4332      	orrs	r2, r6
    9682:	055b      	lsls	r3, r3, #21
    9684:	402a      	ands	r2, r5
    9686:	085b      	lsrs	r3, r3, #1
    9688:	4313      	orrs	r3, r2
    968a:	005b      	lsls	r3, r3, #1
    968c:	07e4      	lsls	r4, r4, #31
    968e:	085b      	lsrs	r3, r3, #1
    9690:	4323      	orrs	r3, r4
    9692:	0019      	movs	r1, r3
    9694:	bd70      	pop	{r4, r5, r6, pc}
    9696:	2900      	cmp	r1, #0
    9698:	d114      	bne.n	96c4 <__aeabi_f2d+0x6c>
    969a:	2d00      	cmp	r5, #0
    969c:	d01e      	beq.n	96dc <__aeabi_f2d+0x84>
    969e:	0028      	movs	r0, r5
    96a0:	f000 f8b0 	bl	9804 <__clzsi2>
    96a4:	280a      	cmp	r0, #10
    96a6:	dc1c      	bgt.n	96e2 <__aeabi_f2d+0x8a>
    96a8:	230b      	movs	r3, #11
    96aa:	002a      	movs	r2, r5
    96ac:	1a1b      	subs	r3, r3, r0
    96ae:	40da      	lsrs	r2, r3
    96b0:	0003      	movs	r3, r0
    96b2:	3315      	adds	r3, #21
    96b4:	409d      	lsls	r5, r3
    96b6:	4b0f      	ldr	r3, [pc, #60]	; (96f4 <__aeabi_f2d+0x9c>)
    96b8:	0312      	lsls	r2, r2, #12
    96ba:	1a1b      	subs	r3, r3, r0
    96bc:	055b      	lsls	r3, r3, #21
    96be:	0b16      	lsrs	r6, r2, #12
    96c0:	0d5b      	lsrs	r3, r3, #21
    96c2:	e7d8      	b.n	9676 <__aeabi_f2d+0x1e>
    96c4:	2d00      	cmp	r5, #0
    96c6:	d006      	beq.n	96d6 <__aeabi_f2d+0x7e>
    96c8:	0b32      	lsrs	r2, r6, #12
    96ca:	2680      	movs	r6, #128	; 0x80
    96cc:	0336      	lsls	r6, r6, #12
    96ce:	076d      	lsls	r5, r5, #29
    96d0:	4316      	orrs	r6, r2
    96d2:	4b09      	ldr	r3, [pc, #36]	; (96f8 <__aeabi_f2d+0xa0>)
    96d4:	e7cf      	b.n	9676 <__aeabi_f2d+0x1e>
    96d6:	4b08      	ldr	r3, [pc, #32]	; (96f8 <__aeabi_f2d+0xa0>)
    96d8:	2600      	movs	r6, #0
    96da:	e7cc      	b.n	9676 <__aeabi_f2d+0x1e>
    96dc:	2300      	movs	r3, #0
    96de:	2600      	movs	r6, #0
    96e0:	e7c9      	b.n	9676 <__aeabi_f2d+0x1e>
    96e2:	0003      	movs	r3, r0
    96e4:	002a      	movs	r2, r5
    96e6:	3b0b      	subs	r3, #11
    96e8:	409a      	lsls	r2, r3
    96ea:	2500      	movs	r5, #0
    96ec:	e7e3      	b.n	96b6 <__aeabi_f2d+0x5e>
    96ee:	46c0      	nop			; (mov r8, r8)
    96f0:	800fffff 	.word	0x800fffff
    96f4:	00000389 	.word	0x00000389
    96f8:	000007ff 	.word	0x000007ff

000096fc <__aeabi_d2f>:
__aeabi_d2f():
    96fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    96fe:	004c      	lsls	r4, r1, #1
    9700:	0d64      	lsrs	r4, r4, #21
    9702:	030b      	lsls	r3, r1, #12
    9704:	1c62      	adds	r2, r4, #1
    9706:	0a5b      	lsrs	r3, r3, #9
    9708:	0f46      	lsrs	r6, r0, #29
    970a:	0552      	lsls	r2, r2, #21
    970c:	0fc9      	lsrs	r1, r1, #31
    970e:	431e      	orrs	r6, r3
    9710:	00c5      	lsls	r5, r0, #3
    9712:	0d52      	lsrs	r2, r2, #21
    9714:	2a01      	cmp	r2, #1
    9716:	dd29      	ble.n	976c <__aeabi_d2f+0x70>
    9718:	4b37      	ldr	r3, [pc, #220]	; (97f8 <__aeabi_d2f+0xfc>)
    971a:	18e7      	adds	r7, r4, r3
    971c:	2ffe      	cmp	r7, #254	; 0xfe
    971e:	dc1c      	bgt.n	975a <__aeabi_d2f+0x5e>
    9720:	2f00      	cmp	r7, #0
    9722:	dd3b      	ble.n	979c <__aeabi_d2f+0xa0>
    9724:	0180      	lsls	r0, r0, #6
    9726:	1e43      	subs	r3, r0, #1
    9728:	4198      	sbcs	r0, r3
    972a:	2207      	movs	r2, #7
    972c:	00f3      	lsls	r3, r6, #3
    972e:	0f6d      	lsrs	r5, r5, #29
    9730:	4303      	orrs	r3, r0
    9732:	432b      	orrs	r3, r5
    9734:	401a      	ands	r2, r3
    9736:	2a00      	cmp	r2, #0
    9738:	d004      	beq.n	9744 <__aeabi_d2f+0x48>
    973a:	220f      	movs	r2, #15
    973c:	401a      	ands	r2, r3
    973e:	2a04      	cmp	r2, #4
    9740:	d000      	beq.n	9744 <__aeabi_d2f+0x48>
    9742:	3304      	adds	r3, #4
    9744:	2280      	movs	r2, #128	; 0x80
    9746:	04d2      	lsls	r2, r2, #19
    9748:	401a      	ands	r2, r3
    974a:	d024      	beq.n	9796 <__aeabi_d2f+0x9a>
    974c:	3701      	adds	r7, #1
    974e:	b2fa      	uxtb	r2, r7
    9750:	2fff      	cmp	r7, #255	; 0xff
    9752:	d002      	beq.n	975a <__aeabi_d2f+0x5e>
    9754:	019b      	lsls	r3, r3, #6
    9756:	0a58      	lsrs	r0, r3, #9
    9758:	e001      	b.n	975e <__aeabi_d2f+0x62>
    975a:	22ff      	movs	r2, #255	; 0xff
    975c:	2000      	movs	r0, #0
    975e:	0240      	lsls	r0, r0, #9
    9760:	05d2      	lsls	r2, r2, #23
    9762:	0a40      	lsrs	r0, r0, #9
    9764:	07c9      	lsls	r1, r1, #31
    9766:	4310      	orrs	r0, r2
    9768:	4308      	orrs	r0, r1
    976a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    976c:	4335      	orrs	r5, r6
    976e:	2c00      	cmp	r4, #0
    9770:	d104      	bne.n	977c <__aeabi_d2f+0x80>
    9772:	2d00      	cmp	r5, #0
    9774:	d10a      	bne.n	978c <__aeabi_d2f+0x90>
    9776:	2200      	movs	r2, #0
    9778:	2000      	movs	r0, #0
    977a:	e7f0      	b.n	975e <__aeabi_d2f+0x62>
    977c:	2d00      	cmp	r5, #0
    977e:	d0ec      	beq.n	975a <__aeabi_d2f+0x5e>
    9780:	2080      	movs	r0, #128	; 0x80
    9782:	03c0      	lsls	r0, r0, #15
    9784:	4330      	orrs	r0, r6
    9786:	22ff      	movs	r2, #255	; 0xff
    9788:	e7e9      	b.n	975e <__aeabi_d2f+0x62>
    978a:	2400      	movs	r4, #0
    978c:	2300      	movs	r3, #0
    978e:	025b      	lsls	r3, r3, #9
    9790:	0a58      	lsrs	r0, r3, #9
    9792:	b2e2      	uxtb	r2, r4
    9794:	e7e3      	b.n	975e <__aeabi_d2f+0x62>
    9796:	08db      	lsrs	r3, r3, #3
    9798:	003c      	movs	r4, r7
    979a:	e7f8      	b.n	978e <__aeabi_d2f+0x92>
    979c:	003b      	movs	r3, r7
    979e:	3317      	adds	r3, #23
    97a0:	dbf3      	blt.n	978a <__aeabi_d2f+0x8e>
    97a2:	2380      	movs	r3, #128	; 0x80
    97a4:	041b      	lsls	r3, r3, #16
    97a6:	4333      	orrs	r3, r6
    97a8:	261e      	movs	r6, #30
    97aa:	1bf6      	subs	r6, r6, r7
    97ac:	2e1f      	cmp	r6, #31
    97ae:	dd14      	ble.n	97da <__aeabi_d2f+0xde>
    97b0:	2202      	movs	r2, #2
    97b2:	4252      	negs	r2, r2
    97b4:	1bd7      	subs	r7, r2, r7
    97b6:	001a      	movs	r2, r3
    97b8:	40fa      	lsrs	r2, r7
    97ba:	0017      	movs	r7, r2
    97bc:	2e20      	cmp	r6, #32
    97be:	d004      	beq.n	97ca <__aeabi_d2f+0xce>
    97c0:	4a0e      	ldr	r2, [pc, #56]	; (97fc <__aeabi_d2f+0x100>)
    97c2:	4694      	mov	ip, r2
    97c4:	4464      	add	r4, ip
    97c6:	40a3      	lsls	r3, r4
    97c8:	431d      	orrs	r5, r3
    97ca:	002b      	movs	r3, r5
    97cc:	1e5d      	subs	r5, r3, #1
    97ce:	41ab      	sbcs	r3, r5
    97d0:	2207      	movs	r2, #7
    97d2:	433b      	orrs	r3, r7
    97d4:	401a      	ands	r2, r3
    97d6:	2700      	movs	r7, #0
    97d8:	e7ad      	b.n	9736 <__aeabi_d2f+0x3a>
    97da:	4a09      	ldr	r2, [pc, #36]	; (9800 <__aeabi_d2f+0x104>)
    97dc:	0028      	movs	r0, r5
    97de:	18a2      	adds	r2, r4, r2
    97e0:	4095      	lsls	r5, r2
    97e2:	4093      	lsls	r3, r2
    97e4:	1e6c      	subs	r4, r5, #1
    97e6:	41a5      	sbcs	r5, r4
    97e8:	40f0      	lsrs	r0, r6
    97ea:	2207      	movs	r2, #7
    97ec:	432b      	orrs	r3, r5
    97ee:	4303      	orrs	r3, r0
    97f0:	401a      	ands	r2, r3
    97f2:	2700      	movs	r7, #0
    97f4:	e79f      	b.n	9736 <__aeabi_d2f+0x3a>
    97f6:	46c0      	nop			; (mov r8, r8)
    97f8:	fffffc80 	.word	0xfffffc80
    97fc:	fffffca2 	.word	0xfffffca2
    9800:	fffffc82 	.word	0xfffffc82

00009804 <__clzsi2>:
__clzsi2():
    9804:	211c      	movs	r1, #28
    9806:	2301      	movs	r3, #1
    9808:	041b      	lsls	r3, r3, #16
    980a:	4298      	cmp	r0, r3
    980c:	d301      	bcc.n	9812 <__clzsi2+0xe>
    980e:	0c00      	lsrs	r0, r0, #16
    9810:	3910      	subs	r1, #16
    9812:	0a1b      	lsrs	r3, r3, #8
    9814:	4298      	cmp	r0, r3
    9816:	d301      	bcc.n	981c <__clzsi2+0x18>
    9818:	0a00      	lsrs	r0, r0, #8
    981a:	3908      	subs	r1, #8
    981c:	091b      	lsrs	r3, r3, #4
    981e:	4298      	cmp	r0, r3
    9820:	d301      	bcc.n	9826 <__clzsi2+0x22>
    9822:	0900      	lsrs	r0, r0, #4
    9824:	3904      	subs	r1, #4
    9826:	a202      	add	r2, pc, #8	; (adr r2, 9830 <__clzsi2+0x2c>)
    9828:	5c10      	ldrb	r0, [r2, r0]
    982a:	1840      	adds	r0, r0, r1
    982c:	4770      	bx	lr
    982e:	46c0      	nop			; (mov r8, r8)
    9830:	02020304 	.word	0x02020304
    9834:	01010101 	.word	0x01010101
	...

00009840 <__clzdi2>:
__clzdi2():
    9840:	b510      	push	{r4, lr}
    9842:	2900      	cmp	r1, #0
    9844:	d103      	bne.n	984e <__clzdi2+0xe>
    9846:	f7ff ffdd 	bl	9804 <__clzsi2>
    984a:	3020      	adds	r0, #32
    984c:	e002      	b.n	9854 <__clzdi2+0x14>
    984e:	1c08      	adds	r0, r1, #0
    9850:	f7ff ffd8 	bl	9804 <__clzsi2>
    9854:	bd10      	pop	{r4, pc}
    9856:	46c0      	nop			; (mov r8, r8)

00009858 <strlen>:
strlen():
    9858:	2300      	movs	r3, #0
    985a:	5cc2      	ldrb	r2, [r0, r3]
    985c:	3301      	adds	r3, #1
    985e:	2a00      	cmp	r2, #0
    9860:	d1fb      	bne.n	985a <strlen+0x2>
    9862:	1e58      	subs	r0, r3, #1
    9864:	4770      	bx	lr
	...

00009868 <adc_read_inner>:
adc_read_inner():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:117
//============================================================================
uint16_t adc_read_inner(uint8_t channel)
{
    uint16_t ADCResult = 0;
    //设置SC1A寄存器通道号
    ADC0_SC1A = ADC_SC1_ADCH(channel);        
    9868:	231f      	movs	r3, #31
    986a:	4018      	ands	r0, r3
    986c:	4b06      	ldr	r3, [pc, #24]	; (9888 <adc_read_inner+0x20>)
    986e:	6018      	str	r0, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:119 (discriminator 1)
    //等待转换完成
    while(!(ADC0_SC1A & ADC_SC1_COCO_MASK));
    9870:	4b05      	ldr	r3, [pc, #20]	; (9888 <adc_read_inner+0x20>)
    9872:	681b      	ldr	r3, [r3, #0]
    9874:	061b      	lsls	r3, r3, #24
    9876:	d5fb      	bpl.n	9870 <adc_read_inner+0x8>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:121
    //读取转换结果
    ADCResult = (uint16_t)ADC0_RA;
    9878:	4b03      	ldr	r3, [pc, #12]	; (9888 <adc_read_inner+0x20>)
    987a:	6918      	ldr	r0, [r3, #16]
    987c:	b280      	uxth	r0, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:123
    //清ADC转换完成标志
    ADC0_SC1A &= ~ADC_SC1_COCO_MASK;
    987e:	681a      	ldr	r2, [r3, #0]
    9880:	2180      	movs	r1, #128	; 0x80
    9882:	438a      	bics	r2, r1
    9884:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:126
    //返回读取结果
    return ADCResult;
}
    9886:	4770      	bx	lr
    9888:	4003b000 	.word	0x4003b000

0000988c <adc_read>:
adc_read():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:42
{
    988c:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:44
	channel = (uint8_t)A_SENSOR_No;
    988e:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:45
	return adc_read_inner(channel);
    9890:	f7ff ffea 	bl	9868 <adc_read_inner>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:46
}
    9894:	bd10      	pop	{r4, pc}
	...

00009898 <adc_cal>:
adc_cal():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:138
//============================================================================
void adc_cal(void)
{
    uint8_t cal_var;

    ADC0_SC2 &=  ~ADC_SC2_ADTRG_MASK ; // 使能软件触发
    9898:	4b22      	ldr	r3, [pc, #136]	; (9924 <adc_cal+0x8c>)
    989a:	6a1a      	ldr	r2, [r3, #32]
    989c:	2140      	movs	r1, #64	; 0x40
    989e:	438a      	bics	r2, r1
    98a0:	621a      	str	r2, [r3, #32]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:139
    ADC0_SC3 &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); //单次转换
    98a2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    98a4:	3935      	subs	r1, #53	; 0x35
    98a6:	438a      	bics	r2, r1
    98a8:	625a      	str	r2, [r3, #36]	; 0x24
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:140
    ADC0_SC3 |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(3) );  //硬件平均滤波32次
    98aa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    98ac:	3904      	subs	r1, #4
    98ae:	430a      	orrs	r2, r1
    98b0:	625a      	str	r2, [r3, #36]	; 0x24
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:141
    ADC0_SC3 |= ADC_SC3_CAL_MASK ;      //开始校验
    98b2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    98b4:	3179      	adds	r1, #121	; 0x79
    98b6:	430a      	orrs	r2, r1
    98b8:	625a      	str	r2, [r3, #36]	; 0x24
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:142 (discriminator 1)
    while (!(ADC0_SC1A & ADC_SC1_COCO_MASK)); // 等待转换完成
    98ba:	4b1a      	ldr	r3, [pc, #104]	; (9924 <adc_cal+0x8c>)
    98bc:	681b      	ldr	r3, [r3, #0]
    98be:	061b      	lsls	r3, r3, #24
    98c0:	d5fb      	bpl.n	98ba <adc_cal+0x22>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:144

    if (ADC0_SC3& ADC_SC3_CALF_MASK) goto adc_cal_exit; // 校正失败
    98c2:	4b18      	ldr	r3, [pc, #96]	; (9924 <adc_cal+0x8c>)
    98c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    98c6:	065b      	lsls	r3, r3, #25
    98c8:	d42a      	bmi.n	9920 <adc_cal+0x88>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:148
    // 校正正确，继续执行
    // 计算正向输入校正
    cal_var = 0x00;
    cal_var =  ADC0_CLP0;
    98ca:	4a16      	ldr	r2, [pc, #88]	; (9924 <adc_cal+0x8c>)
    98cc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
    98ce:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:149
    cal_var += ADC0_CLP1;
    98d0:	6c91      	ldr	r1, [r2, #72]	; 0x48
    98d2:	185b      	adds	r3, r3, r1
    98d4:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:150
    cal_var += ADC0_CLP2;
    98d6:	6c51      	ldr	r1, [r2, #68]	; 0x44
    98d8:	185b      	adds	r3, r3, r1
    98da:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:151
    cal_var += ADC0_CLP3;
    98dc:	6c11      	ldr	r1, [r2, #64]	; 0x40
    98de:	185b      	adds	r3, r3, r1
    98e0:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:152
    cal_var += ADC0_CLP4;
    98e2:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
    98e4:	185b      	adds	r3, r3, r1
    98e6:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:153
    cal_var += ADC0_CLPS;
    98e8:	6b91      	ldr	r1, [r2, #56]	; 0x38
    98ea:	185b      	adds	r3, r3, r1
    98ec:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:155

    cal_var = cal_var/2;
    98ee:	085b      	lsrs	r3, r3, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:157
    cal_var |= 0x8000;   //Set MSB
    ADC0_PG = ADC_PG_PG(cal_var);
    98f0:	62d3      	str	r3, [r2, #44]	; 0x2c
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:161

    // 计算负向输入校正
    cal_var = 0x00;
    cal_var =  ADC0_CLM0;
    98f2:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
    98f4:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:162
    cal_var += ADC0_CLM1;
    98f6:	6e91      	ldr	r1, [r2, #104]	; 0x68
    98f8:	185b      	adds	r3, r3, r1
    98fa:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:163
    cal_var += ADC0_CLM2;
    98fc:	6e51      	ldr	r1, [r2, #100]	; 0x64
    98fe:	185b      	adds	r3, r3, r1
    9900:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:164
    cal_var += ADC0_CLM3;
    9902:	6e11      	ldr	r1, [r2, #96]	; 0x60
    9904:	185b      	adds	r3, r3, r1
    9906:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:165
    cal_var += ADC0_CLM4;
    9908:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
    990a:	185b      	adds	r3, r3, r1
    990c:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:166
    cal_var += ADC0_CLMS;
    990e:	6d91      	ldr	r1, [r2, #88]	; 0x58
    9910:	185b      	adds	r3, r3, r1
    9912:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:168

    cal_var = cal_var/2;
    9914:	085b      	lsrs	r3, r3, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:170
    cal_var |= 0x8000; // Set MSB
    ADC0_MG = ADC_MG_MG(cal_var);
    9916:	6313      	str	r3, [r2, #48]	; 0x30
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:171
    ADC0_SC3 &= ~ADC_SC3_CAL_MASK ; //清CAL
    9918:	6a53      	ldr	r3, [r2, #36]	; 0x24
    991a:	2180      	movs	r1, #128	; 0x80
    991c:	438b      	bics	r3, r1
    991e:	6253      	str	r3, [r2, #36]	; 0x24
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:173
adc_cal_exit:
    __asm("NOP");
    9920:	46c0      	nop			; (mov r8, r8)
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:174
}
    9922:	4770      	bx	lr
    9924:	4003b000 	.word	0x4003b000

00009928 <adc_init_inner>:
adc_init_inner():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:57
{
    9928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    992a:	001d      	movs	r5, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:61
    SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    992c:	4e23      	ldr	r6, [pc, #140]	; (99bc <adc_init_inner+0x94>)
    992e:	4c24      	ldr	r4, [pc, #144]	; (99c0 <adc_init_inner+0x98>)
    9930:	5937      	ldr	r7, [r6, r4]
    9932:	2380      	movs	r3, #128	; 0x80
    9934:	051b      	lsls	r3, r3, #20
    9936:	433b      	orrs	r3, r7
    9938:	5133      	str	r3, [r6, r4]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:64
    switch(accurary)
    993a:	3a08      	subs	r2, #8
    993c:	b2d3      	uxtb	r3, r2
    993e:	2b05      	cmp	r3, #5
    9940:	d807      	bhi.n	9952 <adc_init_inner+0x2a>
    9942:	009a      	lsls	r2, r3, #2
    9944:	4b1f      	ldr	r3, [pc, #124]	; (99c4 <adc_init_inner+0x9c>)
    9946:	589b      	ldr	r3, [r3, r2]
    9948:	469f      	mov	pc, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:67
        ADCCfg1 = ADC_CFG1_MODE(0);
    994a:	2200      	movs	r2, #0
    994c:	e004      	b.n	9958 <adc_init_inner+0x30>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:73
        ADCCfg1 = ADC_CFG1_MODE(2);
    994e:	2208      	movs	r2, #8
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:74
        break;
    9950:	e002      	b.n	9958 <adc_init_inner+0x30>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:76
        ADCCfg1 = ADC_CFG1_MODE(3);
    9952:	220c      	movs	r2, #12
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:77
        break;
    9954:	e000      	b.n	9958 <adc_init_inner+0x30>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:70
        ADCCfg1 = ADC_CFG1_MODE(1);
    9956:	2204      	movs	r2, #4
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:80
    ADCCfg1 |=  (ADC_CFG1_ADIV(2) | ADC_CFG1_ADICLK(1) | ADC_CFG1_ADLSMP_MASK);
    9958:	2351      	movs	r3, #81	; 0x51
    995a:	431a      	orrs	r2, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:82
    ADC0_CFG1 = ADCCfg1;
    995c:	4c1a      	ldr	r4, [pc, #104]	; (99c8 <adc_init_inner+0xa0>)
    995e:	60a2      	str	r2, [r4, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:85
    ADC0_CFG2&=~(ADC_CFG2_ADACKEN_MASK     //异步时钟输出禁止
    9960:	68e3      	ldr	r3, [r4, #12]
    9962:	220f      	movs	r2, #15
    9964:	4393      	bics	r3, r2
    9966:	60e3      	str	r3, [r4, #12]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:89
    (chnGroup==1)?(ADC0_CFG2 |=(ADC_CFG2_MUXSEL(1))):(ADC0_CFG2 &=~(ADC_CFG2_MUXSEL(1)));
    9968:	2801      	cmp	r0, #1
    996a:	d01b      	beq.n	99a4 <adc_init_inner+0x7c>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:89 (discriminator 2)
    996c:	4a16      	ldr	r2, [pc, #88]	; (99c8 <adc_init_inner+0xa0>)
    996e:	68d3      	ldr	r3, [r2, #12]
    9970:	2010      	movs	r0, #16
    9972:	4383      	bics	r3, r0
    9974:	60d3      	str	r3, [r2, #12]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:91
    ADC0_SC2 = 0;
    9976:	4814      	ldr	r0, [pc, #80]	; (99c8 <adc_init_inner+0xa0>)
    9978:	2300      	movs	r3, #0
    997a:	6203      	str	r3, [r0, #32]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:93
    ADC0_SC3 |= (ADC_SC3_ADCO_MASK | ADC_SC3_AVGE_MASK | ADC_SC3_AVGS((uint8_t)HDAve));
    997c:	6a42      	ldr	r2, [r0, #36]	; 0x24
    997e:	3303      	adds	r3, #3
    9980:	402b      	ands	r3, r5
    9982:	4313      	orrs	r3, r2
    9984:	220c      	movs	r2, #12
    9986:	4313      	orrs	r3, r2
    9988:	6243      	str	r3, [r0, #36]	; 0x24
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:96
    if (1 == diff)     //选择差分输入
    998a:	2901      	cmp	r1, #1
    998c:	d00f      	beq.n	99ae <adc_init_inner+0x86>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:103
        ADC0_SC1A &= ~(ADC_SC1_DIFF_MASK );
    998e:	4a0e      	ldr	r2, [pc, #56]	; (99c8 <adc_init_inner+0xa0>)
    9990:	6813      	ldr	r3, [r2, #0]
    9992:	2120      	movs	r1, #32
    9994:	438b      	bics	r3, r1
    9996:	6013      	str	r3, [r2, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:106
    ADC0_SC1A &= ~(ADC_SC1_AIEN_MASK);
    9998:	4a0b      	ldr	r2, [pc, #44]	; (99c8 <adc_init_inner+0xa0>)
    999a:	6813      	ldr	r3, [r2, #0]
    999c:	2140      	movs	r1, #64	; 0x40
    999e:	438b      	bics	r3, r1
    99a0:	6013      	str	r3, [r2, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:107
}
    99a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:89 (discriminator 1)
    (chnGroup==1)?(ADC0_CFG2 |=(ADC_CFG2_MUXSEL(1))):(ADC0_CFG2 &=~(ADC_CFG2_MUXSEL(1)));
    99a4:	68e3      	ldr	r3, [r4, #12]
    99a6:	300f      	adds	r0, #15
    99a8:	4303      	orrs	r3, r0
    99aa:	60e3      	str	r3, [r4, #12]
    99ac:	e7e3      	b.n	9976 <adc_init_inner+0x4e>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:98
        ADC0_SC1A |= (ADC_SC1_DIFF_MASK);
    99ae:	6803      	ldr	r3, [r0, #0]
    99b0:	311f      	adds	r1, #31
    99b2:	430b      	orrs	r3, r1
    99b4:	6003      	str	r3, [r0, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:99
        adc_cal();    //差分情况，需校验
    99b6:	f7ff ff6f 	bl	9898 <adc_cal>
    99ba:	e7ed      	b.n	9998 <adc_init_inner+0x70>
    99bc:	40047000 	.word	0x40047000
    99c0:	0000103c 	.word	0x0000103c
    99c4:	0000b04c 	.word	0x0000b04c
    99c8:	4003b000 	.word	0x4003b000

000099cc <adc_init>:
adc_init():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:24
{
    99cc:	b510      	push	{r4, lr}
    99ce:	0003      	movs	r3, r0
    99d0:	000a      	movs	r2, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:26
	chnGroup = (uint8_t)(A_SENSOR_No>>8);
    99d2:	0a00      	lsrs	r0, r0, #8
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:29
	if(A_SENSOR_No ==  (0|0<<8))  //MUXSEL_A（A通道）
    99d4:	2b00      	cmp	r3, #0
    99d6:	d005      	beq.n	99e4 <adc_init+0x18>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:32
	else if(A_SENSOR_No == (1|1<<8))
    99d8:	2102      	movs	r1, #2
    99da:	31ff      	adds	r1, #255	; 0xff
    99dc:	428b      	cmp	r3, r1
    99de:	d006      	beq.n	99ee <adc_init+0x22>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:27
	diff = 0;
    99e0:	2100      	movs	r1, #0
    99e2:	e000      	b.n	99e6 <adc_init+0x1a>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:30
		diff = 1;  //差分选择：=1，差分
    99e4:	2101      	movs	r1, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:34
	adc_init_inner(chnGroup,diff,acc,SAMPLE32);
    99e6:	2303      	movs	r3, #3
    99e8:	f7ff ff9e 	bl	9928 <adc_init_inner>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:35
}
    99ec:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:33
		diff = 1;//差分选择：=1，差分
    99ee:	2101      	movs	r1, #1
    99f0:	e7f9      	b.n	99e6 <adc_init+0x1a>
	...

000099f4 <TempRegression>:
TempRegression():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:178


float TempRegression(uint16_t tmpAD)
{
    99f4:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:180
    float v1,v2,S,T;
    v1 = ((float)tmpAD*3300)/65535;   //AD值变为采样点电压(mV)
    99f6:	f7fe f851 	bl	7a9c <__aeabi_ui2f>
    99fa:	4916      	ldr	r1, [pc, #88]	; (9a54 <TempRegression+0x60>)
    99fc:	f7fd fd38 	bl	7470 <__aeabi_fmul>
    9a00:	4915      	ldr	r1, [pc, #84]	; (9a58 <TempRegression+0x64>)
    9a02:	f7fd fc23 	bl	724c <__aeabi_fdiv>
    9a06:	1c04      	adds	r4, r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:181
    v2=3300 - v1;                    //分压电阻两端电压(mV)
    9a08:	1c01      	adds	r1, r0, #0
    9a0a:	4812      	ldr	r0, [pc, #72]	; (9a54 <TempRegression+0x60>)
    9a0c:	f7fd fe62 	bl	76d4 <__aeabi_fsub>
    9a10:	1c01      	adds	r1, r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:182
    S = v1/v2;                       //分压比
    9a12:	1c20      	adds	r0, r4, #0
    9a14:	f7fd fc1a 	bl	724c <__aeabi_fdiv>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:183
    T = (1/(log(S)/3950.0 + (1/(273.15 + 25)))) - 273.15 + 0.5;
    9a18:	f7ff fe1e 	bl	9658 <__aeabi_f2d>
    9a1c:	f000 fff8 	bl	aa10 <log>
    9a20:	2200      	movs	r2, #0
    9a22:	4b0e      	ldr	r3, [pc, #56]	; (9a5c <TempRegression+0x68>)
    9a24:	f7fe fb96 	bl	8154 <__aeabi_ddiv>
    9a28:	4a0d      	ldr	r2, [pc, #52]	; (9a60 <TempRegression+0x6c>)
    9a2a:	4b0e      	ldr	r3, [pc, #56]	; (9a64 <TempRegression+0x70>)
    9a2c:	f7fe f876 	bl	7b1c <__aeabi_dadd>
    9a30:	0002      	movs	r2, r0
    9a32:	000b      	movs	r3, r1
    9a34:	2000      	movs	r0, #0
    9a36:	490c      	ldr	r1, [pc, #48]	; (9a68 <TempRegression+0x74>)
    9a38:	f7fe fb8c 	bl	8154 <__aeabi_ddiv>
    9a3c:	4a0b      	ldr	r2, [pc, #44]	; (9a6c <TempRegression+0x78>)
    9a3e:	4b0c      	ldr	r3, [pc, #48]	; (9a70 <TempRegression+0x7c>)
    9a40:	f7ff fa04 	bl	8e4c <__aeabi_dsub>
    9a44:	2200      	movs	r2, #0
    9a46:	4b0b      	ldr	r3, [pc, #44]	; (9a74 <TempRegression+0x80>)
    9a48:	f7fe f868 	bl	7b1c <__aeabi_dadd>
    9a4c:	f7ff fe56 	bl	96fc <__aeabi_d2f>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:185
    return T;
}
    9a50:	bd10      	pop	{r4, pc}
    9a52:	46c0      	nop			; (mov r8, r8)
    9a54:	454e4000 	.word	0x454e4000
    9a58:	477fff00 	.word	0x477fff00
    9a5c:	40aedc00 	.word	0x40aedc00
    9a60:	dcb5db83 	.word	0xdcb5db83
    9a64:	3f6b79e1 	.word	0x3f6b79e1
    9a68:	3ff00000 	.word	0x3ff00000
    9a6c:	66666666 	.word	0x66666666
    9a70:	40711266 	.word	0x40711266
    9a74:	3fe00000 	.word	0x3fe00000

00009a78 <TempTrans>:
TempTrans():
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:193
//功能概要：将读到的mcu温度AD值转换为实际温度
//参数说明：mcu_temp_AD：通过adc_read函数得到的AD值
//函数返回：实际温度值
//============================================================================
float TempTrans(uint16_t mcu_temp_AD)
{
    9a78:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:195
	float mcu_temp_result;
	mcu_temp_result=(float)(25.0-(mcu_temp_AD*0.05-719)/1.715);
    9a7a:	f7ff fd81 	bl	9580 <__aeabi_i2d>
    9a7e:	4a0a      	ldr	r2, [pc, #40]	; (9aa8 <TempTrans+0x30>)
    9a80:	4b0a      	ldr	r3, [pc, #40]	; (9aac <TempTrans+0x34>)
    9a82:	f7fe ff71 	bl	8968 <__aeabi_dmul>
    9a86:	2200      	movs	r2, #0
    9a88:	4b09      	ldr	r3, [pc, #36]	; (9ab0 <TempTrans+0x38>)
    9a8a:	f7ff f9df 	bl	8e4c <__aeabi_dsub>
    9a8e:	4a09      	ldr	r2, [pc, #36]	; (9ab4 <TempTrans+0x3c>)
    9a90:	4b09      	ldr	r3, [pc, #36]	; (9ab8 <TempTrans+0x40>)
    9a92:	f7fe fb5f 	bl	8154 <__aeabi_ddiv>
    9a96:	0002      	movs	r2, r0
    9a98:	000b      	movs	r3, r1
    9a9a:	2000      	movs	r0, #0
    9a9c:	4907      	ldr	r1, [pc, #28]	; (9abc <TempTrans+0x44>)
    9a9e:	f7ff f9d5 	bl	8e4c <__aeabi_dsub>
    9aa2:	f7ff fe2b 	bl	96fc <__aeabi_d2f>
D:\app_for_qianrushi\exam\18\Debug/srcc/adc.c:197
	return mcu_temp_result;
    9aa6:	bd10      	pop	{r4, pc}
    9aa8:	9999999a 	.word	0x9999999a
    9aac:	3fa99999 	.word	0x3fa99999
    9ab0:	40867800 	.word	0x40867800
    9ab4:	d70a3d71 	.word	0xd70a3d71
    9ab8:	3ffb70a3 	.word	0x3ffb70a3
    9abc:	40390000 	.word	0x40390000

00009ac0 <SystemInit>:
SystemInit():
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:112
    //看门狗默认为开启，而且复位之后只能开启或关闭看门狗一次
    //SIM_COPC &= ~SIM_COPC_COPT_MASK;    //DISABLE_WDOG 

    /* System clock initialization */
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
    9ac0:	4b26      	ldr	r3, [pc, #152]	; (9b5c <SystemInit+0x9c>)
    9ac2:	4a27      	ldr	r2, [pc, #156]	; (9b60 <SystemInit+0xa0>)
    9ac4:	21c0      	movs	r1, #192	; 0xc0
    9ac6:	0289      	lsls	r1, r1, #10
    9ac8:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:114
    /* SIM_SCGC5: PORTA=1 */
    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
    9aca:	4926      	ldr	r1, [pc, #152]	; (9b64 <SystemInit+0xa4>)
    9acc:	5858      	ldr	r0, [r3, r1]
    9ace:	2280      	movs	r2, #128	; 0x80
    9ad0:	0092      	lsls	r2, r2, #2
    9ad2:	4302      	orrs	r2, r0
    9ad4:	505a      	str	r2, [r3, r1]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:115
    if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
    9ad6:	4b24      	ldr	r3, [pc, #144]	; (9b68 <SystemInit+0xa8>)
    9ad8:	789b      	ldrb	r3, [r3, #2]
    9ada:	071b      	lsls	r3, r3, #28
    9adc:	d504      	bpl.n	9ae8 <SystemInit+0x28>
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:117
        /* PMC_REGSC: ACKISO=1 */
        PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
    9ade:	4a22      	ldr	r2, [pc, #136]	; (9b68 <SystemInit+0xa8>)
    9ae0:	7893      	ldrb	r3, [r2, #2]
    9ae2:	2108      	movs	r1, #8
    9ae4:	430b      	orrs	r3, r1
    9ae6:	7093      	strb	r3, [r2, #2]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:120
    }
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=1,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x01)); /* Update system prescalers */
    9ae8:	4b1c      	ldr	r3, [pc, #112]	; (9b5c <SystemInit+0x9c>)
    9aea:	4a1d      	ldr	r2, [pc, #116]	; (9b60 <SystemInit+0xa0>)
    9aec:	2180      	movs	r1, #128	; 0x80
    9aee:	0249      	lsls	r1, r1, #9
    9af0:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:122
    /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
    SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
    9af2:	4a1e      	ldr	r2, [pc, #120]	; (9b6c <SystemInit+0xac>)
    9af4:	5899      	ldr	r1, [r3, r2]
    9af6:	481e      	ldr	r0, [pc, #120]	; (9b70 <SystemInit+0xb0>)
    9af8:	4001      	ands	r1, r0
    9afa:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:124
    /* SIM_SOPT1: OSC32KSEL=0 */
    SIM_SOPT1 &= (uint32_t)~(uint32_t)(SIM_SOPT1_OSC32KSEL(0x03)); /* System oscillator drives 32 kHz clock for various peripherals */
    9afc:	6819      	ldr	r1, [r3, #0]
    9afe:	481d      	ldr	r0, [pc, #116]	; (9b74 <SystemInit+0xb4>)
    9b00:	4001      	ands	r1, r0
    9b02:	6019      	str	r1, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:126
    /* SIM_SOPT2: TPMSRC=1 */
    SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
    9b04:	5899      	ldr	r1, [r3, r2]
    9b06:	481c      	ldr	r0, [pc, #112]	; (9b78 <SystemInit+0xb8>)
    9b08:	4008      	ands	r0, r1
    9b0a:	2180      	movs	r1, #128	; 0x80
    9b0c:	0449      	lsls	r1, r1, #17
    9b0e:	4301      	orrs	r1, r0
    9b10:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:133
    )) | (uint32_t)(
            SIM_SOPT2_TPMSRC(0x01)
    ));                      /* Set the TPM clock */
    /* Switch to FEI Mode */
    /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
    MCG_C1 = MCG_C1_CLKS(0x00) |
    9b12:	4b1a      	ldr	r3, [pc, #104]	; (9b7c <SystemInit+0xbc>)
    9b14:	2206      	movs	r2, #6
    9b16:	701a      	strb	r2, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:138
            MCG_C1_FRDIV(0x00) |
            MCG_C1_IREFS_MASK |
            MCG_C1_IRCLKEN_MASK;
    /* MCG_C2: LOCRE0=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
    MCG_C2 &= (uint8_t)~(uint8_t)(
    9b18:	785a      	ldrb	r2, [r3, #1]
    9b1a:	2140      	movs	r1, #64	; 0x40
    9b1c:	400a      	ands	r2, r1
    9b1e:	705a      	strb	r2, [r3, #1]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:147
            MCG_C2_EREFS0_MASK |
            MCG_C2_LP_MASK |
            MCG_C2_IRCS_MASK
    );
    /* MCG_C4: DMX32=1,DRST_DRS=1 */
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    9b20:	78d9      	ldrb	r1, [r3, #3]
    9b22:	b249      	sxtb	r1, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:149
            MCG_C4_DRST_DRS(0x02)
    )) | (uint8_t)(
    9b24:	221f      	movs	r2, #31
    9b26:	4011      	ands	r1, r2
    9b28:	3a7f      	subs	r2, #127	; 0x7f
    9b2a:	430a      	orrs	r2, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:147
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    9b2c:	b2d2      	uxtb	r2, r2
    9b2e:	70da      	strb	r2, [r3, #3]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:154
            MCG_C4_DMX32_MASK |
            MCG_C4_DRST_DRS(0x01)
    ));
    /* OSC0_CR: ERCLKEN=0,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
    OSC0_CR = 0x00U;
    9b30:	2200      	movs	r2, #0
    9b32:	4913      	ldr	r1, [pc, #76]	; (9b80 <SystemInit+0xc0>)
    9b34:	700a      	strb	r2, [r1, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:156
    /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
    MCG_C5 = MCG_C5_PRDIV0(0x00);
    9b36:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:158
    /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
    MCG_C6 = MCG_C6_VDIV0(0x00);
    9b38:	715a      	strb	r2, [r3, #5]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:159 (discriminator 1)
    while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    9b3a:	4b10      	ldr	r3, [pc, #64]	; (9b7c <SystemInit+0xbc>)
    9b3c:	799b      	ldrb	r3, [r3, #6]
    9b3e:	06db      	lsls	r3, r3, #27
    9b40:	d5fb      	bpl.n	9b3a <SystemInit+0x7a>
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:161 (discriminator 1)
    }
    while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    9b42:	4b0e      	ldr	r3, [pc, #56]	; (9b7c <SystemInit+0xbc>)
    9b44:	799a      	ldrb	r2, [r3, #6]
    9b46:	230c      	movs	r3, #12
    9b48:	421a      	tst	r2, r3
    9b4a:	d1fa      	bne.n	9b42 <SystemInit+0x82>
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:234
    //        if (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x3) break;
    //    }
    //    //4.现在处于PEE模式

    //开启PORT模块时钟
    SIM->SCGC5 |= SIM_SCGC5_PORTA_MASK
    9b4c:	4903      	ldr	r1, [pc, #12]	; (9b5c <SystemInit+0x9c>)
    9b4e:	4a05      	ldr	r2, [pc, #20]	; (9b64 <SystemInit+0xa4>)
    9b50:	5888      	ldr	r0, [r1, r2]
    9b52:	23f8      	movs	r3, #248	; 0xf8
    9b54:	019b      	lsls	r3, r3, #6
    9b56:	4303      	orrs	r3, r0
    9b58:	508b      	str	r3, [r1, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/system_MKL36Z4.c:239
            | SIM_SCGC5_PORTB_MASK
            | SIM_SCGC5_PORTC_MASK
            | SIM_SCGC5_PORTD_MASK
            | SIM_SCGC5_PORTE_MASK;
}
    9b5a:	4770      	bx	lr
    9b5c:	40047000 	.word	0x40047000
    9b60:	00001044 	.word	0x00001044
    9b64:	00001038 	.word	0x00001038
    9b68:	4007d000 	.word	0x4007d000
    9b6c:	00001004 	.word	0x00001004
    9b70:	fffcffff 	.word	0xfffcffff
    9b74:	fff3ffff 	.word	0xfff3ffff
    9b78:	fcffffff 	.word	0xfcffffff
    9b7c:	40064000 	.word	0x40064000
    9b80:	40065000 	.word	0x40065000

00009b84 <TM1637_Init>:
TM1637_Init():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:52
//函数返回：无
//功能概要：向TM1637初始化
//======================================================================
void TM1637_Init(uint16_t clk_pin,uint16_t dio_pin)
{
	CLK_PIN=clk_pin;
    9b84:	4b02      	ldr	r3, [pc, #8]	; (9b90 <TM1637_Init+0xc>)
    9b86:	8018      	strh	r0, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:53
	DIO_PIN=dio_pin;
    9b88:	4b02      	ldr	r3, [pc, #8]	; (9b94 <TM1637_Init+0x10>)
    9b8a:	8019      	strh	r1, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:54
}
    9b8c:	4770      	bx	lr
    9b8e:	46c0      	nop			; (mov r8, r8)
    9b90:	2000049a 	.word	0x2000049a
    9b94:	20000498 	.word	0x20000498

00009b98 <tm1637_Dly_ms>:
tm1637_Dly_ms():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:161
	}
}

void tm1637_Dly_ms(uint32_t ms)
{
    for(uint32_t i= 0; i < (6000*ms); i++) __asm("nop");
    9b98:	2200      	movs	r2, #0
    9b9a:	e001      	b.n	9ba0 <tm1637_Dly_ms+0x8>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:161 (discriminator 3)
    9b9c:	46c0      	nop			; (mov r8, r8)
    9b9e:	3201      	adds	r2, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:161 (discriminator 1)
    9ba0:	4b02      	ldr	r3, [pc, #8]	; (9bac <tm1637_Dly_ms+0x14>)
    9ba2:	4343      	muls	r3, r0
    9ba4:	4293      	cmp	r3, r2
    9ba6:	d8f9      	bhi.n	9b9c <tm1637_Dly_ms+0x4>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:162
}
    9ba8:	4770      	bx	lr
    9baa:	46c0      	nop			; (mov r8, r8)
    9bac:	00001770 	.word	0x00001770

00009bb0 <TM1637_start>:
TM1637_start():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:96
{
    9bb0:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:97
	 gpio_init(CLK_PIN,1,1);    //初始化为GPIO，输出，高电平
    9bb2:	4b0a      	ldr	r3, [pc, #40]	; (9bdc <TM1637_start+0x2c>)
    9bb4:	8818      	ldrh	r0, [r3, #0]
    9bb6:	2201      	movs	r2, #1
    9bb8:	2101      	movs	r1, #1
    9bba:	f000 fa29 	bl	a010 <gpio_init>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:98
	 gpio_init(DIO_PIN,1,1);    //初始化为GPIO，输出，高电平
    9bbe:	4c08      	ldr	r4, [pc, #32]	; (9be0 <TM1637_start+0x30>)
    9bc0:	8820      	ldrh	r0, [r4, #0]
    9bc2:	2201      	movs	r2, #1
    9bc4:	2101      	movs	r1, #1
    9bc6:	f000 fa23 	bl	a010 <gpio_init>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:99
	 tm1637_Dly_ms(2);
    9bca:	2002      	movs	r0, #2
    9bcc:	f7ff ffe4 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:100
	 gpio_set(DIO_PIN,0);       //CLK为高，DIO由高变低，数据输入开始
    9bd0:	8820      	ldrh	r0, [r4, #0]
    9bd2:	2100      	movs	r1, #0
    9bd4:	f000 f9fa 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:101
}
    9bd8:	bd10      	pop	{r4, pc}
    9bda:	46c0      	nop			; (mov r8, r8)
    9bdc:	2000049a 	.word	0x2000049a
    9be0:	20000498 	.word	0x20000498

00009be4 <TM1637_ack>:
TM1637_ack():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:110
{
    9be4:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:111
	gpio_set(CLK_PIN,0);
    9be6:	4c0e      	ldr	r4, [pc, #56]	; (9c20 <TM1637_ack+0x3c>)
    9be8:	8820      	ldrh	r0, [r4, #0]
    9bea:	2100      	movs	r1, #0
    9bec:	f000 f9ee 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:112
	tm1637_Dly_ms(5);
    9bf0:	2005      	movs	r0, #5
    9bf2:	f7ff ffd1 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:113
	gpio_set(DIO_PIN,1);
    9bf6:	4b0b      	ldr	r3, [pc, #44]	; (9c24 <TM1637_ack+0x40>)
    9bf8:	8818      	ldrh	r0, [r3, #0]
    9bfa:	2101      	movs	r1, #1
    9bfc:	f000 f9e6 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:114
	tm1637_Dly_ms(5);
    9c00:	2005      	movs	r0, #5
    9c02:	f7ff ffc9 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:115
	gpio_set(CLK_PIN,1);
    9c06:	8820      	ldrh	r0, [r4, #0]
    9c08:	2101      	movs	r1, #1
    9c0a:	f000 f9df 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:116
	tm1637_Dly_ms(2);
    9c0e:	2002      	movs	r0, #2
    9c10:	f7ff ffc2 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:117
	gpio_set(CLK_PIN,0);
    9c14:	8820      	ldrh	r0, [r4, #0]
    9c16:	2100      	movs	r1, #0
    9c18:	f000 f9d8 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:118
}
    9c1c:	bd10      	pop	{r4, pc}
    9c1e:	46c0      	nop			; (mov r8, r8)
    9c20:	2000049a 	.word	0x2000049a
    9c24:	20000498 	.word	0x20000498

00009c28 <TM1637_stop>:
TM1637_stop():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:127
{
    9c28:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:128
    gpio_set(DIO_PIN,0);
    9c2a:	4c0c      	ldr	r4, [pc, #48]	; (9c5c <TM1637_stop+0x34>)
    9c2c:	8820      	ldrh	r0, [r4, #0]
    9c2e:	2100      	movs	r1, #0
    9c30:	f000 f9cc 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:129
    tm1637_Dly_ms(2);
    9c34:	2002      	movs	r0, #2
    9c36:	f7ff ffaf 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:130
	gpio_set(CLK_PIN,1);
    9c3a:	4b09      	ldr	r3, [pc, #36]	; (9c60 <TM1637_stop+0x38>)
    9c3c:	8818      	ldrh	r0, [r3, #0]
    9c3e:	2101      	movs	r1, #1
    9c40:	f000 f9c4 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:131
	tm1637_Dly_ms(2);
    9c44:	2002      	movs	r0, #2
    9c46:	f7ff ffa7 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:132
	gpio_set(DIO_PIN,1);
    9c4a:	8820      	ldrh	r0, [r4, #0]
    9c4c:	2101      	movs	r1, #1
    9c4e:	f000 f9bd 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:133
	tm1637_Dly_ms(2);
    9c52:	2002      	movs	r0, #2
    9c54:	f7ff ffa0 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:134
}
    9c58:	bd10      	pop	{r4, pc}
    9c5a:	46c0      	nop			; (mov r8, r8)
    9c5c:	20000498 	.word	0x20000498
    9c60:	2000049a 	.word	0x2000049a

00009c64 <TM1637_Write>:
TM1637_Write():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:143
{
    9c64:	b570      	push	{r4, r5, r6, lr}
    9c66:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:145
	for(i=0;i<8;i++)
    9c68:	2400      	movs	r4, #0
    9c6a:	e012      	b.n	9c92 <TM1637_Write+0x2e>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:151
			gpio_set(DIO_PIN,0);
    9c6c:	4b11      	ldr	r3, [pc, #68]	; (9cb4 <TM1637_Write+0x50>)
    9c6e:	8818      	ldrh	r0, [r3, #0]
    9c70:	2100      	movs	r1, #0
    9c72:	f000 f9ab 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:152 (discriminator 2)
		tm1637_Dly_ms(3);
    9c76:	2003      	movs	r0, #3
    9c78:	f7ff ff8e 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:153 (discriminator 2)
		Data=Data>>1;
    9c7c:	086d      	lsrs	r5, r5, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:154 (discriminator 2)
		gpio_set(CLK_PIN,1);    //一位数据传输完，CLK拉高
    9c7e:	4b0e      	ldr	r3, [pc, #56]	; (9cb8 <TM1637_Write+0x54>)
    9c80:	8818      	ldrh	r0, [r3, #0]
    9c82:	2101      	movs	r1, #1
    9c84:	f000 f9a2 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:155 (discriminator 2)
		tm1637_Dly_ms(3);
    9c88:	2003      	movs	r0, #3
    9c8a:	f7ff ff85 	bl	9b98 <tm1637_Dly_ms>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:145 (discriminator 2)
	for(i=0;i<8;i++)
    9c8e:	3401      	adds	r4, #1
    9c90:	b2e4      	uxtb	r4, r4
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:145 (discriminator 1)
    9c92:	2c07      	cmp	r4, #7
    9c94:	d80c      	bhi.n	9cb0 <TM1637_Write+0x4c>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:147
		gpio_set(CLK_PIN,0);    //CLK为低时，DIO上才可以从传数据
    9c96:	4b08      	ldr	r3, [pc, #32]	; (9cb8 <TM1637_Write+0x54>)
    9c98:	8818      	ldrh	r0, [r3, #0]
    9c9a:	2100      	movs	r1, #0
    9c9c:	f000 f996 	bl	9fcc <gpio_set>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:148
		if(Data & 0x01)
    9ca0:	07eb      	lsls	r3, r5, #31
    9ca2:	d5e3      	bpl.n	9c6c <TM1637_Write+0x8>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:149
		    gpio_set(DIO_PIN,1);
    9ca4:	4b03      	ldr	r3, [pc, #12]	; (9cb4 <TM1637_Write+0x50>)
    9ca6:	8818      	ldrh	r0, [r3, #0]
    9ca8:	2101      	movs	r1, #1
    9caa:	f000 f98f 	bl	9fcc <gpio_set>
    9cae:	e7e2      	b.n	9c76 <TM1637_Write+0x12>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:157
}
    9cb0:	bd70      	pop	{r4, r5, r6, pc}
    9cb2:	46c0      	nop			; (mov r8, r8)
    9cb4:	20000498 	.word	0x20000498
    9cb8:	2000049a 	.word	0x2000049a

00009cbc <TM1637_Display>:
TM1637_Display():
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:64
{
    9cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    9cbe:	46de      	mov	lr, fp
    9cc0:	4657      	mov	r7, sl
    9cc2:	464e      	mov	r6, r9
    9cc4:	4645      	mov	r5, r8
    9cc6:	b5e0      	push	{r5, r6, r7, lr}
    9cc8:	b083      	sub	sp, #12
    9cca:	4683      	mov	fp, r0
    9ccc:	000f      	movs	r7, r1
    9cce:	4692      	mov	sl, r2
    9cd0:	9301      	str	r3, [sp, #4]
    9cd2:	ab0c      	add	r3, sp, #48	; 0x30
    9cd4:	781a      	ldrb	r2, [r3, #0]
    9cd6:	4691      	mov	r9, r2
    9cd8:	ab0d      	add	r3, sp, #52	; 0x34
    9cda:	781e      	ldrb	r6, [r3, #0]
    9cdc:	ab0e      	add	r3, sp, #56	; 0x38
    9cde:	781a      	ldrb	r2, [r3, #0]
    9ce0:	4690      	mov	r8, r2
    9ce2:	ab0f      	add	r3, sp, #60	; 0x3c
    9ce4:	781d      	ldrb	r5, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:65
	TM1637_start();
    9ce6:	f7ff ff63 	bl	9bb0 <TM1637_start>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:66
	TM1637_Write(0x40);    //写数据到显示寄存器+自动地址加1+普通模式
    9cea:	2040      	movs	r0, #64	; 0x40
    9cec:	f7ff ffba 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:67
	TM1637_ack();
    9cf0:	f7ff ff78 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:68
	TM1637_stop();
    9cf4:	f7ff ff98 	bl	9c28 <TM1637_stop>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:69
	TM1637_start();
    9cf8:	f7ff ff5a 	bl	9bb0 <TM1637_start>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:70
	TM1637_Write(0xc0);    //设置显示首地址即第一个LED
    9cfc:	20c0      	movs	r0, #192	; 0xc0
    9cfe:	f7ff ffb1 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:71
	TM1637_ack();
    9d02:	f7ff ff6f 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:73
	TM1637_Write(tab[a]|a1<<7);
    9d06:	4c1c      	ldr	r4, [pc, #112]	; (9d78 <TM1637_Display+0xbc>)
    9d08:	465a      	mov	r2, fp
    9d0a:	56a0      	ldrsb	r0, [r4, r2]
    9d0c:	01ff      	lsls	r7, r7, #7
    9d0e:	4338      	orrs	r0, r7
    9d10:	b2c0      	uxtb	r0, r0
    9d12:	f7ff ffa7 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:74
	TM1637_ack();
    9d16:	f7ff ff65 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:75
	TM1637_Write(tab[b]|b1<<7);    //h为1时显示时钟中间的两点
    9d1a:	4652      	mov	r2, sl
    9d1c:	56a0      	ldrsb	r0, [r4, r2]
    9d1e:	9b01      	ldr	r3, [sp, #4]
    9d20:	01db      	lsls	r3, r3, #7
    9d22:	4318      	orrs	r0, r3
    9d24:	b2c0      	uxtb	r0, r0
    9d26:	f7ff ff9d 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:76
	TM1637_ack();
    9d2a:	f7ff ff5b 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:77
	TM1637_Write(tab[c]|c1<<7);
    9d2e:	464b      	mov	r3, r9
    9d30:	56e0      	ldrsb	r0, [r4, r3]
    9d32:	01f6      	lsls	r6, r6, #7
    9d34:	4330      	orrs	r0, r6
    9d36:	b2c0      	uxtb	r0, r0
    9d38:	f7ff ff94 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:78
	TM1637_ack();
    9d3c:	f7ff ff52 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:79
	TM1637_Write(tab[d]|d1<<7);
    9d40:	4643      	mov	r3, r8
    9d42:	56e0      	ldrsb	r0, [r4, r3]
    9d44:	01ed      	lsls	r5, r5, #7
    9d46:	4328      	orrs	r0, r5
    9d48:	b2c0      	uxtb	r0, r0
    9d4a:	f7ff ff8b 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:80
	TM1637_ack();
    9d4e:	f7ff ff49 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:82
	TM1637_stop();
    9d52:	f7ff ff69 	bl	9c28 <TM1637_stop>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:83
	TM1637_start();
    9d56:	f7ff ff2b 	bl	9bb0 <TM1637_start>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:84
	TM1637_Write(0x89);    //显示控制：开显示，2/16亮度
    9d5a:	2089      	movs	r0, #137	; 0x89
    9d5c:	f7ff ff82 	bl	9c64 <TM1637_Write>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:85
	TM1637_ack();
    9d60:	f7ff ff40 	bl	9be4 <TM1637_ack>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:86
	TM1637_stop();
    9d64:	f7ff ff60 	bl	9c28 <TM1637_stop>
D:\app_for_qianrushi\exam\18\Debug/srcc/tm1637.c:87
}
    9d68:	b003      	add	sp, #12
    9d6a:	bc3c      	pop	{r2, r3, r4, r5}
    9d6c:	4690      	mov	r8, r2
    9d6e:	4699      	mov	r9, r3
    9d70:	46a2      	mov	sl, r4
    9d72:	46ab      	mov	fp, r5
    9d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9d76:	46c0      	nop			; (mov r8, r8)
    9d78:	20000400 	.word	0x20000400

00009d7c <Test_Digitaltube>:
Test_Digitaltube():
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:66
	
    }     
}

void Test_Digitaltube(uint8_t *cnt)
{	
    9d7c:	b510      	push	{r4, lr}
    9d7e:	b084      	sub	sp, #16
    9d80:	0004      	movs	r4, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:67
    TM1637_Init(TM1637_CLK,TM1637_DIO);
    9d82:	2102      	movs	r1, #2
    9d84:	2080      	movs	r0, #128	; 0x80
    9d86:	31ff      	adds	r1, #255	; 0xff
    9d88:	0040      	lsls	r0, r0, #1
    9d8a:	f7ff fefb 	bl	9b84 <TM1637_Init>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:68
	TM1637_Display(cnt[0],0,cnt[1],1,cnt[2],0,cnt[3],0);
    9d8e:	7862      	ldrb	r2, [r4, #1]
    9d90:	7820      	ldrb	r0, [r4, #0]
    9d92:	2300      	movs	r3, #0
    9d94:	9303      	str	r3, [sp, #12]
    9d96:	78e1      	ldrb	r1, [r4, #3]
    9d98:	9102      	str	r1, [sp, #8]
    9d9a:	9301      	str	r3, [sp, #4]
    9d9c:	78a3      	ldrb	r3, [r4, #2]
    9d9e:	9300      	str	r3, [sp, #0]
    9da0:	2301      	movs	r3, #1
    9da2:	2100      	movs	r1, #0
    9da4:	f7ff ff8a 	bl	9cbc <TM1637_Display>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:69
}
    9da8:	b004      	add	sp, #16
    9daa:	bd10      	pop	{r4, pc}

00009dac <main>:
main():
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:18
{
    9dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:25
    DISABLE_INTERRUPTS;
    9dae:	b672      	cpsid	i
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:33
    gpio_init(LIGHT_BLUE,GPIO_OUTPUT,LIGHT_OFF);   
    9db0:	2201      	movs	r2, #1
    9db2:	2101      	movs	r1, #1
    9db4:	200d      	movs	r0, #13
    9db6:	f000 f92b 	bl	a010 <gpio_init>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:34
	adc_init(AD_MCU_TEMP,0);
    9dba:	2100      	movs	r1, #0
    9dbc:	201a      	movs	r0, #26
    9dbe:	f7ff fe05 	bl	99cc <adc_init>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:35
	adc_init(AD_BOARD_TEMP,0);
    9dc2:	2100      	movs	r1, #0
    9dc4:	2002      	movs	r0, #2
    9dc6:	f7ff fe01 	bl	99cc <adc_init>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:36
    ENABLE_INTERRUPTS;
    9dca:	b662      	cpsie	i
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:38
    printf("-----------------------------------------------------\r\n"); 
    9dcc:	4829      	ldr	r0, [pc, #164]	; (9e74 <main+0xc8>)
    9dce:	f000 fe0d 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:39
    printf("金葫芦提示：数码管测试实例 \r\n");
    9dd2:	4829      	ldr	r0, [pc, #164]	; (9e78 <main+0xcc>)
    9dd4:	f000 fe0a 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:40
    printf("  ① 蓝灯闪烁\n");
    9dd8:	4828      	ldr	r0, [pc, #160]	; (9e7c <main+0xd0>)
    9dda:	f000 fe07 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:41
    printf("  ② UART_Debug串口（波特率115200），输出数码管提示信息 \r\n");
    9dde:	4828      	ldr	r0, [pc, #160]	; (9e80 <main+0xd4>)
    9de0:	f000 fe04 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:42
    printf("----------------------------------------------------\r\n"); 
    9de4:	4827      	ldr	r0, [pc, #156]	; (9e84 <main+0xd8>)
    9de6:	f000 fe01 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:31
    mMainLoopCount = 0;    
    9dea:	2300      	movs	r3, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:48
        mMainLoopCount++;                        
    9dec:	3301      	adds	r3, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:49
        if (mMainLoopCount<=16556677)  continue;  
    9dee:	4a26      	ldr	r2, [pc, #152]	; (9e88 <main+0xdc>)
    9df0:	4293      	cmp	r3, r2
    9df2:	d9fb      	bls.n	9dec <main+0x40>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:51
		mcu_temp_AD = adc_read(AD_MCU_TEMP);
    9df4:	201a      	movs	r0, #26
    9df6:	f7ff fd49 	bl	988c <adc_read>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:52
        mcu_temp=TempTrans(mcu_temp_AD);
    9dfa:	f7ff fe3d 	bl	9a78 <TempTrans>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:53
        temperature = TempRegression(adc_read(AD_BOARD_TEMP));
    9dfe:	2002      	movs	r0, #2
    9e00:	f7ff fd44 	bl	988c <adc_read>
    9e04:	f7ff fdf6 	bl	99f4 <TempRegression>
    9e08:	1c05      	adds	r5, r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:54
        ans[0]=(((int)temperature)/10)%10;
    9e0a:	f7fd fe27 	bl	7a5c <__aeabi_f2iz>
    9e0e:	0006      	movs	r6, r0
    9e10:	210a      	movs	r1, #10
    9e12:	f7fc ffd3 	bl	6dbc <__divsi3>
    9e16:	210a      	movs	r1, #10
    9e18:	f7fd f8b6 	bl	6f88 <__aeabi_idivmod>
    9e1c:	4c1b      	ldr	r4, [pc, #108]	; (9e8c <main+0xe0>)
    9e1e:	7021      	strb	r1, [r4, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:55
        ans[1]=((int)temperature)%10;
    9e20:	210a      	movs	r1, #10
    9e22:	0030      	movs	r0, r6
    9e24:	f7fd f8b0 	bl	6f88 <__aeabi_idivmod>
    9e28:	7061      	strb	r1, [r4, #1]
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:56
        ans[2]=((int)(temperature*10.0))%10;
    9e2a:	1c28      	adds	r0, r5, #0
    9e2c:	f7ff fc14 	bl	9658 <__aeabi_f2d>
    9e30:	0006      	movs	r6, r0
    9e32:	000f      	movs	r7, r1
    9e34:	2200      	movs	r2, #0
    9e36:	4b16      	ldr	r3, [pc, #88]	; (9e90 <main+0xe4>)
    9e38:	f7fe fd96 	bl	8968 <__aeabi_dmul>
    9e3c:	f7ff fb6a 	bl	9514 <__aeabi_d2iz>
    9e40:	210a      	movs	r1, #10
    9e42:	f7fd f8a1 	bl	6f88 <__aeabi_idivmod>
    9e46:	70a1      	strb	r1, [r4, #2]
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:57
        ans[3]=((int)(temperature*100.0))%10;
    9e48:	2200      	movs	r2, #0
    9e4a:	4b12      	ldr	r3, [pc, #72]	; (9e94 <main+0xe8>)
    9e4c:	0030      	movs	r0, r6
    9e4e:	0039      	movs	r1, r7
    9e50:	f7fe fd8a 	bl	8968 <__aeabi_dmul>
    9e54:	f7ff fb5e 	bl	9514 <__aeabi_d2iz>
    9e58:	210a      	movs	r1, #10
    9e5a:	f7fd f895 	bl	6f88 <__aeabi_idivmod>
    9e5e:	70e1      	strb	r1, [r4, #3]
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:58
        printf("%.2f\n",temperature);
    9e60:	0032      	movs	r2, r6
    9e62:	003b      	movs	r3, r7
    9e64:	480c      	ldr	r0, [pc, #48]	; (9e98 <main+0xec>)
    9e66:	f000 fdc1 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:59
        Test_Digitaltube(ans);
    9e6a:	0020      	movs	r0, r4
    9e6c:	f7ff ff86 	bl	9d7c <Test_Digitaltube>
D:\app_for_qianrushi\exam\18\Debug/srcc/main.c:60
        mMainLoopCount=0;     
    9e70:	2300      	movs	r3, #0
    9e72:	e7bb      	b.n	9dec <main+0x40>
    9e74:	0000b064 	.word	0x0000b064
    9e78:	0000b09c 	.word	0x0000b09c
    9e7c:	0000b0bc 	.word	0x0000b0bc
    9e80:	0000b0cc 	.word	0x0000b0cc
    9e84:	0000b108 	.word	0x0000b108
    9e88:	00fca285 	.word	0x00fca285
    9e8c:	200004a0 	.word	0x200004a0
    9e90:	40240000 	.word	0x40240000
    9e94:	40590000 	.word	0x40590000
    9e98:	0000b140 	.word	0x0000b140

00009e9c <flash_read_physical>:
flash_read_physical():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:203
//       addr：目标地址，要求为4的倍数（例如：0x00000004）
//       N：读字节数目（0~1020,要求为4，8,12,......）
//功能概要：读取flash指定地址的内容
//======================================================================
void flash_read_physical(uint8_t *dest,uint32_t addr,uint16_t N)
{
    9e9c:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:206
	uint8_t *src;
	src=(uint8_t *)addr;
	memcpy(dest,src,N);
    9e9e:	f001 f823 	bl	aee8 <memcpy>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:207
}
    9ea2:	bd10      	pop	{r4, pc}

00009ea4 <flash_isempty>:
flash_isempty():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:254
{
   uint16_t i,flag;
   uint8_t* buff;
   i = 0;
   flag = 1;
   for(i = 0; i<N; i++)   //遍历区域内字节
    9ea4:	2300      	movs	r3, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:254 (discriminator 1)
    9ea6:	428b      	cmp	r3, r1
    9ea8:	d206      	bcs.n	9eb8 <flash_isempty+0x14>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:256
   {
	  buff=(uint8_t*)(sect*0x400);
    9eaa:	0282      	lsls	r2, r0, #10
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:257
      if(buff[i]!=0xff)   //非空
    9eac:	5cd2      	ldrb	r2, [r2, r3]
    9eae:	2aff      	cmp	r2, #255	; 0xff
    9eb0:	d105      	bne.n	9ebe <flash_isempty+0x1a>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:254 (discriminator 2)
   for(i = 0; i<N; i++)   //遍历区域内字节
    9eb2:	3301      	adds	r3, #1
    9eb4:	b29b      	uxth	r3, r3
    9eb6:	e7f6      	b.n	9ea6 <flash_isempty+0x2>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:253
   flag = 1;
    9eb8:	2001      	movs	r0, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:263
      {
      	  flag=0;
          break;
       }
   }
   return flag;
    9eba:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:264
}
    9ebc:	4770      	bx	lr
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:259
      	  flag=0;
    9ebe:	2000      	movs	r0, #0
    9ec0:	e7fb      	b.n	9eba <flash_isempty+0x16>
	...

00009ec4 <flash_cmd_launch>:
flash_cmd_launch():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:342
//======================================================================
uint32_t flash_cmd_launch(void)
{
	uint8_t irq_flag=0;
    // 清除访问错误标志位和非法访问标志位
    FTFA_FSTAT = ACCERR | FPVIOL;
    9ec4:	4b0f      	ldr	r3, [pc, #60]	; (9f04 <flash_cmd_launch+0x40>)
    9ec6:	2230      	movs	r2, #48	; 0x30
    9ec8:	701a      	strb	r2, [r3, #0]
__get_PRIMASK():
D:\app_for_qianrushi\exam\18\02_CPU/core_cmFunc.h:484
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    9eca:	f3ef 8310 	mrs	r3, PRIMASK
flash_cmd_launch():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:343
    if(__get_PRIMASK() == 0U)
    9ece:	2b00      	cmp	r3, #0
    9ed0:	d112      	bne.n	9ef8 <flash_cmd_launch+0x34>
__disable_irq():
D:\app_for_qianrushi\exam\18\02_CPU/core_cmFunc.h:344
  __ASM volatile ("cpsid i" : : : "memory");
    9ed2:	b672      	cpsid	i
flash_cmd_launch():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:346
    {
    	__disable_irq();  //关总中断
    	irq_flag = 1;
    9ed4:	3a2f      	subs	r2, #47	; 0x2f
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:349
    }
    // 启动命令
    FTFA_FSTAT = CCIF;
    9ed6:	4b0b      	ldr	r3, [pc, #44]	; (9f04 <flash_cmd_launch+0x40>)
    9ed8:	2180      	movs	r1, #128	; 0x80
    9eda:	7019      	strb	r1, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:351 (discriminator 1)
    // 等待命令结束
    while(!(FTFA_FSTAT & CCIF));
    9edc:	4b09      	ldr	r3, [pc, #36]	; (9f04 <flash_cmd_launch+0x40>)
    9ede:	781b      	ldrb	r3, [r3, #0]
    9ee0:	b25b      	sxtb	r3, r3
    9ee2:	2b00      	cmp	r3, #0
    9ee4:	dafa      	bge.n	9edc <flash_cmd_launch+0x18>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:352
    if(irq_flag == 1)
    9ee6:	2a01      	cmp	r2, #1
    9ee8:	d008      	beq.n	9efc <flash_cmd_launch+0x38>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:357
    {
    	__enable_irq();  //开总中断
    }
    // 检查错误标志
    if(FTFA_FSTAT & (ACCERR | FPVIOL | MGSTAT0))
    9eea:	4b06      	ldr	r3, [pc, #24]	; (9f04 <flash_cmd_launch+0x40>)
    9eec:	781a      	ldrb	r2, [r3, #0]
    9eee:	2331      	movs	r3, #49	; 0x31
    9ef0:	421a      	tst	r2, r3
    9ef2:	d105      	bne.n	9f00 <flash_cmd_launch+0x3c>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:359
        return 1 ; //执行命令出错
    return 0; //执行命令成功
    9ef4:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:360
}
    9ef6:	4770      	bx	lr
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:340
	uint8_t irq_flag=0;
    9ef8:	2200      	movs	r2, #0
    9efa:	e7ec      	b.n	9ed6 <flash_cmd_launch+0x12>
__enable_irq():
D:\app_for_qianrushi\exam\18\02_CPU/core_cmFunc.h:333
  __ASM volatile ("cpsie i" : : : "memory");
    9efc:	b662      	cpsie	i
    9efe:	e7f4      	b.n	9eea <flash_cmd_launch+0x26>
flash_cmd_launch():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:358
        return 1 ; //执行命令出错
    9f00:	2001      	movs	r0, #1
    9f02:	e7f8      	b.n	9ef6 <flash_cmd_launch+0x32>
    9f04:	40020000 	.word	0x40020000

00009f08 <flash_erase>:
flash_erase():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:50
{
    9f08:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:57
    dest.word    = (uint32_t)(sect*(1<<10));
    9f0a:	0284      	lsls	r4, r0, #10
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:60
    FTFA_FCCOB0 = ERSSCR; // 擦除扇区命令
    9f0c:	4b16      	ldr	r3, [pc, #88]	; (9f68 <flash_erase+0x60>)
    9f0e:	2209      	movs	r2, #9
    9f10:	71da      	strb	r2, [r3, #7]
    9f12:	0482      	lsls	r2, r0, #18
    9f14:	0e12      	lsrs	r2, r2, #24
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:63
    FTFA_FCCOB1 = dest.byte[2];
    9f16:	719a      	strb	r2, [r3, #6]
    9f18:	0680      	lsls	r0, r0, #26
    9f1a:	0e00      	lsrs	r0, r0, #24
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:64
    FTFA_FCCOB2 = dest.byte[1];
    9f1c:	7158      	strb	r0, [r3, #5]
    9f1e:	b2e2      	uxtb	r2, r4
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:65
    FTFA_FCCOB3 = dest.byte[0];
    9f20:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:68
    if(1 == flash_cmd_launch())    //若执行命令出现错误
    9f22:	f7ff ffcf 	bl	9ec4 <flash_cmd_launch>
    9f26:	2801      	cmp	r0, #1
    9f28:	d01b      	beq.n	9f62 <flash_erase+0x5a>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:73
    if(dest.word < 0x400)
    9f2a:	4b10      	ldr	r3, [pc, #64]	; (9f6c <flash_erase+0x64>)
    9f2c:	429c      	cmp	r4, r3
    9f2e:	d901      	bls.n	9f34 <flash_erase+0x2c>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:91
    return 0;  //成功返回
    9f30:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:92
}
    9f32:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:76
        FTFA_FCCOB0 = PGM4; 
    9f34:	4b0c      	ldr	r3, [pc, #48]	; (9f68 <flash_erase+0x60>)
    9f36:	2206      	movs	r2, #6
    9f38:	71da      	strb	r2, [r3, #7]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:78
        FTFA_FCCOB1 = 0x00;
    9f3a:	2200      	movs	r2, #0
    9f3c:	719a      	strb	r2, [r3, #6]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:79
        FTFA_FCCOB2 = 0x04;
    9f3e:	3204      	adds	r2, #4
    9f40:	715a      	strb	r2, [r3, #5]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:80
        FTFA_FCCOB3 = 0x0C;
    9f42:	3208      	adds	r2, #8
    9f44:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:82
        FTFA_FCCOB4 = 0xFF;
    9f46:	32f3      	adds	r2, #243	; 0xf3
    9f48:	72da      	strb	r2, [r3, #11]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:83
        FTFA_FCCOB5 = 0xFF;
    9f4a:	729a      	strb	r2, [r3, #10]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:84
        FTFA_FCCOB6 = 0xFF;
    9f4c:	725a      	strb	r2, [r3, #9]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:85
        FTFA_FCCOB7 = 0xFE;
    9f4e:	3a01      	subs	r2, #1
    9f50:	721a      	strb	r2, [r3, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:87
        if(1 == flash_cmd_launch())  //若执行命令出现错误
    9f52:	f7ff ffb7 	bl	9ec4 <flash_cmd_launch>
    9f56:	2801      	cmp	r0, #1
    9f58:	d001      	beq.n	9f5e <flash_erase+0x56>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:91
    return 0;  //成功返回
    9f5a:	2000      	movs	r0, #0
    9f5c:	e7e9      	b.n	9f32 <flash_erase+0x2a>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:88
            return 2;   //解锁命令错误
    9f5e:	3001      	adds	r0, #1
    9f60:	e7e7      	b.n	9f32 <flash_erase+0x2a>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:69
        return 1;     //擦除命令错误
    9f62:	2001      	movs	r0, #1
    9f64:	e7e5      	b.n	9f32 <flash_erase+0x2a>
    9f66:	46c0      	nop			; (mov r8, r8)
    9f68:	40020000 	.word	0x40020000
    9f6c:	000003ff 	.word	0x000003ff

00009f70 <flash_write_physical>:
flash_write_physical():
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:147
{
    9f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9f72:	000f      	movs	r7, r1
    9f74:	0014      	movs	r4, r2
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:156
    FTFA_FCCOB0 = PGM4;
    9f76:	4b12      	ldr	r3, [pc, #72]	; (9fc0 <flash_write_physical+0x50>)
    9f78:	2206      	movs	r2, #6
    9f7a:	71da      	strb	r2, [r3, #7]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:157
    dest.word = destaddr;
    9f7c:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:158
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    9f7e:	2600      	movs	r6, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:158 (discriminator 1)
    9f80:	42b7      	cmp	r7, r6
    9f82:	d918      	bls.n	9fb6 <flash_write_physical+0x46>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:161
        FTFA_FCCOB1 = dest.byte[2];
    9f84:	022a      	lsls	r2, r5, #8
    9f86:	0e12      	lsrs	r2, r2, #24
    9f88:	4b0d      	ldr	r3, [pc, #52]	; (9fc0 <flash_write_physical+0x50>)
    9f8a:	719a      	strb	r2, [r3, #6]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:162
        FTFA_FCCOB2 = dest.byte[1];
    9f8c:	042a      	lsls	r2, r5, #16
    9f8e:	0e12      	lsrs	r2, r2, #24
    9f90:	715a      	strb	r2, [r3, #5]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:163
        FTFA_FCCOB3 = dest.byte[0];
    9f92:	b2ea      	uxtb	r2, r5
    9f94:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:166
        FTFA_FCCOB4 = buf[3];//大端寻址
    9f96:	78e2      	ldrb	r2, [r4, #3]
    9f98:	72da      	strb	r2, [r3, #11]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:167
        FTFA_FCCOB5 = buf[2];
    9f9a:	78a2      	ldrb	r2, [r4, #2]
    9f9c:	729a      	strb	r2, [r3, #10]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:168
        FTFA_FCCOB6 = buf[1];
    9f9e:	7862      	ldrb	r2, [r4, #1]
    9fa0:	725a      	strb	r2, [r3, #9]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:169
        FTFA_FCCOB7 = buf[0];
    9fa2:	7822      	ldrb	r2, [r4, #0]
    9fa4:	721a      	strb	r2, [r3, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:171
        if(1 == flash_cmd_launch())
    9fa6:	f7ff ff8d 	bl	9ec4 <flash_cmd_launch>
    9faa:	2801      	cmp	r0, #1
    9fac:	d005      	beq.n	9fba <flash_write_physical+0x4a>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:158 (discriminator 2)
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    9fae:	3604      	adds	r6, #4
    9fb0:	3504      	adds	r5, #4
    9fb2:	3404      	adds	r4, #4
    9fb4:	e7e4      	b.n	9f80 <flash_write_physical+0x10>
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:175
    return 0;  //成功执行
    9fb6:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:176
}
    9fb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/flash.c:172
            return 2;  //写入命令错误
    9fba:	2002      	movs	r0, #2
    9fbc:	e7fc      	b.n	9fb8 <flash_write_physical+0x48>
    9fbe:	46c0      	nop			; (mov r8, r8)
    9fc0:	40020000 	.word	0x40020000

00009fc4 <gpio_get_port_pin>:
gpio_get_port_pin():
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:348
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
	*port = (port_pin>>8);
    9fc4:	0a03      	lsrs	r3, r0, #8
    9fc6:	700b      	strb	r3, [r1, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:349
	*pin = port_pin;
    9fc8:	7010      	strb	r0, [r2, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:350
}
    9fca:	4770      	bx	lr

00009fcc <gpio_set>:
gpio_set():
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:67
{
    9fcc:	b530      	push	{r4, r5, lr}
    9fce:	b083      	sub	sp, #12
    9fd0:	000d      	movs	r5, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:72
	gpio_get_port_pin(port_pin,&port,&pin);
    9fd2:	466b      	mov	r3, sp
    9fd4:	1ddc      	adds	r4, r3, #7
    9fd6:	1d9a      	adds	r2, r3, #6
    9fd8:	0021      	movs	r1, r4
    9fda:	f7ff fff3 	bl	9fc4 <gpio_get_port_pin>
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:75
	gpio_ptr = GPIO_ARR[port];
    9fde:	7823      	ldrb	r3, [r4, #0]
    9fe0:	009b      	lsls	r3, r3, #2
    9fe2:	4a0a      	ldr	r2, [pc, #40]	; (a00c <gpio_set+0x40>)
    9fe4:	589b      	ldr	r3, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:78
	if(state == 1)
    9fe6:	2d01      	cmp	r5, #1
    9fe8:	d008      	beq.n	9ffc <gpio_set+0x30>
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:84
		BCLR(pin,GPIO_PDOR_REG(gpio_ptr));
    9fea:	681a      	ldr	r2, [r3, #0]
    9fec:	4669      	mov	r1, sp
    9fee:	7988      	ldrb	r0, [r1, #6]
    9ff0:	2101      	movs	r1, #1
    9ff2:	4081      	lsls	r1, r0
    9ff4:	438a      	bics	r2, r1
    9ff6:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:86
}
    9ff8:	b003      	add	sp, #12
    9ffa:	bd30      	pop	{r4, r5, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:80
		BSET(pin,GPIO_PDOR_REG(gpio_ptr));
    9ffc:	681a      	ldr	r2, [r3, #0]
    9ffe:	4669      	mov	r1, sp
    a000:	7988      	ldrb	r0, [r1, #6]
    a002:	2101      	movs	r1, #1
    a004:	4081      	lsls	r1, r0
    a006:	430a      	orrs	r2, r1
    a008:	601a      	str	r2, [r3, #0]
    a00a:	e7f5      	b.n	9ff8 <gpio_set+0x2c>
    a00c:	0000b148 	.word	0x0000b148

0000a010 <gpio_init>:
gpio_init():
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:31
{
    a010:	b5f0      	push	{r4, r5, r6, r7, lr}
    a012:	b085      	sub	sp, #20
    a014:	0004      	movs	r4, r0
    a016:	000f      	movs	r7, r1
    a018:	9201      	str	r2, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:37
	gpio_get_port_pin(port_pin,&port,&pin);
    a01a:	ab02      	add	r3, sp, #8
    a01c:	1d9e      	adds	r6, r3, #6
    a01e:	1ddd      	adds	r5, r3, #7
    a020:	0032      	movs	r2, r6
    a022:	0029      	movs	r1, r5
    a024:	f7ff ffce 	bl	9fc4 <gpio_get_port_pin>
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:39
	port_ptr = PORT_ARR[port];        //获得PORT模块相应口基地址
    a028:	782a      	ldrb	r2, [r5, #0]
    a02a:	0092      	lsls	r2, r2, #2
    a02c:	4b13      	ldr	r3, [pc, #76]	; (a07c <gpio_init+0x6c>)
    a02e:	58d3      	ldr	r3, [r2, r3]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:40
	gpio_ptr = GPIO_ARR[port];        //获得GPIO模块相应口基地址
    a030:	4913      	ldr	r1, [pc, #76]	; (a080 <gpio_init+0x70>)
    a032:	5850      	ldr	r0, [r2, r1]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:43
	PORT_PCR_REG(port_ptr,pin) &= ~PORT_PCR_MUX_MASK;//置D10-D8=000
    a034:	7832      	ldrb	r2, [r6, #0]
    a036:	0092      	lsls	r2, r2, #2
    a038:	58d1      	ldr	r1, [r2, r3]
    a03a:	4d12      	ldr	r5, [pc, #72]	; (a084 <gpio_init+0x74>)
    a03c:	4029      	ands	r1, r5
    a03e:	50d1      	str	r1, [r2, r3]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:44
	PORT_PCR_REG(port_ptr,pin) |= PORT_PCR_MUX(1);//置D10-D8=001
    a040:	7832      	ldrb	r2, [r6, #0]
    a042:	0092      	lsls	r2, r2, #2
    a044:	58d6      	ldr	r6, [r2, r3]
    a046:	2180      	movs	r1, #128	; 0x80
    a048:	0049      	lsls	r1, r1, #1
    a04a:	4331      	orrs	r1, r6
    a04c:	50d1      	str	r1, [r2, r3]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:47
	if(dir == 1)  //输出引脚
    a04e:	2f01      	cmp	r7, #1
    a050:	d008      	beq.n	a064 <gpio_init+0x54>
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:56
		BCLR(pin,GPIO_PDDR_REG(gpio_ptr));//数据方向寄存器的pin位=0，定义为输入
    a052:	6943      	ldr	r3, [r0, #20]
    a054:	aa02      	add	r2, sp, #8
    a056:	7991      	ldrb	r1, [r2, #6]
    a058:	2201      	movs	r2, #1
    a05a:	408a      	lsls	r2, r1
    a05c:	4393      	bics	r3, r2
    a05e:	6143      	str	r3, [r0, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:58
}
    a060:	b005      	add	sp, #20
    a062:	bdf0      	pop	{r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:50
		BSET(pin,GPIO_PDDR_REG(gpio_ptr));
    a064:	6943      	ldr	r3, [r0, #20]
    a066:	aa02      	add	r2, sp, #8
    a068:	7991      	ldrb	r1, [r2, #6]
    a06a:	2201      	movs	r2, #1
    a06c:	408a      	lsls	r2, r1
    a06e:	4313      	orrs	r3, r2
    a070:	6143      	str	r3, [r0, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/gpio.c:52
		gpio_set(port_pin,state);   
    a072:	9901      	ldr	r1, [sp, #4]
    a074:	0020      	movs	r0, r4
    a076:	f7ff ffa9 	bl	9fcc <gpio_set>
    a07a:	e7f1      	b.n	a060 <gpio_init+0x50>
    a07c:	0000b15c 	.word	0x0000b15c
    a080:	0000b148 	.word	0x0000b148
    a084:	fffff8ff 	.word	0xfffff8ff

0000a088 <Vectors_Init>:
Vectors_Init():
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:15
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
    a088:	b580      	push	{r7, lr}
    a08a:	4f1d      	ldr	r7, [pc, #116]	; (a100 <Vectors_Init+0x78>)
    a08c:	44bd      	add	sp, r7
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:19
    //有用户程序，编译本段代码
    #if (GEC_USER_SECTOR_START!=0)   
    //（1）若Flash倒数2扇区的前24字节为空，则写入设备序列号及软件版本号初值
    if(flash_isempty(MCU_SECTOR_NUM-1,24))
    a08e:	2118      	movs	r1, #24
    a090:	203f      	movs	r0, #63	; 0x3f
    a092:	f7ff ff07 	bl	9ea4 <flash_isempty>
    a096:	2800      	cmp	r0, #0
    a098:	d12b      	bne.n	a0f2 <Vectors_Init+0x6a>
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:28
    }
    //（2）继承BIOS的串口中断              
    void ** bios=MCU_FLASH_ADDR_START;   //向量表起始地址  
    uint32_t user[MCU_SECTORSIZE/4];     //向量表变量数组
    //读取USER中断向量表各中断处理程序地址赋给user数组
    flash_read_physical((uint8_t *)user,GEC_USER_SECTOR_START*
    a09a:	2280      	movs	r2, #128	; 0x80
    a09c:	21d0      	movs	r1, #208	; 0xd0
    a09e:	00d2      	lsls	r2, r2, #3
    a0a0:	01c9      	lsls	r1, r1, #7
    a0a2:	a802      	add	r0, sp, #8
    a0a4:	f7ff fefa 	bl	9e9c <flash_read_physical>
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:32
    MCU_SECTORSIZE+MCU_FLASH_ADDR_START,MCU_SECTORSIZE);
    //判断USER中串口更新中断是否为BIOS对应中断地址。若是，则不作操作；否则修改
    //为BIOS对应中断地址
    if(user[BIOS_UART_UPDATE_IRQn] != (uint32_t)bios[BIOS_UART_UPDATE_IRQn])
    a0a8:	2378      	movs	r3, #120	; 0x78
    a0aa:	681b      	ldr	r3, [r3, #0]
    a0ac:	9a20      	ldr	r2, [sp, #128]	; 0x80
    a0ae:	429a      	cmp	r2, r3
    a0b0:	d010      	beq.n	a0d4 <Vectors_Init+0x4c>
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:35
    {
        //改变User中断向量表中BIOS_UART中断向量
        flash_erase(GEC_USER_SECTOR_START);
    a0b2:	201a      	movs	r0, #26
    a0b4:	f7ff ff28 	bl	9f08 <flash_erase>
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:37
        //改USER中断向量表的BIOS程序写入串口的中断处理程序地址
        user[2]=(uint32_t)bios[2];     //【20200903】
    a0b8:	2308      	movs	r3, #8
    a0ba:	681b      	ldr	r3, [r3, #0]
    a0bc:	9304      	str	r3, [sp, #16]
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:38
        user[BIOS_UART_UPDATE_IRQn]=(uint32_t)bios[BIOS_UART_UPDATE_IRQn];
    a0be:	2378      	movs	r3, #120	; 0x78
    a0c0:	681b      	ldr	r3, [r3, #0]
    a0c2:	9301      	str	r3, [sp, #4]
    a0c4:	9320      	str	r3, [sp, #128]	; 0x80
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:39
        flash_write_physical(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    a0c6:	2180      	movs	r1, #128	; 0x80
    a0c8:	20d0      	movs	r0, #208	; 0xd0
    a0ca:	aa02      	add	r2, sp, #8
    a0cc:	00c9      	lsls	r1, r1, #3
    a0ce:	01c0      	lsls	r0, r0, #7
    a0d0:	f7ff ff4e 	bl	9f70 <flash_write_physical>
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:44
        MCU_FLASH_ADDR_START,MCU_SECTORSIZE,(uint8_t *)user);
    }
    
    //（3）中断向量表指针重定向到USER程序的中断向量表
    SCB->VTOR = (uint32_t)(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    a0d4:	4b0b      	ldr	r3, [pc, #44]	; (a104 <Vectors_Init+0x7c>)
    a0d6:	22d0      	movs	r2, #208	; 0xd0
    a0d8:	01d2      	lsls	r2, r2, #7
    a0da:	609a      	str	r2, [r3, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:47
    MCU_FLASH_ADDR_START);  
    //（4）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+
    a0dc:	4b0a      	ldr	r3, [pc, #40]	; (a108 <Vectors_Init+0x80>)
    a0de:	22e0      	movs	r2, #224	; 0xe0
    a0e0:	0192      	lsls	r2, r2, #6
    a0e2:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:50
    GEC_COMPONENT_LST_START*MCU_SECTORSIZE); 
    //（5）printf提示             
    printf("  【User提示】：将进入User的main()执行...\r\n");
    a0e4:	4809      	ldr	r0, [pc, #36]	; (a10c <Vectors_Init+0x84>)
    a0e6:	f000 fc81 	bl	a9ec <myprintf>
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:53
    
    #endif
}
    a0ea:	2381      	movs	r3, #129	; 0x81
    a0ec:	00db      	lsls	r3, r3, #3
    a0ee:	449d      	add	sp, r3
    a0f0:	bd80      	pop	{r7, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/gec.c:21
        flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    a0f2:	20fc      	movs	r0, #252	; 0xfc
    a0f4:	4a06      	ldr	r2, [pc, #24]	; (a110 <Vectors_Init+0x88>)
    a0f6:	2118      	movs	r1, #24
    a0f8:	0200      	lsls	r0, r0, #8
    a0fa:	f7ff ff39 	bl	9f70 <flash_write_physical>
    a0fe:	e7cc      	b.n	a09a <Vectors_Init+0x12>
    a100:	fffffbf8 	.word	0xfffffbf8
    a104:	e000ed00 	.word	0xe000ed00
    a108:	2000049c 	.word	0x2000049c
    a10c:	0000b18c 	.word	0x0000b18c
    a110:	0000b170 	.word	0x0000b170

0000a114 <uart_is_uartNo>:
uart_is_uartNo():
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:539
//参数说明：串口号uartNo  :UART_0、UART_1、UART_2
//功能概要：为程序健壮性而判断uartNo是否在串口数字范围内
//=====================================================================
uint8_t uart_is_uartNo(uint8_t uartNo)
{
    if(uartNo < UART_0 || uartNo > UART_2)
    a114:	2802      	cmp	r0, #2
    a116:	d801      	bhi.n	a11c <uart_is_uartNo+0x8>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:542
        return 0;
    else
        return 1;
    a118:	2001      	movs	r0, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:543
}
    a11a:	4770      	bx	lr
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:540
        return 0;
    a11c:	2000      	movs	r0, #0
    a11e:	e7fc      	b.n	a11a <uart_is_uartNo+0x6>

0000a120 <uart_send1>:
uart_send1():
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:173
{
    a120:	b570      	push	{r4, r5, r6, lr}
    a122:	0005      	movs	r5, r0
    a124:	000c      	movs	r4, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:177
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    a126:	1e43      	subs	r3, r0, #1
    a128:	009b      	lsls	r3, r3, #2
    a12a:	4a11      	ldr	r2, [pc, #68]	; (a170 <uart_send1+0x50>)
    a12c:	589e      	ldr	r6, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:185
    if(!uart_is_uartNo(uartNo))
    a12e:	f7ff fff1 	bl	a114 <uart_is_uartNo>
    a132:	2800      	cmp	r0, #0
    a134:	d016      	beq.n	a164 <uart_send1+0x44>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:190
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a136:	2300      	movs	r3, #0
    a138:	e004      	b.n	a144 <uart_send1+0x24>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:204
            if (UART_S1_REG(UART_2h_1_2) & UART_S1_TDRE_MASK )
    a13a:	7932      	ldrb	r2, [r6, #4]
    a13c:	b252      	sxtb	r2, r2
    a13e:	2a00      	cmp	r2, #0
    a140:	db11      	blt.n	a166 <uart_send1+0x46>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:190 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a142:	3301      	adds	r3, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:190 (discriminator 1)
    a144:	4a0b      	ldr	r2, [pc, #44]	; (a174 <uart_send1+0x54>)
    a146:	4293      	cmp	r3, r2
    a148:	d808      	bhi.n	a15c <uart_send1+0x3c>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:192
        if(0==uartNo)     //判断使用的哪个串口
    a14a:	2d00      	cmp	r5, #0
    a14c:	d1f5      	bne.n	a13a <uart_send1+0x1a>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:195
            if ( UART0_S1_REG(UART_2h_0) & UART0_S1_TDRE_MASK )
    a14e:	4a0a      	ldr	r2, [pc, #40]	; (a178 <uart_send1+0x58>)
    a150:	7912      	ldrb	r2, [r2, #4]
    a152:	b252      	sxtb	r2, r2
    a154:	2a00      	cmp	r2, #0
    a156:	daf4      	bge.n	a142 <uart_send1+0x22>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:197
                UART0_D_REG(UART_2h_0) = ch;
    a158:	4a07      	ldr	r2, [pc, #28]	; (a178 <uart_send1+0x58>)
    a15a:	71d4      	strb	r4, [r2, #7]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:217
    if (t >= 0xFBBB)
    a15c:	4a05      	ldr	r2, [pc, #20]	; (a174 <uart_send1+0x54>)
    a15e:	4293      	cmp	r3, r2
    a160:	d803      	bhi.n	a16a <uart_send1+0x4a>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:220
        return 1; //成功发送
    a162:	2001      	movs	r0, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:221
}
    a164:	bd70      	pop	{r4, r5, r6, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:206
                UART_D_REG(UART_2h_1_2) = ch;
    a166:	71f4      	strb	r4, [r6, #7]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:207
                break;
    a168:	e7f8      	b.n	a15c <uart_send1+0x3c>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:218
        return 0; //发送超时，发送失败
    a16a:	2000      	movs	r0, #0
    a16c:	e7fa      	b.n	a164 <uart_send1+0x44>
    a16e:	46c0      	nop			; (mov r8, r8)
    a170:	0000b1b8 	.word	0x0000b1b8
    a174:	0000fbba 	.word	0x0000fbba
    a178:	4006a000 	.word	0x4006a000

0000a17c <uart_re1>:
uart_re1():
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:285
{
    a17c:	b570      	push	{r4, r5, r6, lr}
    a17e:	0004      	movs	r4, r0
    a180:	000e      	movs	r6, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:289
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    a182:	1e43      	subs	r3, r0, #1
    a184:	009b      	lsls	r3, r3, #2
    a186:	4a14      	ldr	r2, [pc, #80]	; (a1d8 <uart_re1+0x5c>)
    a188:	589d      	ldr	r5, [r3, r2]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:292
    if(!uart_is_uartNo(uartNo))
    a18a:	f7ff ffc3 	bl	a114 <uart_is_uartNo>
    a18e:	2800      	cmp	r0, #0
    a190:	d001      	beq.n	a196 <uart_re1+0x1a>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:298
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a192:	2300      	movs	r3, #0
    a194:	e006      	b.n	a1a4 <uart_re1+0x28>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:294
        *fp=0;
    a196:	2300      	movs	r3, #0
    a198:	7033      	strb	r3, [r6, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:327
}
    a19a:	bd70      	pop	{r4, r5, r6, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:313
            if(UART_S1_REG(UART_2h_1_2) & UART_S1_RDRF_MASK)
    a19c:	792a      	ldrb	r2, [r5, #4]
    a19e:	0692      	lsls	r2, r2, #26
    a1a0:	d415      	bmi.n	a1ce <uart_re1+0x52>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:298 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a1a2:	3301      	adds	r3, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:298 (discriminator 1)
    a1a4:	4a0d      	ldr	r2, [pc, #52]	; (a1dc <uart_re1+0x60>)
    a1a6:	4293      	cmp	r3, r2
    a1a8:	d80a      	bhi.n	a1c0 <uart_re1+0x44>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:300
        if(0==uartNo)  //判断使用的哪个串口
    a1aa:	2c00      	cmp	r4, #0
    a1ac:	d1f6      	bne.n	a19c <uart_re1+0x20>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:303
        if (UART0_S1_REG(UART_2h_0) & UART0_S1_RDRF_MASK)
    a1ae:	4a0c      	ldr	r2, [pc, #48]	; (a1e0 <uart_re1+0x64>)
    a1b0:	7912      	ldrb	r2, [r2, #4]
    a1b2:	0692      	lsls	r2, r2, #26
    a1b4:	d5f5      	bpl.n	a1a2 <uart_re1+0x26>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:305
                dat=UART0_D_REG(UART_2h_0);    //获取数据,清接收中断位
    a1b6:	4a0a      	ldr	r2, [pc, #40]	; (a1e0 <uart_re1+0x64>)
    a1b8:	79d0      	ldrb	r0, [r2, #7]
    a1ba:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:306
                *fp = 1;  //接收成功
    a1bc:	2201      	movs	r2, #1
    a1be:	7032      	strb	r2, [r6, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:321
    if(t >= 0xFBBB) 
    a1c0:	4a06      	ldr	r2, [pc, #24]	; (a1dc <uart_re1+0x60>)
    a1c2:	4293      	cmp	r3, r2
    a1c4:	d9e9      	bls.n	a19a <uart_re1+0x1e>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:324
        *fp = 0;    //未收到数据
    a1c6:	2300      	movs	r3, #0
    a1c8:	7033      	strb	r3, [r6, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:323
        dat = 0xFF; 
    a1ca:	20ff      	movs	r0, #255	; 0xff
    a1cc:	e7e5      	b.n	a19a <uart_re1+0x1e>
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:315
                dat=UART_D_REG(UART_2h_1_2);    //获取数据,清接收中断位
    a1ce:	79e8      	ldrb	r0, [r5, #7]
    a1d0:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:316
                *fp= 1;  //接收成功
    a1d2:	2201      	movs	r2, #1
    a1d4:	7032      	strb	r2, [r6, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/uart.c:317
                break;
    a1d6:	e7f3      	b.n	a1c0 <uart_re1+0x44>
    a1d8:	0000b1b8 	.word	0x0000b1b8
    a1dc:	0000fbba 	.word	0x0000fbba
    a1e0:	4006a000 	.word	0x4006a000

0000a1e4 <UART0_IRQHandler>:
UART0_IRQHandler():
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:16
//功    能：收到一个字节，直接返回该字节
//备    注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
//          （1-有UART接收中断，0-没有UART接收中断）
//======================================================================
void UART_User_Handler(void)
{
    a1e4:	b510      	push	{r4, lr}
    a1e6:	b082      	sub	sp, #8
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:19
	uint8_t ch;
	uint8_t flag;
	DISABLE_INTERRUPTS;      //关总中断
    a1e8:	b672      	cpsid	i
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:22
	//------------------------------------------------------------------
	//接收一个字节
	ch = uart_re1(UART_User, &flag);   //调用接收一个字节的函数，清接收中断位
    a1ea:	466b      	mov	r3, sp
    a1ec:	1ddc      	adds	r4, r3, #7
    a1ee:	0021      	movs	r1, r4
    a1f0:	2000      	movs	r0, #0
    a1f2:	f7ff ffc3 	bl	a17c <uart_re1>
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:23
	if(flag)   //有数据
    a1f6:	7823      	ldrb	r3, [r4, #0]
    a1f8:	2b00      	cmp	r3, #0
    a1fa:	d102      	bne.n	a202 <UART0_IRQHandler+0x1e>
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:28
	{
		uart_send1(UART_User,ch);//回发接收到的字节
	}
	//------------------------------------------------------------------
	ENABLE_INTERRUPTS;       //开总中断
    a1fc:	b662      	cpsie	i
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:29
}
    a1fe:	b002      	add	sp, #8
    a200:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/isr.c:25
		uart_send1(UART_User,ch);//回发接收到的字节
    a202:	0001      	movs	r1, r0
    a204:	2000      	movs	r0, #0
    a206:	f7ff ff8b 	bl	a120 <uart_send1>
    a20a:	e7f7      	b.n	a1fc <UART0_IRQHandler+0x18>

0000a20c <printk_putc>:
printk_putc():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:26
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
    a20c:	b510      	push	{r4, lr}
    a20e:	000c      	movs	r4, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:27
	switch (info->dest) {
    a210:	6813      	ldr	r3, [r2, #0]
    a212:	2b01      	cmp	r3, #1
    a214:	d005      	beq.n	a222 <printk_putc+0x16>
    a216:	2b02      	cmp	r3, #2
    a218:	d007      	beq.n	a22a <printk_putc+0x1e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:38
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
    a21a:	6823      	ldr	r3, [r4, #0]
    a21c:	3301      	adds	r3, #1
    a21e:	6023      	str	r3, [r4, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:39
}
    a220:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:29
		info->func((char) c);
    a222:	6853      	ldr	r3, [r2, #4]
    a224:	b240      	sxtb	r0, r0
    a226:	4798      	blx	r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:30
		break;
    a228:	e7f7      	b.n	a21a <printk_putc+0xe>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:32
		*(info->loc) = (unsigned char) c;
    a22a:	6893      	ldr	r3, [r2, #8]
    a22c:	7018      	strb	r0, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:33
		++(info->loc);
    a22e:	6893      	ldr	r3, [r2, #8]
    a230:	3301      	adds	r3, #1
    a232:	6093      	str	r3, [r2, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:34
		break;
    a234:	e7f1      	b.n	a21a <printk_putc+0xe>

0000a236 <printk_mknumstr>:
printk_mknumstr():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:126
//       neg:有无符号:判断数据时有符号还是无符号整形
//       radix:格式选择:确定输出格式例如：十进制或十六进制...
//函数返回：无
//======================================================================
static int printk_mknumstr(char *numstr, void *nump, int neg, int radix)
{
    a236:	b5f0      	push	{r4, r5, r6, r7, lr}
    a238:	b083      	sub	sp, #12
    a23a:	0016      	movs	r6, r2
    a23c:	001d      	movs	r5, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:134
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
    a23e:	1c47      	adds	r7, r0, #1
    a240:	2300      	movs	r3, #0
    a242:	7003      	strb	r3, [r0, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:136

	if (neg) {
    a244:	2a00      	cmp	r2, #0
    a246:	d01f      	beq.n	a288 <printk_mknumstr+0x52>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:137
		a = *(int *) nump;
    a248:	680c      	ldr	r4, [r1, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:138
		if (a == 0) {
    a24a:	2c00      	cmp	r4, #0
    a24c:	d001      	beq.n	a252 <printk_mknumstr+0x1c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:132
	nlen = 0;
    a24e:	2600      	movs	r6, #0
    a250:	e00b      	b.n	a26a <printk_mknumstr+0x34>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:139
			*nstrp = '0';
    a252:	3330      	adds	r3, #48	; 0x30
    a254:	7043      	strb	r3, [r0, #1]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:140
			++nlen;
    a256:	2601      	movs	r6, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:176
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
    a258:	0030      	movs	r0, r6
    a25a:	b003      	add	sp, #12
    a25c:	bdf0      	pop	{r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:147
				c = ~c + 1 + '0';
    a25e:	2330      	movs	r3, #48	; 0x30
    a260:	1a59      	subs	r1, r3, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:152
			*nstrp++ = (char) c;
    a262:	7039      	strb	r1, [r7, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:153
			++nlen;
    a264:	3601      	adds	r6, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:152
			*nstrp++ = (char) c;
    a266:	3701      	adds	r7, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:151
			a = b;
    a268:	9c01      	ldr	r4, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:143
		while (a != 0) {
    a26a:	2c00      	cmp	r4, #0
    a26c:	d0f4      	beq.n	a258 <printk_mknumstr+0x22>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:144
			b = (int) a / (int) radix;
    a26e:	0029      	movs	r1, r5
    a270:	0020      	movs	r0, r4
    a272:	f7fc fda3 	bl	6dbc <__divsi3>
    a276:	9001      	str	r0, [sp, #4]
    a278:	0029      	movs	r1, r5
    a27a:	0020      	movs	r0, r4
    a27c:	f7fc fe84 	bl	6f88 <__aeabi_idivmod>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:146
			if (c < 0) {
    a280:	2900      	cmp	r1, #0
    a282:	dbec      	blt.n	a25e <printk_mknumstr+0x28>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:149
				c = c + '0';
    a284:	3130      	adds	r1, #48	; 0x30
    a286:	e7ec      	b.n	a262 <printk_mknumstr+0x2c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:156
		ua = *(unsigned int *) nump;
    a288:	680c      	ldr	r4, [r1, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:157
		if (ua == 0) {
    a28a:	2c00      	cmp	r4, #0
    a28c:	d108      	bne.n	a2a0 <printk_mknumstr+0x6a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:158
			*nstrp = '0';
    a28e:	2330      	movs	r3, #48	; 0x30
    a290:	7043      	strb	r3, [r0, #1]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:159
			++nlen;
    a292:	2601      	movs	r6, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:160
			goto done;
    a294:	e7e0      	b.n	a258 <printk_mknumstr+0x22>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:168
				uc = uc - 10 + 'A';
    a296:	3437      	adds	r4, #55	; 0x37
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:171
			*nstrp++ = (char) uc;
    a298:	703c      	strb	r4, [r7, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:172
			++nlen;
    a29a:	3601      	adds	r6, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:171
			*nstrp++ = (char) uc;
    a29c:	3701      	adds	r7, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:170
			ua = ub;
    a29e:	0004      	movs	r4, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:162
		while (ua != 0) {
    a2a0:	2c00      	cmp	r4, #0
    a2a2:	d0d9      	beq.n	a258 <printk_mknumstr+0x22>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:163
			ub = (unsigned int) ua / (unsigned int) radix;
    a2a4:	0029      	movs	r1, r5
    a2a6:	0020      	movs	r0, r4
    a2a8:	f7fc fcfe 	bl	6ca8 <__udivsi3>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:164
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
    a2ac:	0003      	movs	r3, r0
    a2ae:	436b      	muls	r3, r5
    a2b0:	1ae4      	subs	r4, r4, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:165
			if (uc < 10) {
    a2b2:	2c09      	cmp	r4, #9
    a2b4:	d8ef      	bhi.n	a296 <printk_mknumstr+0x60>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:166
				uc = uc + '0';
    a2b6:	3430      	adds	r4, #48	; 0x30
    a2b8:	e7ee      	b.n	a298 <printk_mknumstr+0x62>

0000a2ba <printk_pad_zero>:
printk_pad_zero():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:179
/********************************************************************/
static void printk_pad_zero(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
    a2ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a2bc:	0004      	movs	r4, r0
    a2be:	000d      	movs	r5, r1
    a2c0:	0017      	movs	r7, r2
    a2c2:	001e      	movs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:182
	int i;

	for (i = curlen; i < field_width; i++) {
    a2c4:	e005      	b.n	a2d2 <printk_pad_zero+0x18>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:183 (discriminator 3)
		printk_putc('0', count, info);
    a2c6:	0032      	movs	r2, r6
    a2c8:	0039      	movs	r1, r7
    a2ca:	2030      	movs	r0, #48	; 0x30
    a2cc:	f7ff ff9e 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:182 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    a2d0:	3401      	adds	r4, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:182 (discriminator 1)
    a2d2:	42ac      	cmp	r4, r5
    a2d4:	dbf7      	blt.n	a2c6 <printk_pad_zero+0xc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:185
	}
}
    a2d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000a2d8 <printk_pad_space>:
printk_pad_space():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:189

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
    a2d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a2da:	0004      	movs	r4, r0
    a2dc:	000d      	movs	r5, r1
    a2de:	0017      	movs	r7, r2
    a2e0:	001e      	movs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:192
	int i;

	for (i = curlen; i < field_width; i++) {
    a2e2:	e005      	b.n	a2f0 <printk_pad_space+0x18>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:193 (discriminator 3)
		printk_putc(' ', count, info);
    a2e4:	0032      	movs	r2, r6
    a2e6:	0039      	movs	r1, r7
    a2e8:	2020      	movs	r0, #32
    a2ea:	f7ff ff8f 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:192 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    a2ee:	3401      	adds	r4, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:192 (discriminator 1)
    a2f0:	42ac      	cmp	r4, r5
    a2f2:	dbf7      	blt.n	a2e4 <printk_pad_space+0xc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:195
	}
}
    a2f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000a2f6 <out_char>:
out_char():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:17
void out_char(char data) {
    a2f6:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:18
	uart_send1(UART_printf, data);
    a2f8:	b2c1      	uxtb	r1, r0
    a2fa:	2002      	movs	r0, #2
    a2fc:	f7ff ff10 	bl	a120 <uart_send1>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:19
}
    a300:	bd10      	pop	{r4, pc}
	...

0000a304 <printk_mkfloatstr>:
printk_mkfloatstr():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:47
{
    a304:	b5f0      	push	{r4, r5, r6, r7, lr}
    a306:	46d6      	mov	lr, sl
    a308:	464f      	mov	r7, r9
    a30a:	b580      	push	{r7, lr}
    a30c:	b09b      	sub	sp, #108	; 0x6c
    a30e:	0004      	movs	r4, r0
    a310:	4689      	mov	r9, r1
    a312:	0015      	movs	r5, r2
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:48
	uint32_t p,i,j,k,a[5]={0},b[19]={0};
    a314:	2214      	movs	r2, #20
    a316:	2100      	movs	r1, #0
    a318:	a815      	add	r0, sp, #84	; 0x54
    a31a:	f000 fdee 	bl	aefa <memset>
    a31e:	224c      	movs	r2, #76	; 0x4c
    a320:	2100      	movs	r1, #0
    a322:	a802      	add	r0, sp, #8
    a324:	f000 fde9 	bl	aefa <memset>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:55
	p=(uint32_t)*f;//整数部分
    a328:	6826      	ldr	r6, [r4, #0]
    a32a:	6867      	ldr	r7, [r4, #4]
    a32c:	0030      	movs	r0, r6
    a32e:	0039      	movs	r1, r7
    a330:	f7fc fe8e 	bl	7050 <__aeabi_d2uiz>
    a334:	4682      	mov	sl, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:56
	tempf=(*f-p);
    a336:	f7ff f95d 	bl	95f4 <__aeabi_ui2d>
    a33a:	0002      	movs	r2, r0
    a33c:	000b      	movs	r3, r1
    a33e:	0030      	movs	r0, r6
    a340:	0039      	movs	r1, r7
    a342:	f7fe fd83 	bl	8e4c <__aeabi_dsub>
    a346:	0006      	movs	r6, r0
    a348:	000f      	movs	r7, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:57
	if(precision_width==0)
    a34a:	2d00      	cmp	r5, #0
    a34c:	d10e      	bne.n	a36c <printk_mkfloatstr+0x68>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:58
	q=(*f-p)*100000000000000000;//小数部分
    a34e:	4a4b      	ldr	r2, [pc, #300]	; (a47c <printk_mkfloatstr+0x178>)
    a350:	4b4b      	ldr	r3, [pc, #300]	; (a480 <printk_mkfloatstr+0x17c>)
    a352:	f7fe fb09 	bl	8968 <__aeabi_dmul>
    a356:	f7fc fe99 	bl	708c <__aeabi_d2ulz>
    a35a:	0004      	movs	r4, r0
    a35c:	9101      	str	r1, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:66
	k=0;
    a35e:	2500      	movs	r5, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:67
	while(m<1)
    a360:	e015      	b.n	a38e <printk_mkfloatstr+0x8a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:62
		tempf*=10;
    a362:	2200      	movs	r2, #0
    a364:	4b47      	ldr	r3, [pc, #284]	; (a484 <printk_mkfloatstr+0x180>)
    a366:	f7fe faff 	bl	8968 <__aeabi_dmul>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:61
		while(precision_width--)
    a36a:	0025      	movs	r5, r4
    a36c:	1e6c      	subs	r4, r5, #1
    a36e:	2d00      	cmp	r5, #0
    a370:	d1f7      	bne.n	a362 <printk_mkfloatstr+0x5e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:63
		q=tempf;
    a372:	f7fc fe8b 	bl	708c <__aeabi_d2ulz>
    a376:	0004      	movs	r4, r0
    a378:	9101      	str	r1, [sp, #4]
    a37a:	e7f0      	b.n	a35e <printk_mkfloatstr+0x5a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:69
		m=m*10;
    a37c:	2200      	movs	r2, #0
    a37e:	4b41      	ldr	r3, [pc, #260]	; (a484 <printk_mkfloatstr+0x180>)
    a380:	0030      	movs	r0, r6
    a382:	0039      	movs	r1, r7
    a384:	f7fe faf0 	bl	8968 <__aeabi_dmul>
    a388:	0006      	movs	r6, r0
    a38a:	000f      	movs	r7, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:70
		k++;
    a38c:	3501      	adds	r5, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:67
	while(m<1)
    a38e:	2200      	movs	r2, #0
    a390:	4b3d      	ldr	r3, [pc, #244]	; (a488 <printk_mkfloatstr+0x184>)
    a392:	0030      	movs	r0, r6
    a394:	0039      	movs	r1, r7
    a396:	f7fc fe13 	bl	6fc0 <__aeabi_dcmplt>
    a39a:	2800      	cmp	r0, #0
    a39c:	d1ee      	bne.n	a37c <printk_mkfloatstr+0x78>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:72
	k--;          //记录小数点后到第一位不为零的小数之前 有多少个0.
    a39e:	1e6f      	subs	r7, r5, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:75
	if(0==p)     //整数部分为0
    a3a0:	4653      	mov	r3, sl
    a3a2:	2b00      	cmp	r3, #0
    a3a4:	d121      	bne.n	a3ea <printk_mkfloatstr+0xe6>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:76
		c[i++]='0';
    a3a6:	3330      	adds	r3, #48	; 0x30
    a3a8:	464a      	mov	r2, r9
    a3aa:	7013      	strb	r3, [r2, #0]
    a3ac:	3b2f      	subs	r3, #47	; 0x2f
    a3ae:	469a      	mov	sl, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:91
	c[i++]='.';     //小数点
    a3b0:	4653      	mov	r3, sl
    a3b2:	1c5d      	adds	r5, r3, #1
    a3b4:	232e      	movs	r3, #46	; 0x2e
    a3b6:	464a      	mov	r2, r9
    a3b8:	4651      	mov	r1, sl
    a3ba:	5453      	strb	r3, [r2, r1]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:92
	if(0==q)        //小数部分为0
    a3bc:	9b01      	ldr	r3, [sp, #4]
    a3be:	4323      	orrs	r3, r4
    a3c0:	d023      	beq.n	a40a <printk_mkfloatstr+0x106>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:96
		j=0;
    a3c2:	2600      	movs	r6, #0
    a3c4:	e039      	b.n	a43a <printk_mkfloatstr+0x136>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:82
			a[j++]=p%10;
    a3c6:	1c75      	adds	r5, r6, #1
    a3c8:	210a      	movs	r1, #10
    a3ca:	4650      	mov	r0, sl
    a3cc:	f7fc fcf2 	bl	6db4 <__aeabi_uidivmod>
    a3d0:	00b6      	lsls	r6, r6, #2
    a3d2:	ab15      	add	r3, sp, #84	; 0x54
    a3d4:	50f1      	str	r1, [r6, r3]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:83
			p/=10;
    a3d6:	210a      	movs	r1, #10
    a3d8:	4650      	mov	r0, sl
    a3da:	f7fc fc65 	bl	6ca8 <__udivsi3>
    a3de:	4682      	mov	sl, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:82
			a[j++]=p%10;
    a3e0:	002e      	movs	r6, r5
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:80
		while(p!=0)//倒序的数字
    a3e2:	4653      	mov	r3, sl
    a3e4:	2b00      	cmp	r3, #0
    a3e6:	d1ee      	bne.n	a3c6 <printk_mkfloatstr+0xc2>
    a3e8:	e00c      	b.n	a404 <printk_mkfloatstr+0x100>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:79
		j=0;
    a3ea:	2600      	movs	r6, #0
    a3ec:	e7f9      	b.n	a3e2 <printk_mkfloatstr+0xde>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:87
			c[i++]=a[j-1]+'0';
    a3ee:	3e01      	subs	r6, #1
    a3f0:	00b2      	lsls	r2, r6, #2
    a3f2:	ab15      	add	r3, sp, #84	; 0x54
    a3f4:	58d3      	ldr	r3, [r2, r3]
    a3f6:	3330      	adds	r3, #48	; 0x30
    a3f8:	464a      	mov	r2, r9
    a3fa:	4651      	mov	r1, sl
    a3fc:	5453      	strb	r3, [r2, r1]
    a3fe:	2301      	movs	r3, #1
    a400:	469c      	mov	ip, r3
    a402:	44e2      	add	sl, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:85
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
    a404:	2e00      	cmp	r6, #0
    a406:	d1f2      	bne.n	a3ee <printk_mkfloatstr+0xea>
    a408:	e7d2      	b.n	a3b0 <printk_mkfloatstr+0xac>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:93
		c[i++]='0';
    a40a:	3330      	adds	r3, #48	; 0x30
    a40c:	5553      	strb	r3, [r2, r5]
    a40e:	3501      	adds	r5, #1
    a410:	e02a      	b.n	a468 <printk_mkfloatstr+0x164>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:100
			b[j++]=q%10;
    a412:	220a      	movs	r2, #10
    a414:	2300      	movs	r3, #0
    a416:	0020      	movs	r0, r4
    a418:	9901      	ldr	r1, [sp, #4]
    a41a:	f7fc fdf9 	bl	7010 <__aeabi_uldivmod>
    a41e:	1c73      	adds	r3, r6, #1
    a420:	469a      	mov	sl, r3
    a422:	00b6      	lsls	r6, r6, #2
    a424:	ab02      	add	r3, sp, #8
    a426:	50f2      	str	r2, [r6, r3]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:101
			q/=10;
    a428:	220a      	movs	r2, #10
    a42a:	2300      	movs	r3, #0
    a42c:	0020      	movs	r0, r4
    a42e:	9901      	ldr	r1, [sp, #4]
    a430:	f7fc fdee 	bl	7010 <__aeabi_uldivmod>
    a434:	0004      	movs	r4, r0
    a436:	9101      	str	r1, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:100
			b[j++]=q%10;
    a438:	4656      	mov	r6, sl
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:98
		while(q!=0)//倒序的数字
    a43a:	9b01      	ldr	r3, [sp, #4]
    a43c:	4323      	orrs	r3, r4
    a43e:	d1e8      	bne.n	a412 <printk_mkfloatstr+0x10e>
    a440:	e005      	b.n	a44e <printk_mkfloatstr+0x14a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:105
			b[j++]=0;
    a442:	00b3      	lsls	r3, r6, #2
    a444:	2200      	movs	r2, #0
    a446:	a902      	add	r1, sp, #8
    a448:	505a      	str	r2, [r3, r1]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:106
			k--;
    a44a:	3f01      	subs	r7, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:105
			b[j++]=0;
    a44c:	3601      	adds	r6, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:103
		while(k!=0)
    a44e:	2f00      	cmp	r7, #0
    a450:	d1f7      	bne.n	a442 <printk_mkfloatstr+0x13e>
    a452:	e007      	b.n	a464 <printk_mkfloatstr+0x160>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:110
			c[i++]=b[j-1]+'0';
    a454:	3e01      	subs	r6, #1
    a456:	00b3      	lsls	r3, r6, #2
    a458:	aa02      	add	r2, sp, #8
    a45a:	589b      	ldr	r3, [r3, r2]
    a45c:	3330      	adds	r3, #48	; 0x30
    a45e:	464a      	mov	r2, r9
    a460:	5553      	strb	r3, [r2, r5]
    a462:	3501      	adds	r5, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:108
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
    a464:	2e00      	cmp	r6, #0
    a466:	d1f5      	bne.n	a454 <printk_mkfloatstr+0x150>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:114
	c[i]='\0';
    a468:	464b      	mov	r3, r9
    a46a:	195b      	adds	r3, r3, r5
    a46c:	2200      	movs	r2, #0
    a46e:	701a      	strb	r2, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:116
}
    a470:	0028      	movs	r0, r5
    a472:	b01b      	add	sp, #108	; 0x6c
    a474:	bc0c      	pop	{r2, r3}
    a476:	4691      	mov	r9, r2
    a478:	469a      	mov	sl, r3
    a47a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a47c:	85d8a000 	.word	0x85d8a000
    a480:	43763457 	.word	0x43763457
    a484:	40240000 	.word	0x40240000
    a488:	3ff00000 	.word	0x3ff00000

0000a48c <printk>:
printk():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:204
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
    a48c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a48e:	46de      	mov	lr, fp
    a490:	4657      	mov	r7, sl
    a492:	464e      	mov	r6, r9
    a494:	4645      	mov	r5, r8
    a496:	b5e0      	push	{r5, r6, r7, lr}
    a498:	b095      	sub	sp, #84	; 0x54
    a49a:	9000      	str	r0, [sp, #0]
    a49c:	000d      	movs	r5, r1
    a49e:	4690      	mov	r8, r2
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:228

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
    a4a0:	ac0b      	add	r4, sp, #44	; 0x2c
    a4a2:	2221      	movs	r2, #33	; 0x21
    a4a4:	2100      	movs	r1, #0
    a4a6:	0020      	movs	r0, r4
    a4a8:	f000 fd27 	bl	aefa <memset>
    a4ac:	2330      	movs	r3, #48	; 0x30
    a4ae:	7023      	strb	r3, [r4, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:249
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
    a4b0:	2300      	movs	r3, #0
    a4b2:	930a      	str	r3, [sp, #40]	; 0x28
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
    a4b4:	3301      	adds	r3, #1
    a4b6:	9301      	str	r3, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:250
	length_modifier=0;
    a4b8:	2300      	movs	r3, #0
    a4ba:	469a      	mov	sl, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:253
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
    a4bc:	e00b      	b.n	a4d6 <printk+0x4a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:265
			if (c != '\n') {
				printk_putc(c, &count, info);
			}
			//输出换行符
			else {
				printk_putc(0x0D /* CR */, &count, info);
    a4be:	9c00      	ldr	r4, [sp, #0]
    a4c0:	0022      	movs	r2, r4
    a4c2:	a90a      	add	r1, sp, #40	; 0x28
    a4c4:	200d      	movs	r0, #13
    a4c6:	f7ff fea1 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:266
				printk_putc(0x0A /* LF */, &count, info);
    a4ca:	0022      	movs	r2, r4
    a4cc:	a90a      	add	r1, sp, #40	; 0x28
    a4ce:	200a      	movs	r0, #10
    a4d0:	f7ff fe9c 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:253 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
    a4d4:	3501      	adds	r5, #1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:253 (discriminator 1)
    a4d6:	2000      	movs	r0, #0
    a4d8:	5628      	ldrsb	r0, [r5, r0]
    a4da:	2800      	cmp	r0, #0
    a4dc:	d100      	bne.n	a4e0 <printk+0x54>
    a4de:	e27c      	b.n	a9da <printk+0x54e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:256
		if (c != '%')
    a4e0:	2825      	cmp	r0, #37	; 0x25
    a4e2:	d022      	beq.n	a52a <printk+0x9e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:260
			if (c != '\n') {
    a4e4:	280a      	cmp	r0, #10
    a4e6:	d0ea      	beq.n	a4be <printk+0x32>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:261
				printk_putc(c, &count, info);
    a4e8:	9a00      	ldr	r2, [sp, #0]
    a4ea:	a90a      	add	r1, sp, #40	; 0x28
    a4ec:	f7ff fe8e 	bl	a20c <printk_putc>
    a4f0:	e7f0      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:283
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
			case '-':
				flags_used |= FLAGS_MINUS;
    a4f2:	2301      	movs	r3, #1
    a4f4:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:204
{
    a4f6:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:280
		while (!done) {
    a4f8:	2900      	cmp	r1, #0
    a4fa:	d11b      	bne.n	a534 <printk+0xa8>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:281
			switch (/* c = */*++p) {
    a4fc:	1c68      	adds	r0, r5, #1
    a4fe:	2301      	movs	r3, #1
    a500:	56eb      	ldrsb	r3, [r5, r3]
    a502:	3b20      	subs	r3, #32
    a504:	b2da      	uxtb	r2, r3
    a506:	2a10      	cmp	r2, #16
    a508:	d812      	bhi.n	a530 <printk+0xa4>
    a50a:	0093      	lsls	r3, r2, #2
    a50c:	4abe      	ldr	r2, [pc, #760]	; (a808 <printk+0x37c>)
    a50e:	58d3      	ldr	r3, [r2, r3]
    a510:	469f      	mov	pc, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:286
				break;
			case '+':
				flags_used |= FLAGS_PLUS;
    a512:	2302      	movs	r3, #2
    a514:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:287
				break;
    a516:	e7ee      	b.n	a4f6 <printk+0x6a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:289
			case ' ':
				flags_used |= FLAGS_SPACE;
    a518:	2304      	movs	r3, #4
    a51a:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:290
				break;
    a51c:	e7eb      	b.n	a4f6 <printk+0x6a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:292
			case '0':
				flags_used |= FLAGS_ZERO;
    a51e:	2308      	movs	r3, #8
    a520:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:293
				break;
    a522:	e7e8      	b.n	a4f6 <printk+0x6a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:295
			case '#':
				flags_used |= FLAGS_POUND;
    a524:	2310      	movs	r3, #16
    a526:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:296
				break;
    a528:	e7e5      	b.n	a4f6 <printk+0x6a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:278
		flags_used = 0;
    a52a:	2600      	movs	r6, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:279
		done = FALSE;
    a52c:	2100      	movs	r1, #0
    a52e:	e7e3      	b.n	a4f8 <printk+0x6c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:300
			default:
				/* we've gone one char too far */
				--p;
				done = TRUE;
    a530:	2101      	movs	r1, #1
    a532:	e7e1      	b.n	a4f8 <printk+0x6c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:307
			}
		}


		//检查%后再下一个字符 确定输出长度
		field_width = 0;
    a534:	2400      	movs	r4, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:308
		done = FALSE;
    a536:	2300      	movs	r3, #0
    a538:	001f      	movs	r7, r3
    a53a:	e000      	b.n	a53e <printk+0xb2>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:326
				field_width = (field_width * 10) + (c - '0');
				break;
			default:
				/* we've gone one char too far */
				--p;
				done = TRUE;
    a53c:	000f      	movs	r7, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:309
		while (!done) {
    a53e:	2f00      	cmp	r7, #0
    a540:	d10e      	bne.n	a560 <printk+0xd4>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:310
			switch (c = *++p) {
    a542:	1c68      	adds	r0, r5, #1
    a544:	2301      	movs	r3, #1
    a546:	56eb      	ldrsb	r3, [r5, r3]
    a548:	001a      	movs	r2, r3
    a54a:	3a30      	subs	r2, #48	; 0x30
    a54c:	b2d2      	uxtb	r2, r2
    a54e:	2a09      	cmp	r2, #9
    a550:	d8f4      	bhi.n	a53c <printk+0xb0>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:321
				field_width = (field_width * 10) + (c - '0');
    a552:	00a2      	lsls	r2, r4, #2
    a554:	1912      	adds	r2, r2, r4
    a556:	0054      	lsls	r4, r2, #1
    a558:	3b30      	subs	r3, #48	; 0x30
    a55a:	18e4      	adds	r4, r4, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:310
			switch (c = *++p) {
    a55c:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:322
				break;
    a55e:	e7ee      	b.n	a53e <printk+0xb2>
    a560:	46bb      	mov	fp, r7
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:331
				break;
			}
		}
		//此时字符为%看是否有.输入
		if (/* (c = *++p) */*++p == '.') {
    a562:	1c6f      	adds	r7, r5, #1
    a564:	2301      	movs	r3, #1
    a566:	56eb      	ldrsb	r3, [r5, r3]
    a568:	2b2e      	cmp	r3, #46	; 0x2e
    a56a:	d019      	beq.n	a5a0 <printk+0x114>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:368
		} else {
			/* we've gone one char too far */
			--p;
#if 1
			precision_used = FALSE;
			precision_width = 0;
    a56c:	2300      	movs	r3, #0
    a56e:	4699      	mov	r9, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:367
			precision_used = FALSE;
    a570:	9301      	str	r3, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:372
#endif
		}
		//判断 输出的是否有lf、LF等
		switch (/* c = */*++p) {
    a572:	1c6b      	adds	r3, r5, #1
    a574:	2201      	movs	r2, #1
    a576:	56aa      	ldrsb	r2, [r5, r2]
    a578:	2a68      	cmp	r2, #104	; 0x68
    a57a:	d004      	beq.n	a586 <printk+0xfa>
    a57c:	2a6c      	cmp	r2, #108	; 0x6c
    a57e:	d027      	beq.n	a5d0 <printk+0x144>
    a580:	2a4c      	cmp	r2, #76	; 0x4c
    a582:	d02a      	beq.n	a5da <printk+0x14e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:384
		case 'L':
			 length_modifier |= LENMOD_L;
			break;
		default:
			/* we've gone one char too far */
			--p;
    a584:	002b      	movs	r3, r5
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:389
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
    a586:	1c5d      	adds	r5, r3, #1
    a588:	2001      	movs	r0, #1
    a58a:	5618      	ldrsb	r0, [r3, r0]
    a58c:	0003      	movs	r3, r0
    a58e:	3b58      	subs	r3, #88	; 0x58
    a590:	b2da      	uxtb	r2, r3
    a592:	2a20      	cmp	r2, #32
    a594:	d900      	bls.n	a598 <printk+0x10c>
    a596:	e218      	b.n	a9ca <printk+0x53e>
    a598:	0093      	lsls	r3, r2, #2
    a59a:	4a9c      	ldr	r2, [pc, #624]	; (a80c <printk+0x380>)
    a59c:	58d3      	ldr	r3, [r2, r3]
    a59e:	469f      	mov	pc, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:337
			precision_width = 0;
    a5a0:	2300      	movs	r3, #0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:338
			done = FALSE;
    a5a2:	2000      	movs	r0, #0
    a5a4:	e000      	b.n	a5a8 <printk+0x11c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:359
					done = TRUE;
    a5a6:	4658      	mov	r0, fp
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:339
			while (!done) {
    a5a8:	2800      	cmp	r0, #0
    a5aa:	d10e      	bne.n	a5ca <printk+0x13e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:340
				switch ( c = *++p) {
    a5ac:	1c7d      	adds	r5, r7, #1
    a5ae:	2201      	movs	r2, #1
    a5b0:	56ba      	ldrsb	r2, [r7, r2]
    a5b2:	0011      	movs	r1, r2
    a5b4:	3930      	subs	r1, #48	; 0x30
    a5b6:	b2c9      	uxtb	r1, r1
    a5b8:	2909      	cmp	r1, #9
    a5ba:	d8f4      	bhi.n	a5a6 <printk+0x11a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:352
				precision_width = (precision_width * 10) +	(c - '0');
    a5bc:	0099      	lsls	r1, r3, #2
    a5be:	18c9      	adds	r1, r1, r3
    a5c0:	004b      	lsls	r3, r1, #1
    a5c2:	3a30      	subs	r2, #48	; 0x30
    a5c4:	189b      	adds	r3, r3, r2
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:340
				switch ( c = *++p) {
    a5c6:	002f      	movs	r7, r5
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:355
					break;
    a5c8:	e7ee      	b.n	a5a8 <printk+0x11c>
    a5ca:	4699      	mov	r9, r3
    a5cc:	003d      	movs	r5, r7
    a5ce:	e7d0      	b.n	a572 <printk+0xe6>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:377
			 length_modifier |= LENMOD_l;
    a5d0:	2201      	movs	r2, #1
    a5d2:	4651      	mov	r1, sl
    a5d4:	4311      	orrs	r1, r2
    a5d6:	468a      	mov	sl, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:378
			break;
    a5d8:	e7d5      	b.n	a586 <printk+0xfa>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:380
			 length_modifier |= LENMOD_L;
    a5da:	2202      	movs	r2, #2
    a5dc:	4651      	mov	r1, sl
    a5de:	4311      	orrs	r1, r2
    a5e0:	468a      	mov	sl, r1
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:381
			break;
    a5e2:	e7d0      	b.n	a586 <printk+0xfa>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:394
		case 'd':
		case 'i':
			//此时ap为指向可变参数列表的第一个参数
			//返回当前参数，并将ap指向下一个参数
			ival = (int) va_arg(ap, int);  
    a5e4:	4643      	mov	r3, r8
    a5e6:	3304      	adds	r3, #4
    a5e8:	9302      	str	r3, [sp, #8]
    a5ea:	4643      	mov	r3, r8
    a5ec:	681b      	ldr	r3, [r3, #0]
    a5ee:	9309      	str	r3, [sp, #36]	; 0x24
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:396
			//将整型转换成字符型保存在vstr中，返回字符数vlen
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);
    a5f0:	230a      	movs	r3, #10
    a5f2:	2201      	movs	r2, #1
    a5f4:	a909      	add	r1, sp, #36	; 0x24
    a5f6:	a80b      	add	r0, sp, #44	; 0x2c
    a5f8:	f7ff fe1d 	bl	a236 <printk_mknumstr>
    a5fc:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:398
			//指向转换后的最后一个字符
			vstrp = &vstr[vlen];  
    a5fe:	af0b      	add	r7, sp, #44	; 0x2c
    a600:	444f      	add	r7, r9
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:401

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
    a602:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a604:	2b00      	cmp	r3, #0
    a606:	db07      	blt.n	a618 <printk+0x18c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:407
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    a608:	07b3      	lsls	r3, r6, #30
    a60a:	d519      	bpl.n	a640 <printk+0x1b4>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:409
					schar = '+';
					++vlen;
    a60c:	2301      	movs	r3, #1
    a60e:	469c      	mov	ip, r3
    a610:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:408
					schar = '+';
    a612:	332a      	adds	r3, #42	; 0x2a
    a614:	4698      	mov	r8, r3
    a616:	e004      	b.n	a622 <printk+0x196>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:403
				++vlen;
    a618:	2301      	movs	r3, #1
    a61a:	469c      	mov	ip, r3
    a61c:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:402
				schar = '-';
    a61e:	332c      	adds	r3, #44	; 0x2c
    a620:	4698      	mov	r8, r3
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:424
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    a622:	0733      	lsls	r3, r6, #28
    a624:	d51c      	bpl.n	a660 <printk+0x1d4>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:425
				if (schar)
    a626:	4643      	mov	r3, r8
    a628:	2b00      	cmp	r3, #0
    a62a:	d113      	bne.n	a654 <printk+0x1c8>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:428
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
    a62c:	9b00      	ldr	r3, [sp, #0]
    a62e:	aa0a      	add	r2, sp, #40	; 0x28
    a630:	0021      	movs	r1, r4
    a632:	4648      	mov	r0, r9
    a634:	f7ff fe41 	bl	a2ba <printk_pad_zero>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:429
				vlen = field_width;
    a638:	46a1      	mov	r9, r4
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a63a:	9b02      	ldr	r3, [sp, #8]
    a63c:	4698      	mov	r8, r3
    a63e:	e162      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:411
					if (IS_FLAG_SPACE(flags_used)) {
    a640:	2304      	movs	r3, #4
    a642:	4033      	ands	r3, r6
    a644:	4698      	mov	r8, r3
    a646:	d0ec      	beq.n	a622 <printk+0x196>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:413
						++vlen;
    a648:	2301      	movs	r3, #1
    a64a:	469c      	mov	ip, r3
    a64c:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:412
						schar = ' ';
    a64e:	331f      	adds	r3, #31
    a650:	4698      	mov	r8, r3
    a652:	e7e6      	b.n	a622 <printk+0x196>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
    a654:	9a00      	ldr	r2, [sp, #0]
    a656:	a90a      	add	r1, sp, #40	; 0x28
    a658:	4640      	mov	r0, r8
    a65a:	f7ff fdd7 	bl	a20c <printk_putc>
    a65e:	e7e5      	b.n	a62c <printk+0x1a0>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:431
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a660:	07f3      	lsls	r3, r6, #31
    a662:	d505      	bpl.n	a670 <printk+0x1e4>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:442
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    a664:	4643      	mov	r3, r8
    a666:	2b00      	cmp	r3, #0
    a668:	d116      	bne.n	a698 <printk+0x20c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a66a:	9b02      	ldr	r3, [sp, #8]
    a66c:	4698      	mov	r8, r3
    a66e:	e14a      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:432
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    a670:	9b00      	ldr	r3, [sp, #0]
    a672:	aa0a      	add	r2, sp, #40	; 0x28
    a674:	0021      	movs	r1, r4
    a676:	4648      	mov	r0, r9
    a678:	f7ff fe2e 	bl	a2d8 <printk_pad_space>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:434
					if (schar)
    a67c:	4643      	mov	r3, r8
    a67e:	2b00      	cmp	r3, #0
    a680:	d102      	bne.n	a688 <printk+0x1fc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a682:	9b02      	ldr	r3, [sp, #8]
    a684:	4698      	mov	r8, r3
    a686:	e13e      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:435
						printk_putc(schar, &count, info);
    a688:	9a00      	ldr	r2, [sp, #0]
    a68a:	a90a      	add	r1, sp, #40	; 0x28
    a68c:	4640      	mov	r0, r8
    a68e:	f7ff fdbd 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a692:	9b02      	ldr	r3, [sp, #8]
    a694:	4698      	mov	r8, r3
    a696:	e136      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:443
				printk_putc(schar, &count, info);
    a698:	9a00      	ldr	r2, [sp, #0]
    a69a:	a90a      	add	r1, sp, #40	; 0x28
    a69c:	4640      	mov	r0, r8
    a69e:	f7ff fdb5 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a6a2:	9b02      	ldr	r3, [sp, #8]
    a6a4:	4698      	mov	r8, r3
    a6a6:	e12e      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:457
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg(ap,double);
    a6a8:	230c      	movs	r3, #12
    a6aa:	4443      	add	r3, r8
    a6ac:	469b      	mov	fp, r3
    a6ae:	4643      	mov	r3, r8
    a6b0:	6859      	ldr	r1, [r3, #4]
    a6b2:	689f      	ldr	r7, [r3, #8]
    a6b4:	9102      	str	r1, [sp, #8]
    a6b6:	000a      	movs	r2, r1
    a6b8:	003b      	movs	r3, r7
    a6ba:	9206      	str	r2, [sp, #24]
    a6bc:	9307      	str	r3, [sp, #28]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:461
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
    a6be:	2200      	movs	r2, #0
    a6c0:	2300      	movs	r3, #0
    a6c2:	9802      	ldr	r0, [sp, #8]
    a6c4:	0039      	movs	r1, r7
    a6c6:	f7fc fc7b 	bl	6fc0 <__aeabi_dcmplt>
    a6ca:	2800      	cmp	r0, #0
    a6cc:	d106      	bne.n	a6dc <printk+0x250>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:468
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    a6ce:	07b3      	lsls	r3, r6, #30
    a6d0:	d424      	bmi.n	a71c <printk+0x290>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:472
					schar = '+';
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
    a6d2:	2704      	movs	r7, #4
    a6d4:	4037      	ands	r7, r6
    a6d6:	d008      	beq.n	a6ea <printk+0x25e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:473
						schar = ' ';
    a6d8:	2720      	movs	r7, #32
    a6da:	e006      	b.n	a6ea <printk+0x25e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
    a6dc:	9a02      	ldr	r2, [sp, #8]
    a6de:	2180      	movs	r1, #128	; 0x80
    a6e0:	0609      	lsls	r1, r1, #24
    a6e2:	187b      	adds	r3, r7, r1
    a6e4:	9206      	str	r2, [sp, #24]
    a6e6:	9307      	str	r3, [sp, #28]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:462
				schar = '-';
    a6e8:	272d      	movs	r7, #45	; 0x2d
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:483
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
    a6ea:	9b01      	ldr	r3, [sp, #4]
    a6ec:	2b00      	cmp	r3, #0
    a6ee:	d117      	bne.n	a720 <printk+0x294>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:491
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{	//浮点型精度到小数点后8位
				if(length_modifier==0)   
    a6f0:	4653      	mov	r3, sl
    a6f2:	2b00      	cmp	r3, #0
    a6f4:	d11b      	bne.n	a72e <printk+0x2a2>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:493
				{	//将整型转换成字符型保存在vstr中，返回字符数vlen
					vlen = printk_mkfloatstr(&fval,vstr,8);
    a6f6:	2208      	movs	r2, #8
    a6f8:	a90b      	add	r1, sp, #44	; 0x2c
    a6fa:	a806      	add	r0, sp, #24
    a6fc:	f7ff fe02 	bl	a304 <printk_mkfloatstr>
    a700:	9002      	str	r0, [sp, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:511
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    a702:	0733      	lsls	r3, r6, #28
    a704:	d520      	bpl.n	a748 <printk+0x2bc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:512
				if (schar)
    a706:	2f00      	cmp	r7, #0
    a708:	d118      	bne.n	a73c <printk+0x2b0>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:515
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
    a70a:	9b00      	ldr	r3, [sp, #0]
    a70c:	aa0a      	add	r2, sp, #40	; 0x28
    a70e:	0021      	movs	r1, r4
    a710:	9802      	ldr	r0, [sp, #8]
    a712:	f7ff fdd2 	bl	a2ba <printk_pad_zero>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:516
				vlen = field_width;
    a716:	9402      	str	r4, [sp, #8]
    a718:	af0b      	add	r7, sp, #44	; 0x2c
    a71a:	e032      	b.n	a782 <printk+0x2f6>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:469
					schar = '+';
    a71c:	272b      	movs	r7, #43	; 0x2b
    a71e:	e7e4      	b.n	a6ea <printk+0x25e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:486
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);
    a720:	464a      	mov	r2, r9
    a722:	a90b      	add	r1, sp, #44	; 0x2c
    a724:	a806      	add	r0, sp, #24
    a726:	f7ff fded 	bl	a304 <printk_mkfloatstr>
    a72a:	9002      	str	r0, [sp, #8]
    a72c:	e7e9      	b.n	a702 <printk+0x276>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:499
					vlen = printk_mkfloatstr(&fval,vstr,precision_width);
    a72e:	464a      	mov	r2, r9
    a730:	a90b      	add	r1, sp, #44	; 0x2c
    a732:	a806      	add	r0, sp, #24
    a734:	f7ff fde6 	bl	a304 <printk_mkfloatstr>
    a738:	9002      	str	r0, [sp, #8]
    a73a:	e7e2      	b.n	a702 <printk+0x276>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:513
					printk_putc(schar, &count, info);  //输出符号
    a73c:	9a00      	ldr	r2, [sp, #0]
    a73e:	a90a      	add	r1, sp, #40	; 0x28
    a740:	0038      	movs	r0, r7
    a742:	f7ff fd63 	bl	a20c <printk_putc>
    a746:	e7e0      	b.n	a70a <printk+0x27e>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:518
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a748:	07f3      	lsls	r3, r6, #31
    a74a:	d507      	bpl.n	a75c <printk+0x2d0>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:529
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    a74c:	2f00      	cmp	r7, #0
    a74e:	d0e3      	beq.n	a718 <printk+0x28c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:530
				printk_putc(schar, &count, info);
    a750:	9a00      	ldr	r2, [sp, #0]
    a752:	a90a      	add	r1, sp, #40	; 0x28
    a754:	0038      	movs	r0, r7
    a756:	f7ff fd59 	bl	a20c <printk_putc>
    a75a:	e7dd      	b.n	a718 <printk+0x28c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:519
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    a75c:	9b00      	ldr	r3, [sp, #0]
    a75e:	aa0a      	add	r2, sp, #40	; 0x28
    a760:	0021      	movs	r1, r4
    a762:	9802      	ldr	r0, [sp, #8]
    a764:	f7ff fdb8 	bl	a2d8 <printk_pad_space>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:521
					if (schar)
    a768:	2f00      	cmp	r7, #0
    a76a:	d0d5      	beq.n	a718 <printk+0x28c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:522
						printk_putc(schar, &count, info);
    a76c:	9a00      	ldr	r2, [sp, #0]
    a76e:	a90a      	add	r1, sp, #40	; 0x28
    a770:	0038      	movs	r0, r7
    a772:	f7ff fd4b 	bl	a20c <printk_putc>
    a776:	e7cf      	b.n	a718 <printk+0x28c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:533
			}
			while (*vstrp)
				printk_putc(*vstrp++, &count, info);
    a778:	3701      	adds	r7, #1
    a77a:	9a00      	ldr	r2, [sp, #0]
    a77c:	a90a      	add	r1, sp, #40	; 0x28
    a77e:	f7ff fd45 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:532
			while (*vstrp)
    a782:	2000      	movs	r0, #0
    a784:	5638      	ldrsb	r0, [r7, r0]
    a786:	2800      	cmp	r0, #0
    a788:	d1f6      	bne.n	a778 <printk+0x2ec>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:534
			if (IS_FLAG_MINUS(flags_used)) {
    a78a:	07f3      	lsls	r3, r6, #31
    a78c:	d401      	bmi.n	a792 <printk+0x306>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:457
			fval= (double)va_arg(ap,double);
    a78e:	46d8      	mov	r8, fp
    a790:	e6a0      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:535
				printk_pad_space(vlen, field_width, &count, info);
    a792:	9b00      	ldr	r3, [sp, #0]
    a794:	aa0a      	add	r2, sp, #40	; 0x28
    a796:	0021      	movs	r1, r4
    a798:	9802      	ldr	r0, [sp, #8]
    a79a:	f7ff fd9d 	bl	a2d8 <printk_pad_space>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:457
			fval= (double)va_arg(ap,double);
    a79e:	46d8      	mov	r8, fp
    a7a0:	e698      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:541
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg(ap, unsigned int);
    a7a2:	4643      	mov	r3, r8
    a7a4:	3304      	adds	r3, #4
    a7a6:	9302      	str	r3, [sp, #8]
    a7a8:	4643      	mov	r3, r8
    a7aa:	681b      	ldr	r3, [r3, #0]
    a7ac:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:542
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    a7ae:	2310      	movs	r3, #16
    a7b0:	2200      	movs	r2, #0
    a7b2:	a905      	add	r1, sp, #20
    a7b4:	a80b      	add	r0, sp, #44	; 0x2c
    a7b6:	f7ff fd3e 	bl	a236 <printk_mknumstr>
    a7ba:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:543
			vstrp = &vstr[vlen];
    a7bc:	af0b      	add	r7, sp, #44	; 0x2c
    a7be:	444f      	add	r7, r9
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:546

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
    a7c0:	2308      	movs	r3, #8
    a7c2:	4033      	ands	r3, r6
    a7c4:	4698      	mov	r8, r3
    a7c6:	d023      	beq.n	a810 <printk+0x384>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:547
				if (IS_FLAG_POUND(flags_used)) {
    a7c8:	2310      	movs	r3, #16
    a7ca:	4033      	ands	r3, r6
    a7cc:	4698      	mov	r8, r3
    a7ce:	d10f      	bne.n	a7f0 <printk+0x364>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:553
					printk_putc('0', &count, info);
					printk_putc('x', &count, info);
					/*vlen += 2;*/
					dschar = TRUE;
				}
				printk_pad_zero(vlen, field_width, &count, info);
    a7d0:	9b00      	ldr	r3, [sp, #0]
    a7d2:	aa0a      	add	r2, sp, #40	; 0x28
    a7d4:	0021      	movs	r1, r4
    a7d6:	4648      	mov	r0, r9
    a7d8:	f7ff fd6f 	bl	a2ba <printk_pad_zero>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:554
				vlen = field_width;
    a7dc:	46a1      	mov	r9, r4
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:569
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
    a7de:	06f3      	lsls	r3, r6, #27
    a7e0:	d400      	bmi.n	a7e4 <printk+0x358>
    a7e2:	e09e      	b.n	a922 <printk+0x496>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:569 (discriminator 1)
    a7e4:	4643      	mov	r3, r8
    a7e6:	2b00      	cmp	r3, #0
    a7e8:	d030      	beq.n	a84c <printk+0x3c0>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    a7ea:	9b02      	ldr	r3, [sp, #8]
    a7ec:	4698      	mov	r8, r3
    a7ee:	e08a      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:548
					printk_putc('0', &count, info);
    a7f0:	9a00      	ldr	r2, [sp, #0]
    a7f2:	a90a      	add	r1, sp, #40	; 0x28
    a7f4:	2030      	movs	r0, #48	; 0x30
    a7f6:	f7ff fd09 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:549
					printk_putc('x', &count, info);
    a7fa:	9a00      	ldr	r2, [sp, #0]
    a7fc:	a90a      	add	r1, sp, #40	; 0x28
    a7fe:	2078      	movs	r0, #120	; 0x78
    a800:	f7ff fd04 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:551
					dschar = TRUE;
    a804:	46d8      	mov	r8, fp
    a806:	e7e3      	b.n	a7d0 <printk+0x344>
    a808:	0000b1c0 	.word	0x0000b1c0
    a80c:	0000b204 	.word	0x0000b204
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:556
				if (!IS_FLAG_MINUS(flags_used)) {
    a810:	07f3      	lsls	r3, r6, #31
    a812:	d4e4      	bmi.n	a7de <printk+0x352>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:557
					if (IS_FLAG_POUND(flags_used)) {
    a814:	2310      	movs	r3, #16
    a816:	4033      	ands	r3, r6
    a818:	4698      	mov	r8, r3
    a81a:	d002      	beq.n	a822 <printk+0x396>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:558
						vlen += 2;
    a81c:	2302      	movs	r3, #2
    a81e:	469c      	mov	ip, r3
    a820:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:560
					printk_pad_space(vlen, field_width, &count, info);
    a822:	9b00      	ldr	r3, [sp, #0]
    a824:	aa0a      	add	r2, sp, #40	; 0x28
    a826:	0021      	movs	r1, r4
    a828:	4648      	mov	r0, r9
    a82a:	f7ff fd55 	bl	a2d8 <printk_pad_space>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:561
					if (IS_FLAG_POUND(flags_used)) {
    a82e:	4643      	mov	r3, r8
    a830:	2b00      	cmp	r3, #0
    a832:	d0d4      	beq.n	a7de <printk+0x352>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:562
						printk_putc('0', &count, info);
    a834:	9a00      	ldr	r2, [sp, #0]
    a836:	a90a      	add	r1, sp, #40	; 0x28
    a838:	2030      	movs	r0, #48	; 0x30
    a83a:	f7ff fce7 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:563
						printk_putc('x', &count, info);
    a83e:	9a00      	ldr	r2, [sp, #0]
    a840:	a90a      	add	r1, sp, #40	; 0x28
    a842:	2078      	movs	r0, #120	; 0x78
    a844:	f7ff fce2 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:564
						dschar = TRUE;
    a848:	46d8      	mov	r8, fp
    a84a:	e7c8      	b.n	a7de <printk+0x352>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:570
				printk_putc('0', &count, info);
    a84c:	9a00      	ldr	r2, [sp, #0]
    a84e:	a90a      	add	r1, sp, #40	; 0x28
    a850:	2030      	movs	r0, #48	; 0x30
    a852:	f7ff fcdb 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:571
				printk_putc('x', &count, info);
    a856:	9a00      	ldr	r2, [sp, #0]
    a858:	a90a      	add	r1, sp, #40	; 0x28
    a85a:	2078      	movs	r0, #120	; 0x78
    a85c:	f7ff fcd6 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:572
				vlen += 2;
    a860:	2302      	movs	r3, #2
    a862:	469c      	mov	ip, r3
    a864:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    a866:	9b02      	ldr	r3, [sp, #8]
    a868:	4698      	mov	r8, r3
    a86a:	e04c      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:577
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg(ap, unsigned int);
    a86c:	4643      	mov	r3, r8
    a86e:	1d1f      	adds	r7, r3, #4
    a870:	681b      	ldr	r3, [r3, #0]
    a872:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:578
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
    a874:	2308      	movs	r3, #8
    a876:	2200      	movs	r2, #0
    a878:	a905      	add	r1, sp, #20
    a87a:	a80b      	add	r0, sp, #44	; 0x2c
    a87c:	f7ff fcdb 	bl	a236 <printk_mknumstr>
    a880:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:577
			uval = (unsigned int) va_arg(ap, unsigned int);
    a882:	46b8      	mov	r8, r7
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:594
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
    a884:	af0b      	add	r7, sp, #44	; 0x2c
    a886:	444f      	add	r7, r9
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:596

			if (IS_FLAG_ZERO(flags_used)) {
    a888:	0733      	lsls	r3, r6, #28
    a88a:	d42f      	bmi.n	a8ec <printk+0x460>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:600
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a88c:	07f3      	lsls	r3, r6, #31
    a88e:	d43a      	bmi.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:601
					printk_pad_space(vlen, field_width, &count, info);
    a890:	9b00      	ldr	r3, [sp, #0]
    a892:	aa0a      	add	r2, sp, #40	; 0x28
    a894:	0021      	movs	r1, r4
    a896:	4648      	mov	r0, r9
    a898:	f7ff fd1e 	bl	a2d8 <printk_pad_space>
    a89c:	e033      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:582
			uval = (unsigned int) va_arg(ap, unsigned int);
    a89e:	4643      	mov	r3, r8
    a8a0:	1d1f      	adds	r7, r3, #4
    a8a2:	681b      	ldr	r3, [r3, #0]
    a8a4:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:583
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
    a8a6:	2302      	movs	r3, #2
    a8a8:	2200      	movs	r2, #0
    a8aa:	a905      	add	r1, sp, #20
    a8ac:	a80b      	add	r0, sp, #44	; 0x2c
    a8ae:	f7ff fcc2 	bl	a236 <printk_mknumstr>
    a8b2:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:582
			uval = (unsigned int) va_arg(ap, unsigned int);
    a8b4:	46b8      	mov	r8, r7
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:584
			goto cont_u;
    a8b6:	e7e5      	b.n	a884 <printk+0x3f8>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:587
			uval = (unsigned int) va_arg(ap, void *);
    a8b8:	4643      	mov	r3, r8
    a8ba:	1d1f      	adds	r7, r3, #4
    a8bc:	681b      	ldr	r3, [r3, #0]
    a8be:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:588
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    a8c0:	2310      	movs	r3, #16
    a8c2:	2200      	movs	r2, #0
    a8c4:	a905      	add	r1, sp, #20
    a8c6:	a80b      	add	r0, sp, #44	; 0x2c
    a8c8:	f7ff fcb5 	bl	a236 <printk_mknumstr>
    a8cc:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:587
			uval = (unsigned int) va_arg(ap, void *);
    a8ce:	46b8      	mov	r8, r7
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:589
			goto cont_u;
    a8d0:	e7d8      	b.n	a884 <printk+0x3f8>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:591
			uval = (unsigned int) va_arg(ap, unsigned int);
    a8d2:	4643      	mov	r3, r8
    a8d4:	1d1f      	adds	r7, r3, #4
    a8d6:	681b      	ldr	r3, [r3, #0]
    a8d8:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:592
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
    a8da:	230a      	movs	r3, #10
    a8dc:	2200      	movs	r2, #0
    a8de:	a905      	add	r1, sp, #20
    a8e0:	a80b      	add	r0, sp, #44	; 0x2c
    a8e2:	f7ff fca8 	bl	a236 <printk_mknumstr>
    a8e6:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:591
			uval = (unsigned int) va_arg(ap, unsigned int);
    a8e8:	46b8      	mov	r8, r7
    a8ea:	e7cb      	b.n	a884 <printk+0x3f8>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:597
				printk_pad_zero(vlen, field_width, &count, info);
    a8ec:	9b00      	ldr	r3, [sp, #0]
    a8ee:	aa0a      	add	r2, sp, #40	; 0x28
    a8f0:	0021      	movs	r1, r4
    a8f2:	4648      	mov	r0, r9
    a8f4:	f7ff fce1 	bl	a2ba <printk_pad_zero>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:598
				vlen = field_width;
    a8f8:	46a1      	mov	r9, r4
    a8fa:	e004      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:606
				}
			}

			cont_xd: while (*vstrp)
				printk_putc(*vstrp--, &count, info);
    a8fc:	3f01      	subs	r7, #1
    a8fe:	9a00      	ldr	r2, [sp, #0]
    a900:	a90a      	add	r1, sp, #40	; 0x28
    a902:	f7ff fc83 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:605 (discriminator 1)
			cont_xd: while (*vstrp)
    a906:	2000      	movs	r0, #0
    a908:	5638      	ldrsb	r0, [r7, r0]
    a90a:	2800      	cmp	r0, #0
    a90c:	d1f6      	bne.n	a8fc <printk+0x470>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:608

			if (IS_FLAG_MINUS(flags_used)) {
    a90e:	07f3      	lsls	r3, r6, #31
    a910:	d400      	bmi.n	a914 <printk+0x488>
    a912:	e5df      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:609
				printk_pad_space(vlen, field_width, &count, info);
    a914:	9b00      	ldr	r3, [sp, #0]
    a916:	aa0a      	add	r2, sp, #40	; 0x28
    a918:	0021      	movs	r1, r4
    a91a:	4648      	mov	r0, r9
    a91c:	f7ff fcdc 	bl	a2d8 <printk_pad_space>
    a920:	e5d8      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    a922:	9b02      	ldr	r3, [sp, #8]
    a924:	4698      	mov	r8, r3
    a926:	e7ee      	b.n	a906 <printk+0x47a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:615
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg(ap, unsigned int);
    a928:	4643      	mov	r3, r8
    a92a:	1d1c      	adds	r4, r3, #4
    a92c:	2000      	movs	r0, #0
    a92e:	5618      	ldrsb	r0, [r3, r0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:616
			printk_putc(cval, &count, info);
    a930:	9a00      	ldr	r2, [sp, #0]
    a932:	a90a      	add	r1, sp, #40	; 0x28
    a934:	f7ff fc6a 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:615
			cval = (char) va_arg(ap, unsigned int);
    a938:	46a0      	mov	r8, r4
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:617
			break;
    a93a:	e5cb      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:619
		case 's':
			sval = (char *) va_arg(ap, char *);
    a93c:	4643      	mov	r3, r8
    a93e:	3304      	adds	r3, #4
    a940:	9302      	str	r3, [sp, #8]
    a942:	4643      	mov	r3, r8
    a944:	681f      	ldr	r7, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:620
			if (sval) {
    a946:	2f00      	cmp	r7, #0
    a948:	d044      	beq.n	a9d4 <printk+0x548>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:621
				vlen = strlen(sval);
    a94a:	0038      	movs	r0, r7
    a94c:	f7fe ff84 	bl	9858 <strlen>
    a950:	9003      	str	r0, [sp, #12]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:622
				if (!IS_FLAG_MINUS(flags_used)) {
    a952:	2301      	movs	r3, #1
    a954:	401e      	ands	r6, r3
    a956:	d013      	beq.n	a980 <printk+0x4f4>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:625
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
    a958:	464b      	mov	r3, r9
    a95a:	2b00      	cmp	r3, #0
    a95c:	d01b      	beq.n	a996 <printk+0x50a>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:627
				{
					while (*sval)
    a95e:	2000      	movs	r0, #0
    a960:	5638      	ldrsb	r0, [r7, r0]
    a962:	2800      	cmp	r0, #0
    a964:	d01b      	beq.n	a99e <printk+0x512>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:629
					{
						if(precision_width>=1)
    a966:	464b      	mov	r3, r9
    a968:	2b00      	cmp	r3, #0
    a96a:	ddf8      	ble.n	a95e <printk+0x4d2>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:631
						{
							precision_width--;
    a96c:	2301      	movs	r3, #1
    a96e:	425b      	negs	r3, r3
    a970:	469c      	mov	ip, r3
    a972:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:632
							printk_putc(*sval++, &count, info);
    a974:	3701      	adds	r7, #1
    a976:	9a00      	ldr	r2, [sp, #0]
    a978:	a90a      	add	r1, sp, #40	; 0x28
    a97a:	f7ff fc47 	bl	a20c <printk_putc>
    a97e:	e7ee      	b.n	a95e <printk+0x4d2>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:623
					printk_pad_space(vlen, field_width, &count, info);
    a980:	9b00      	ldr	r3, [sp, #0]
    a982:	aa0a      	add	r2, sp, #40	; 0x28
    a984:	0021      	movs	r1, r4
    a986:	f7ff fca7 	bl	a2d8 <printk_pad_space>
    a98a:	e7e5      	b.n	a958 <printk+0x4cc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:639
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
					   printk_putc(*sval++, &count, info);
    a98c:	3701      	adds	r7, #1
    a98e:	9a00      	ldr	r2, [sp, #0]
    a990:	a90a      	add	r1, sp, #40	; 0x28
    a992:	f7ff fc3b 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:638
					while (*sval)
    a996:	2000      	movs	r0, #0
    a998:	5638      	ldrsb	r0, [r7, r0]
    a99a:	2800      	cmp	r0, #0
    a99c:	d1f6      	bne.n	a98c <printk+0x500>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:641
				}
				if (IS_FLAG_MINUS(flags_used)) {
    a99e:	2e00      	cmp	r6, #0
    a9a0:	d102      	bne.n	a9a8 <printk+0x51c>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    a9a2:	9b02      	ldr	r3, [sp, #8]
    a9a4:	4698      	mov	r8, r3
    a9a6:	e595      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:642
					printk_pad_space(vlen, field_width, &count, info);
    a9a8:	9b00      	ldr	r3, [sp, #0]
    a9aa:	aa0a      	add	r2, sp, #40	; 0x28
    a9ac:	0021      	movs	r1, r4
    a9ae:	9803      	ldr	r0, [sp, #12]
    a9b0:	f7ff fc92 	bl	a2d8 <printk_pad_space>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    a9b4:	9b02      	ldr	r3, [sp, #8]
    a9b6:	4698      	mov	r8, r3
    a9b8:	e58c      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:647
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg(ap, int *);
    a9ba:	4643      	mov	r3, r8
    a9bc:	681b      	ldr	r3, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:648
			*ivalp = count;
    a9be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a9c0:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:647
			ivalp = (int *) va_arg(ap, int *);
    a9c2:	2304      	movs	r3, #4
    a9c4:	469c      	mov	ip, r3
    a9c6:	44e0      	add	r8, ip
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:649
			break;
    a9c8:	e584      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:652

		default:
			printk_putc(c, &count, info);
    a9ca:	9a00      	ldr	r2, [sp, #0]
    a9cc:	a90a      	add	r1, sp, #40	; 0x28
    a9ce:	f7ff fc1d 	bl	a20c <printk_putc>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:653
			break;
    a9d2:	e57f      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    a9d4:	9b02      	ldr	r3, [sp, #8]
    a9d6:	4698      	mov	r8, r3
    a9d8:	e57c      	b.n	a4d4 <printk+0x48>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:657
		}
	}
	return count;
}
    a9da:	980a      	ldr	r0, [sp, #40]	; 0x28
    a9dc:	b015      	add	sp, #84	; 0x54
    a9de:	bc3c      	pop	{r2, r3, r4, r5}
    a9e0:	4690      	mov	r8, r2
    a9e2:	4699      	mov	r9, r3
    a9e4:	46a2      	mov	sl, r4
    a9e6:	46ab      	mov	fp, r5
    a9e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a9ea:	46c0      	nop			; (mov r8, r8)

0000a9ec <myprintf>:
myprintf():
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:665
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
    a9ec:	b40f      	push	{r0, r1, r2, r3}
    a9ee:	b500      	push	{lr}
    a9f0:	b085      	sub	sp, #20
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:669
	char * ap;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
    a9f2:	2301      	movs	r3, #1
    a9f4:	9301      	str	r3, [sp, #4]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:670
	info.func = &out_char;     //调用的串口输出函数
    a9f6:	4b05      	ldr	r3, [pc, #20]	; (aa0c <myprintf+0x20>)
    a9f8:	9302      	str	r3, [sp, #8]
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:673
	//对ap 进行初始化，让它指向可变参数表里面的第一个参数
	va_start(ap, fmt); 
	rvalue = printk(&info, fmt, ap);
    a9fa:	aa06      	add	r2, sp, #24
    a9fc:	ca02      	ldmia	r2!, {r1}
    a9fe:	a801      	add	r0, sp, #4
    aa00:	f7ff fd44 	bl	a48c <printk>
D:\app_for_qianrushi\exam\18\Debug/srcc/printf.c:678

	va_end(ap);

	return rvalue;
}
    aa04:	b005      	add	sp, #20
    aa06:	bc08      	pop	{r3}
    aa08:	b004      	add	sp, #16
    aa0a:	4718      	bx	r3
    aa0c:	0000a2f7 	.word	0x0000a2f7

0000aa10 <log>:
log():
    aa10:	b5f0      	push	{r4, r5, r6, r7, lr}
    aa12:	46c6      	mov	lr, r8
    aa14:	b500      	push	{lr}
    aa16:	b08c      	sub	sp, #48	; 0x30
    aa18:	0004      	movs	r4, r0
    aa1a:	000d      	movs	r5, r1
    aa1c:	f000 f880 	bl	ab20 <__ieee754_log>
    aa20:	4b3a      	ldr	r3, [pc, #232]	; (ab0c <log+0xfc>)
    aa22:	0006      	movs	r6, r0
    aa24:	781b      	ldrb	r3, [r3, #0]
    aa26:	000f      	movs	r7, r1
    aa28:	b25b      	sxtb	r3, r3
    aa2a:	4698      	mov	r8, r3
    aa2c:	3301      	adds	r3, #1
    aa2e:	d00f      	beq.n	aa50 <log+0x40>
    aa30:	0022      	movs	r2, r4
    aa32:	002b      	movs	r3, r5
    aa34:	0020      	movs	r0, r4
    aa36:	0029      	movs	r1, r5
    aa38:	f7fe fd50 	bl	94dc <__aeabi_dcmpun>
    aa3c:	2800      	cmp	r0, #0
    aa3e:	d107      	bne.n	aa50 <log+0x40>
    aa40:	2200      	movs	r2, #0
    aa42:	2300      	movs	r3, #0
    aa44:	0020      	movs	r0, r4
    aa46:	0029      	movs	r1, r5
    aa48:	f7fc face 	bl	6fe8 <__aeabi_dcmpgt>
    aa4c:	2800      	cmp	r0, #0
    aa4e:	d005      	beq.n	aa5c <log+0x4c>
    aa50:	0030      	movs	r0, r6
    aa52:	0039      	movs	r1, r7
    aa54:	b00c      	add	sp, #48	; 0x30
    aa56:	bc04      	pop	{r2}
    aa58:	4690      	mov	r8, r2
    aa5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aa5c:	4b2c      	ldr	r3, [pc, #176]	; (ab10 <log+0x100>)
    aa5e:	900a      	str	r0, [sp, #40]	; 0x28
    aa60:	9303      	str	r3, [sp, #12]
    aa62:	4643      	mov	r3, r8
    aa64:	9404      	str	r4, [sp, #16]
    aa66:	9505      	str	r5, [sp, #20]
    aa68:	9406      	str	r4, [sp, #24]
    aa6a:	9507      	str	r5, [sp, #28]
    aa6c:	2b00      	cmp	r3, #0
    aa6e:	d11a      	bne.n	aaa6 <log+0x96>
    aa70:	22e0      	movs	r2, #224	; 0xe0
    aa72:	4b28      	ldr	r3, [pc, #160]	; (ab14 <log+0x104>)
    aa74:	0612      	lsls	r2, r2, #24
    aa76:	9208      	str	r2, [sp, #32]
    aa78:	9309      	str	r3, [sp, #36]	; 0x24
    aa7a:	0020      	movs	r0, r4
    aa7c:	2200      	movs	r2, #0
    aa7e:	2300      	movs	r3, #0
    aa80:	0029      	movs	r1, r5
    aa82:	f7fc fa97 	bl	6fb4 <__aeabi_dcmpeq>
    aa86:	2800      	cmp	r0, #0
    aa88:	d038      	beq.n	aafc <log+0xec>
    aa8a:	2302      	movs	r3, #2
    aa8c:	9302      	str	r3, [sp, #8]
    aa8e:	a802      	add	r0, sp, #8
    aa90:	f000 fa1c 	bl	aecc <matherr>
    aa94:	2800      	cmp	r0, #0
    aa96:	d017      	beq.n	aac8 <log+0xb8>
    aa98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    aa9a:	9301      	str	r3, [sp, #4]
    aa9c:	2b00      	cmp	r3, #0
    aa9e:	d118      	bne.n	aad2 <log+0xc2>
    aaa0:	9e08      	ldr	r6, [sp, #32]
    aaa2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    aaa4:	e7d4      	b.n	aa50 <log+0x40>
    aaa6:	2200      	movs	r2, #0
    aaa8:	4b1b      	ldr	r3, [pc, #108]	; (ab18 <log+0x108>)
    aaaa:	0020      	movs	r0, r4
    aaac:	9208      	str	r2, [sp, #32]
    aaae:	9309      	str	r3, [sp, #36]	; 0x24
    aab0:	0029      	movs	r1, r5
    aab2:	2200      	movs	r2, #0
    aab4:	2300      	movs	r3, #0
    aab6:	f7fc fa7d 	bl	6fb4 <__aeabi_dcmpeq>
    aaba:	2800      	cmp	r0, #0
    aabc:	d00f      	beq.n	aade <log+0xce>
    aabe:	2302      	movs	r3, #2
    aac0:	9302      	str	r3, [sp, #8]
    aac2:	4643      	mov	r3, r8
    aac4:	2b02      	cmp	r3, #2
    aac6:	d1e2      	bne.n	aa8e <log+0x7e>
    aac8:	f000 fa08 	bl	aedc <__errno>
    aacc:	2322      	movs	r3, #34	; 0x22
    aace:	6003      	str	r3, [r0, #0]
    aad0:	e7e2      	b.n	aa98 <log+0x88>
    aad2:	f000 fa03 	bl	aedc <__errno>
    aad6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    aad8:	9301      	str	r3, [sp, #4]
    aada:	6003      	str	r3, [r0, #0]
    aadc:	e7e0      	b.n	aaa0 <log+0x90>
    aade:	2301      	movs	r3, #1
    aae0:	9302      	str	r3, [sp, #8]
    aae2:	4643      	mov	r3, r8
    aae4:	2b02      	cmp	r3, #2
    aae6:	d10b      	bne.n	ab00 <log+0xf0>
    aae8:	f000 f9f8 	bl	aedc <__errno>
    aaec:	2321      	movs	r3, #33	; 0x21
    aaee:	6003      	str	r3, [r0, #0]
    aaf0:	480a      	ldr	r0, [pc, #40]	; (ab1c <log+0x10c>)
    aaf2:	f000 f9ed 	bl	aed0 <nan>
    aaf6:	9008      	str	r0, [sp, #32]
    aaf8:	9109      	str	r1, [sp, #36]	; 0x24
    aafa:	e7cd      	b.n	aa98 <log+0x88>
    aafc:	2301      	movs	r3, #1
    aafe:	9302      	str	r3, [sp, #8]
    ab00:	a802      	add	r0, sp, #8
    ab02:	f000 f9e3 	bl	aecc <matherr>
    ab06:	2800      	cmp	r0, #0
    ab08:	d1f2      	bne.n	aaf0 <log+0xe0>
    ab0a:	e7ed      	b.n	aae8 <log+0xd8>
    ab0c:	20000416 	.word	0x20000416
    ab10:	0000b288 	.word	0x0000b288
    ab14:	c7efffff 	.word	0xc7efffff
    ab18:	fff00000 	.word	0xfff00000
    ab1c:	0000b188 	.word	0x0000b188

0000ab20 <__ieee754_log>:
__ieee754_log():
    ab20:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab22:	46d6      	mov	lr, sl
    ab24:	464f      	mov	r7, r9
    ab26:	4646      	mov	r6, r8
    ab28:	b5c0      	push	{r6, r7, lr}
    ab2a:	4aca      	ldr	r2, [pc, #808]	; (ae54 <__ieee754_log+0x334>)
    ab2c:	b086      	sub	sp, #24
    ab2e:	000b      	movs	r3, r1
    ab30:	4291      	cmp	r1, r2
    ab32:	dd00      	ble.n	ab36 <__ieee754_log+0x16>
    ab34:	e0cc      	b.n	acd0 <__ieee754_log+0x1b0>
    ab36:	004a      	lsls	r2, r1, #1
    ab38:	0852      	lsrs	r2, r2, #1
    ab3a:	4302      	orrs	r2, r0
    ab3c:	d100      	bne.n	ab40 <__ieee754_log+0x20>
    ab3e:	e0d6      	b.n	acee <__ieee754_log+0x1ce>
    ab40:	2900      	cmp	r1, #0
    ab42:	da00      	bge.n	ab46 <__ieee754_log+0x26>
    ab44:	e0e6      	b.n	ad14 <__ieee754_log+0x1f4>
    ab46:	4bc4      	ldr	r3, [pc, #784]	; (ae58 <__ieee754_log+0x338>)
    ab48:	2200      	movs	r2, #0
    ab4a:	f7fd ff0d 	bl	8968 <__aeabi_dmul>
    ab4e:	2536      	movs	r5, #54	; 0x36
    ab50:	4cc2      	ldr	r4, [pc, #776]	; (ae5c <__ieee754_log+0x33c>)
    ab52:	000b      	movs	r3, r1
    ab54:	426d      	negs	r5, r5
    ab56:	42a3      	cmp	r3, r4
    ab58:	dd00      	ble.n	ab5c <__ieee754_log+0x3c>
    ab5a:	e0be      	b.n	acda <__ieee754_log+0x1ba>
    ab5c:	151a      	asrs	r2, r3, #20
    ab5e:	4cc0      	ldr	r4, [pc, #768]	; (ae60 <__ieee754_log+0x340>)
    ab60:	031b      	lsls	r3, r3, #12
    ab62:	0b1b      	lsrs	r3, r3, #12
    ab64:	4698      	mov	r8, r3
    ab66:	46a4      	mov	ip, r4
    ab68:	2480      	movs	r4, #128	; 0x80
    ab6a:	4bbe      	ldr	r3, [pc, #760]	; (ae64 <__ieee754_log+0x344>)
    ab6c:	0364      	lsls	r4, r4, #13
    ab6e:	4443      	add	r3, r8
    ab70:	4023      	ands	r3, r4
    ab72:	4cbd      	ldr	r4, [pc, #756]	; (ae68 <__ieee754_log+0x348>)
    ab74:	4462      	add	r2, ip
    ab76:	1952      	adds	r2, r2, r5
    ab78:	405c      	eors	r4, r3
    ab7a:	4645      	mov	r5, r8
    ab7c:	151b      	asrs	r3, r3, #20
    ab7e:	4699      	mov	r9, r3
    ab80:	4325      	orrs	r5, r4
    ab82:	4bb9      	ldr	r3, [pc, #740]	; (ae68 <__ieee754_log+0x348>)
    ab84:	0029      	movs	r1, r5
    ab86:	4491      	add	r9, r2
    ab88:	2200      	movs	r2, #0
    ab8a:	f7fe f95f 	bl	8e4c <__aeabi_dsub>
    ab8e:	4643      	mov	r3, r8
    ab90:	3302      	adds	r3, #2
    ab92:	031b      	lsls	r3, r3, #12
    ab94:	0006      	movs	r6, r0
    ab96:	000f      	movs	r7, r1
    ab98:	0b1b      	lsrs	r3, r3, #12
    ab9a:	2200      	movs	r2, #0
    ab9c:	2b02      	cmp	r3, #2
    ab9e:	dc00      	bgt.n	aba2 <__ieee754_log+0x82>
    aba0:	e0ac      	b.n	acfc <__ieee754_log+0x1dc>
    aba2:	2380      	movs	r3, #128	; 0x80
    aba4:	05db      	lsls	r3, r3, #23
    aba6:	f7fc ffb9 	bl	7b1c <__aeabi_dadd>
    abaa:	0002      	movs	r2, r0
    abac:	000b      	movs	r3, r1
    abae:	0030      	movs	r0, r6
    abb0:	0039      	movs	r1, r7
    abb2:	f7fd facf 	bl	8154 <__aeabi_ddiv>
    abb6:	0004      	movs	r4, r0
    abb8:	4648      	mov	r0, r9
    abba:	000d      	movs	r5, r1
    abbc:	f7fe fce0 	bl	9580 <__aeabi_i2d>
    abc0:	0022      	movs	r2, r4
    abc2:	9000      	str	r0, [sp, #0]
    abc4:	9101      	str	r1, [sp, #4]
    abc6:	002b      	movs	r3, r5
    abc8:	0020      	movs	r0, r4
    abca:	0029      	movs	r1, r5
    abcc:	9404      	str	r4, [sp, #16]
    abce:	9505      	str	r5, [sp, #20]
    abd0:	f7fd feca 	bl	8968 <__aeabi_dmul>
    abd4:	000d      	movs	r5, r1
    abd6:	0004      	movs	r4, r0
    abd8:	49a4      	ldr	r1, [pc, #656]	; (ae6c <__ieee754_log+0x34c>)
    abda:	0022      	movs	r2, r4
    abdc:	4441      	add	r1, r8
    abde:	002b      	movs	r3, r5
    abe0:	468a      	mov	sl, r1
    abe2:	0020      	movs	r0, r4
    abe4:	0029      	movs	r1, r5
    abe6:	9402      	str	r4, [sp, #8]
    abe8:	9503      	str	r5, [sp, #12]
    abea:	f7fd febd 	bl	8968 <__aeabi_dmul>
    abee:	0004      	movs	r4, r0
    abf0:	000d      	movs	r5, r1
    abf2:	4a9f      	ldr	r2, [pc, #636]	; (ae70 <__ieee754_log+0x350>)
    abf4:	4b9f      	ldr	r3, [pc, #636]	; (ae74 <__ieee754_log+0x354>)
    abf6:	f7fd feb7 	bl	8968 <__aeabi_dmul>
    abfa:	4a9f      	ldr	r2, [pc, #636]	; (ae78 <__ieee754_log+0x358>)
    abfc:	4b9f      	ldr	r3, [pc, #636]	; (ae7c <__ieee754_log+0x35c>)
    abfe:	f7fc ff8d 	bl	7b1c <__aeabi_dadd>
    ac02:	0022      	movs	r2, r4
    ac04:	002b      	movs	r3, r5
    ac06:	f7fd feaf 	bl	8968 <__aeabi_dmul>
    ac0a:	4a9d      	ldr	r2, [pc, #628]	; (ae80 <__ieee754_log+0x360>)
    ac0c:	4b9d      	ldr	r3, [pc, #628]	; (ae84 <__ieee754_log+0x364>)
    ac0e:	f7fc ff85 	bl	7b1c <__aeabi_dadd>
    ac12:	0022      	movs	r2, r4
    ac14:	002b      	movs	r3, r5
    ac16:	f7fd fea7 	bl	8968 <__aeabi_dmul>
    ac1a:	4a9b      	ldr	r2, [pc, #620]	; (ae88 <__ieee754_log+0x368>)
    ac1c:	4b9b      	ldr	r3, [pc, #620]	; (ae8c <__ieee754_log+0x36c>)
    ac1e:	f7fc ff7d 	bl	7b1c <__aeabi_dadd>
    ac22:	9a02      	ldr	r2, [sp, #8]
    ac24:	9b03      	ldr	r3, [sp, #12]
    ac26:	f7fd fe9f 	bl	8968 <__aeabi_dmul>
    ac2a:	4a99      	ldr	r2, [pc, #612]	; (ae90 <__ieee754_log+0x370>)
    ac2c:	9002      	str	r0, [sp, #8]
    ac2e:	9103      	str	r1, [sp, #12]
    ac30:	4b98      	ldr	r3, [pc, #608]	; (ae94 <__ieee754_log+0x374>)
    ac32:	0020      	movs	r0, r4
    ac34:	0029      	movs	r1, r5
    ac36:	f7fd fe97 	bl	8968 <__aeabi_dmul>
    ac3a:	4a97      	ldr	r2, [pc, #604]	; (ae98 <__ieee754_log+0x378>)
    ac3c:	4b97      	ldr	r3, [pc, #604]	; (ae9c <__ieee754_log+0x37c>)
    ac3e:	f7fc ff6d 	bl	7b1c <__aeabi_dadd>
    ac42:	0022      	movs	r2, r4
    ac44:	002b      	movs	r3, r5
    ac46:	f7fd fe8f 	bl	8968 <__aeabi_dmul>
    ac4a:	4a95      	ldr	r2, [pc, #596]	; (aea0 <__ieee754_log+0x380>)
    ac4c:	4b95      	ldr	r3, [pc, #596]	; (aea4 <__ieee754_log+0x384>)
    ac4e:	f7fc ff65 	bl	7b1c <__aeabi_dadd>
    ac52:	0022      	movs	r2, r4
    ac54:	002b      	movs	r3, r5
    ac56:	f7fd fe87 	bl	8968 <__aeabi_dmul>
    ac5a:	000b      	movs	r3, r1
    ac5c:	0002      	movs	r2, r0
    ac5e:	9802      	ldr	r0, [sp, #8]
    ac60:	9903      	ldr	r1, [sp, #12]
    ac62:	f7fc ff5b 	bl	7b1c <__aeabi_dadd>
    ac66:	000d      	movs	r5, r1
    ac68:	4641      	mov	r1, r8
    ac6a:	4b8f      	ldr	r3, [pc, #572]	; (aea8 <__ieee754_log+0x388>)
    ac6c:	0004      	movs	r4, r0
    ac6e:	1a5b      	subs	r3, r3, r1
    ac70:	4651      	mov	r1, sl
    ac72:	430b      	orrs	r3, r1
    ac74:	2b00      	cmp	r3, #0
    ac76:	dc00      	bgt.n	ac7a <__ieee754_log+0x15a>
    ac78:	e095      	b.n	ada6 <__ieee754_log+0x286>
    ac7a:	2200      	movs	r2, #0
    ac7c:	4b8b      	ldr	r3, [pc, #556]	; (aeac <__ieee754_log+0x38c>)
    ac7e:	0030      	movs	r0, r6
    ac80:	0039      	movs	r1, r7
    ac82:	f7fd fe71 	bl	8968 <__aeabi_dmul>
    ac86:	0032      	movs	r2, r6
    ac88:	003b      	movs	r3, r7
    ac8a:	f7fd fe6d 	bl	8968 <__aeabi_dmul>
    ac8e:	000a      	movs	r2, r1
    ac90:	0001      	movs	r1, r0
    ac92:	0013      	movs	r3, r2
    ac94:	9102      	str	r1, [sp, #8]
    ac96:	9203      	str	r2, [sp, #12]
    ac98:	0002      	movs	r2, r0
    ac9a:	0029      	movs	r1, r5
    ac9c:	0020      	movs	r0, r4
    ac9e:	f7fc ff3d 	bl	7b1c <__aeabi_dadd>
    aca2:	9a04      	ldr	r2, [sp, #16]
    aca4:	9b05      	ldr	r3, [sp, #20]
    aca6:	f7fd fe5f 	bl	8968 <__aeabi_dmul>
    acaa:	464b      	mov	r3, r9
    acac:	0004      	movs	r4, r0
    acae:	000d      	movs	r5, r1
    acb0:	2b00      	cmp	r3, #0
    acb2:	d000      	beq.n	acb6 <__ieee754_log+0x196>
    acb4:	e08d      	b.n	add2 <__ieee754_log+0x2b2>
    acb6:	0002      	movs	r2, r0
    acb8:	000b      	movs	r3, r1
    acba:	9802      	ldr	r0, [sp, #8]
    acbc:	9903      	ldr	r1, [sp, #12]
    acbe:	f7fe f8c5 	bl	8e4c <__aeabi_dsub>
    acc2:	0002      	movs	r2, r0
    acc4:	000b      	movs	r3, r1
    acc6:	0030      	movs	r0, r6
    acc8:	0039      	movs	r1, r7
    acca:	f7fe f8bf 	bl	8e4c <__aeabi_dsub>
    acce:	e008      	b.n	ace2 <__ieee754_log+0x1c2>
    acd0:	4c62      	ldr	r4, [pc, #392]	; (ae5c <__ieee754_log+0x33c>)
    acd2:	2500      	movs	r5, #0
    acd4:	42a3      	cmp	r3, r4
    acd6:	dc00      	bgt.n	acda <__ieee754_log+0x1ba>
    acd8:	e740      	b.n	ab5c <__ieee754_log+0x3c>
    acda:	0002      	movs	r2, r0
    acdc:	000b      	movs	r3, r1
    acde:	f7fc ff1d 	bl	7b1c <__aeabi_dadd>
    ace2:	b006      	add	sp, #24
    ace4:	bc1c      	pop	{r2, r3, r4}
    ace6:	4690      	mov	r8, r2
    ace8:	4699      	mov	r9, r3
    acea:	46a2      	mov	sl, r4
    acec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    acee:	2200      	movs	r2, #0
    acf0:	2300      	movs	r3, #0
    acf2:	2000      	movs	r0, #0
    acf4:	496e      	ldr	r1, [pc, #440]	; (aeb0 <__ieee754_log+0x390>)
    acf6:	f7fd fa2d 	bl	8154 <__aeabi_ddiv>
    acfa:	e7f2      	b.n	ace2 <__ieee754_log+0x1c2>
    acfc:	2300      	movs	r3, #0
    acfe:	f7fc f959 	bl	6fb4 <__aeabi_dcmpeq>
    ad02:	2800      	cmp	r0, #0
    ad04:	d00e      	beq.n	ad24 <__ieee754_log+0x204>
    ad06:	464b      	mov	r3, r9
    ad08:	2b00      	cmp	r3, #0
    ad0a:	d000      	beq.n	ad0e <__ieee754_log+0x1ee>
    ad0c:	e084      	b.n	ae18 <__ieee754_log+0x2f8>
    ad0e:	2000      	movs	r0, #0
    ad10:	2100      	movs	r1, #0
    ad12:	e7e6      	b.n	ace2 <__ieee754_log+0x1c2>
    ad14:	0002      	movs	r2, r0
    ad16:	f7fe f899 	bl	8e4c <__aeabi_dsub>
    ad1a:	2200      	movs	r2, #0
    ad1c:	2300      	movs	r3, #0
    ad1e:	f7fd fa19 	bl	8154 <__aeabi_ddiv>
    ad22:	e7de      	b.n	ace2 <__ieee754_log+0x1c2>
    ad24:	4a63      	ldr	r2, [pc, #396]	; (aeb4 <__ieee754_log+0x394>)
    ad26:	4b64      	ldr	r3, [pc, #400]	; (aeb8 <__ieee754_log+0x398>)
    ad28:	0030      	movs	r0, r6
    ad2a:	0039      	movs	r1, r7
    ad2c:	f7fd fe1c 	bl	8968 <__aeabi_dmul>
    ad30:	0002      	movs	r2, r0
    ad32:	000b      	movs	r3, r1
    ad34:	2000      	movs	r0, #0
    ad36:	495d      	ldr	r1, [pc, #372]	; (aeac <__ieee754_log+0x38c>)
    ad38:	f7fe f888 	bl	8e4c <__aeabi_dsub>
    ad3c:	0032      	movs	r2, r6
    ad3e:	0004      	movs	r4, r0
    ad40:	000d      	movs	r5, r1
    ad42:	003b      	movs	r3, r7
    ad44:	0030      	movs	r0, r6
    ad46:	0039      	movs	r1, r7
    ad48:	f7fd fe0e 	bl	8968 <__aeabi_dmul>
    ad4c:	000b      	movs	r3, r1
    ad4e:	0002      	movs	r2, r0
    ad50:	0029      	movs	r1, r5
    ad52:	0020      	movs	r0, r4
    ad54:	f7fd fe08 	bl	8968 <__aeabi_dmul>
    ad58:	464b      	mov	r3, r9
    ad5a:	0004      	movs	r4, r0
    ad5c:	000d      	movs	r5, r1
    ad5e:	2b00      	cmp	r3, #0
    ad60:	d030      	beq.n	adc4 <__ieee754_log+0x2a4>
    ad62:	4648      	mov	r0, r9
    ad64:	f7fe fc0c 	bl	9580 <__aeabi_i2d>
    ad68:	9000      	str	r0, [sp, #0]
    ad6a:	9101      	str	r1, [sp, #4]
    ad6c:	4a53      	ldr	r2, [pc, #332]	; (aebc <__ieee754_log+0x39c>)
    ad6e:	4b54      	ldr	r3, [pc, #336]	; (aec0 <__ieee754_log+0x3a0>)
    ad70:	f7fd fdfa 	bl	8968 <__aeabi_dmul>
    ad74:	4a53      	ldr	r2, [pc, #332]	; (aec4 <__ieee754_log+0x3a4>)
    ad76:	9002      	str	r0, [sp, #8]
    ad78:	9103      	str	r1, [sp, #12]
    ad7a:	9800      	ldr	r0, [sp, #0]
    ad7c:	9901      	ldr	r1, [sp, #4]
    ad7e:	4b52      	ldr	r3, [pc, #328]	; (aec8 <__ieee754_log+0x3a8>)
    ad80:	f7fd fdf2 	bl	8968 <__aeabi_dmul>
    ad84:	0002      	movs	r2, r0
    ad86:	000b      	movs	r3, r1
    ad88:	0020      	movs	r0, r4
    ad8a:	0029      	movs	r1, r5
    ad8c:	f7fe f85e 	bl	8e4c <__aeabi_dsub>
    ad90:	0032      	movs	r2, r6
    ad92:	003b      	movs	r3, r7
    ad94:	f7fe f85a 	bl	8e4c <__aeabi_dsub>
    ad98:	0002      	movs	r2, r0
    ad9a:	000b      	movs	r3, r1
    ad9c:	9802      	ldr	r0, [sp, #8]
    ad9e:	9903      	ldr	r1, [sp, #12]
    ada0:	f7fe f854 	bl	8e4c <__aeabi_dsub>
    ada4:	e79d      	b.n	ace2 <__ieee754_log+0x1c2>
    ada6:	0022      	movs	r2, r4
    ada8:	002b      	movs	r3, r5
    adaa:	0030      	movs	r0, r6
    adac:	0039      	movs	r1, r7
    adae:	f7fe f84d 	bl	8e4c <__aeabi_dsub>
    adb2:	9a04      	ldr	r2, [sp, #16]
    adb4:	9b05      	ldr	r3, [sp, #20]
    adb6:	f7fd fdd7 	bl	8968 <__aeabi_dmul>
    adba:	464b      	mov	r3, r9
    adbc:	0004      	movs	r4, r0
    adbe:	000d      	movs	r5, r1
    adc0:	2b00      	cmp	r3, #0
    adc2:	d141      	bne.n	ae48 <__ieee754_log+0x328>
    adc4:	0022      	movs	r2, r4
    adc6:	002b      	movs	r3, r5
    adc8:	0030      	movs	r0, r6
    adca:	0039      	movs	r1, r7
    adcc:	f7fe f83e 	bl	8e4c <__aeabi_dsub>
    add0:	e787      	b.n	ace2 <__ieee754_log+0x1c2>
    add2:	4a3a      	ldr	r2, [pc, #232]	; (aebc <__ieee754_log+0x39c>)
    add4:	4b3a      	ldr	r3, [pc, #232]	; (aec0 <__ieee754_log+0x3a0>)
    add6:	9800      	ldr	r0, [sp, #0]
    add8:	9901      	ldr	r1, [sp, #4]
    adda:	f7fd fdc5 	bl	8968 <__aeabi_dmul>
    adde:	4a39      	ldr	r2, [pc, #228]	; (aec4 <__ieee754_log+0x3a4>)
    ade0:	9004      	str	r0, [sp, #16]
    ade2:	9105      	str	r1, [sp, #20]
    ade4:	9800      	ldr	r0, [sp, #0]
    ade6:	9901      	ldr	r1, [sp, #4]
    ade8:	4b37      	ldr	r3, [pc, #220]	; (aec8 <__ieee754_log+0x3a8>)
    adea:	f7fd fdbd 	bl	8968 <__aeabi_dmul>
    adee:	0022      	movs	r2, r4
    adf0:	002b      	movs	r3, r5
    adf2:	f7fc fe93 	bl	7b1c <__aeabi_dadd>
    adf6:	0002      	movs	r2, r0
    adf8:	000b      	movs	r3, r1
    adfa:	9802      	ldr	r0, [sp, #8]
    adfc:	9903      	ldr	r1, [sp, #12]
    adfe:	f7fe f825 	bl	8e4c <__aeabi_dsub>
    ae02:	0032      	movs	r2, r6
    ae04:	003b      	movs	r3, r7
    ae06:	f7fe f821 	bl	8e4c <__aeabi_dsub>
    ae0a:	0002      	movs	r2, r0
    ae0c:	000b      	movs	r3, r1
    ae0e:	9804      	ldr	r0, [sp, #16]
    ae10:	9905      	ldr	r1, [sp, #20]
    ae12:	f7fe f81b 	bl	8e4c <__aeabi_dsub>
    ae16:	e764      	b.n	ace2 <__ieee754_log+0x1c2>
    ae18:	4648      	mov	r0, r9
    ae1a:	f7fe fbb1 	bl	9580 <__aeabi_i2d>
    ae1e:	4a27      	ldr	r2, [pc, #156]	; (aebc <__ieee754_log+0x39c>)
    ae20:	4b27      	ldr	r3, [pc, #156]	; (aec0 <__ieee754_log+0x3a0>)
    ae22:	0004      	movs	r4, r0
    ae24:	000d      	movs	r5, r1
    ae26:	f7fd fd9f 	bl	8968 <__aeabi_dmul>
    ae2a:	4a26      	ldr	r2, [pc, #152]	; (aec4 <__ieee754_log+0x3a4>)
    ae2c:	0006      	movs	r6, r0
    ae2e:	000f      	movs	r7, r1
    ae30:	4b25      	ldr	r3, [pc, #148]	; (aec8 <__ieee754_log+0x3a8>)
    ae32:	0020      	movs	r0, r4
    ae34:	0029      	movs	r1, r5
    ae36:	f7fd fd97 	bl	8968 <__aeabi_dmul>
    ae3a:	0002      	movs	r2, r0
    ae3c:	000b      	movs	r3, r1
    ae3e:	0030      	movs	r0, r6
    ae40:	0039      	movs	r1, r7
    ae42:	f7fc fe6b 	bl	7b1c <__aeabi_dadd>
    ae46:	e74c      	b.n	ace2 <__ieee754_log+0x1c2>
    ae48:	4a1c      	ldr	r2, [pc, #112]	; (aebc <__ieee754_log+0x39c>)
    ae4a:	4b1d      	ldr	r3, [pc, #116]	; (aec0 <__ieee754_log+0x3a0>)
    ae4c:	9800      	ldr	r0, [sp, #0]
    ae4e:	9901      	ldr	r1, [sp, #4]
    ae50:	e78e      	b.n	ad70 <__ieee754_log+0x250>
    ae52:	46c0      	nop			; (mov r8, r8)
    ae54:	000fffff 	.word	0x000fffff
    ae58:	43500000 	.word	0x43500000
    ae5c:	7fefffff 	.word	0x7fefffff
    ae60:	fffffc01 	.word	0xfffffc01
    ae64:	00095f64 	.word	0x00095f64
    ae68:	3ff00000 	.word	0x3ff00000
    ae6c:	fff9eb86 	.word	0xfff9eb86
    ae70:	df3e5244 	.word	0xdf3e5244
    ae74:	3fc2f112 	.word	0x3fc2f112
    ae78:	96cb03de 	.word	0x96cb03de
    ae7c:	3fc74664 	.word	0x3fc74664
    ae80:	94229359 	.word	0x94229359
    ae84:	3fd24924 	.word	0x3fd24924
    ae88:	55555593 	.word	0x55555593
    ae8c:	3fe55555 	.word	0x3fe55555
    ae90:	d078c69f 	.word	0xd078c69f
    ae94:	3fc39a09 	.word	0x3fc39a09
    ae98:	1d8e78af 	.word	0x1d8e78af
    ae9c:	3fcc71c5 	.word	0x3fcc71c5
    aea0:	9997fa04 	.word	0x9997fa04
    aea4:	3fd99999 	.word	0x3fd99999
    aea8:	0006b851 	.word	0x0006b851
    aeac:	3fe00000 	.word	0x3fe00000
    aeb0:	c3500000 	.word	0xc3500000
    aeb4:	55555555 	.word	0x55555555
    aeb8:	3fd55555 	.word	0x3fd55555
    aebc:	fee00000 	.word	0xfee00000
    aec0:	3fe62e42 	.word	0x3fe62e42
    aec4:	35793c76 	.word	0x35793c76
    aec8:	3dea39ef 	.word	0x3dea39ef

0000aecc <matherr>:
matherr():
    aecc:	2000      	movs	r0, #0
    aece:	4770      	bx	lr

0000aed0 <nan>:
nan():
    aed0:	2000      	movs	r0, #0
    aed2:	4901      	ldr	r1, [pc, #4]	; (aed8 <nan+0x8>)
    aed4:	4770      	bx	lr
    aed6:	46c0      	nop			; (mov r8, r8)
    aed8:	7ff80000 	.word	0x7ff80000

0000aedc <__errno>:
__errno():
    aedc:	4b01      	ldr	r3, [pc, #4]	; (aee4 <__errno+0x8>)
    aede:	6818      	ldr	r0, [r3, #0]
    aee0:	4770      	bx	lr
    aee2:	46c0      	nop			; (mov r8, r8)
    aee4:	20000418 	.word	0x20000418

0000aee8 <memcpy>:
memcpy():
    aee8:	2300      	movs	r3, #0
    aeea:	b510      	push	{r4, lr}
    aeec:	429a      	cmp	r2, r3
    aeee:	d100      	bne.n	aef2 <memcpy+0xa>
    aef0:	bd10      	pop	{r4, pc}
    aef2:	5ccc      	ldrb	r4, [r1, r3]
    aef4:	54c4      	strb	r4, [r0, r3]
    aef6:	3301      	adds	r3, #1
    aef8:	e7f8      	b.n	aeec <memcpy+0x4>

0000aefa <memset>:
memset():
    aefa:	0003      	movs	r3, r0
    aefc:	1812      	adds	r2, r2, r0
    aefe:	4293      	cmp	r3, r2
    af00:	d100      	bne.n	af04 <memset+0xa>
    af02:	4770      	bx	lr
    af04:	7019      	strb	r1, [r3, #0]
    af06:	3301      	adds	r3, #1
    af08:	e7f9      	b.n	aefe <memset+0x4>
    af0a:	0000      	movs	r0, r0
    af0c:	000073ca 	.word	0x000073ca
    af10:	00007306 	.word	0x00007306
    af14:	0000732a 	.word	0x0000732a
    af18:	000072c8 	.word	0x000072c8
    af1c:	0000732a 	.word	0x0000732a
    af20:	000073a6 	.word	0x000073a6
    af24:	0000732a 	.word	0x0000732a
    af28:	000072c8 	.word	0x000072c8
    af2c:	00007306 	.word	0x00007306
    af30:	00007306 	.word	0x00007306
    af34:	000073a6 	.word	0x000073a6
    af38:	000072c8 	.word	0x000072c8
    af3c:	000073fc 	.word	0x000073fc
    af40:	000073fc 	.word	0x000073fc
    af44:	000073fc 	.word	0x000073fc
    af48:	000073b2 	.word	0x000073b2
    af4c:	00007306 	.word	0x00007306
    af50:	00007306 	.word	0x00007306
    af54:	0000732a 	.word	0x0000732a
    af58:	000072c6 	.word	0x000072c6
    af5c:	0000732a 	.word	0x0000732a
    af60:	000073a6 	.word	0x000073a6
    af64:	0000732a 	.word	0x0000732a
    af68:	000072c6 	.word	0x000072c6
    af6c:	00007306 	.word	0x00007306
    af70:	00007306 	.word	0x00007306
    af74:	000073a6 	.word	0x000073a6
    af78:	000072c6 	.word	0x000072c6
    af7c:	000073fc 	.word	0x000073fc
    af80:	000073fc 	.word	0x000073fc
    af84:	000073fc 	.word	0x000073fc
    af88:	000073b0 	.word	0x000073b0
    af8c:	00007568 	.word	0x00007568
    af90:	00007512 	.word	0x00007512
    af94:	00007512 	.word	0x00007512
    af98:	00007640 	.word	0x00007640
    af9c:	0000750e 	.word	0x0000750e
    afa0:	0000750e 	.word	0x0000750e
    afa4:	00007636 	.word	0x00007636
    afa8:	00007640 	.word	0x00007640
    afac:	0000750e 	.word	0x0000750e
    afb0:	00007636 	.word	0x00007636
    afb4:	0000750e 	.word	0x0000750e
    afb8:	00007640 	.word	0x00007640
    afbc:	00007644 	.word	0x00007644
    afc0:	00007644 	.word	0x00007644
    afc4:	00007644 	.word	0x00007644
    afc8:	0000764c 	.word	0x0000764c
    afcc:	000083f8 	.word	0x000083f8
    afd0:	0000826a 	.word	0x0000826a
    afd4:	000082ae 	.word	0x000082ae
    afd8:	00008212 	.word	0x00008212
    afdc:	000082ae 	.word	0x000082ae
    afe0:	0000839e 	.word	0x0000839e
    afe4:	000082ae 	.word	0x000082ae
    afe8:	00008212 	.word	0x00008212
    afec:	0000826a 	.word	0x0000826a
    aff0:	0000826a 	.word	0x0000826a
    aff4:	0000839e 	.word	0x0000839e
    aff8:	00008212 	.word	0x00008212
    affc:	0000820a 	.word	0x0000820a
    b000:	0000820a 	.word	0x0000820a
    b004:	0000820a 	.word	0x0000820a
    b008:	000083ac 	.word	0x000083ac
    b00c:	00008b20 	.word	0x00008b20
    b010:	00008a22 	.word	0x00008a22
    b014:	00008a22 	.word	0x00008a22
    b018:	00008d40 	.word	0x00008d40
    b01c:	00008a1c 	.word	0x00008a1c
    b020:	00008a1c 	.word	0x00008a1c
    b024:	00008d28 	.word	0x00008d28
    b028:	00008d40 	.word	0x00008d40
    b02c:	00008a1c 	.word	0x00008a1c
    b030:	00008d28 	.word	0x00008d28
    b034:	00008a1c 	.word	0x00008a1c
    b038:	00008d40 	.word	0x00008d40
    b03c:	00008d36 	.word	0x00008d36
    b040:	00008d36 	.word	0x00008d36
    b044:	00008d36 	.word	0x00008d36
    b048:	00008d44 	.word	0x00008d44
    b04c:	0000994a 	.word	0x0000994a
    b050:	0000994a 	.word	0x0000994a
    b054:	0000994e 	.word	0x0000994e
    b058:	0000994e 	.word	0x0000994e
    b05c:	00009956 	.word	0x00009956
    b060:	00009956 	.word	0x00009956
    b064:	2d2d2d2d 	.word	0x2d2d2d2d
    b068:	2d2d2d2d 	.word	0x2d2d2d2d
    b06c:	2d2d2d2d 	.word	0x2d2d2d2d
    b070:	2d2d2d2d 	.word	0x2d2d2d2d
    b074:	2d2d2d2d 	.word	0x2d2d2d2d
    b078:	2d2d2d2d 	.word	0x2d2d2d2d
    b07c:	2d2d2d2d 	.word	0x2d2d2d2d
    b080:	2d2d2d2d 	.word	0x2d2d2d2d
    b084:	2d2d2d2d 	.word	0x2d2d2d2d
    b088:	2d2d2d2d 	.word	0x2d2d2d2d
    b08c:	2d2d2d2d 	.word	0x2d2d2d2d
    b090:	2d2d2d2d 	.word	0x2d2d2d2d
    b094:	2d2d2d2d 	.word	0x2d2d2d2d
    b098:	000a0d2d 	.word	0x000a0d2d
    b09c:	f9baf0bd 	.word	0xf9baf0bd
    b0a0:	e1ccabc2 	.word	0xe1ccabc2
    b0a4:	baa3beca 	.word	0xbaa3beca
    b0a8:	ebc2fdca 	.word	0xebc2fdca
    b0ac:	e2b2dcb9 	.word	0xe2b2dcb9
    b0b0:	b5cad4ca 	.word	0xb5cad4ca
    b0b4:	0d20fdc0 	.word	0x0d20fdc0
    b0b8:	0000000a 	.word	0x0000000a
    b0bc:	d9a22020 	.word	0xd9a22020
    b0c0:	b5b6c020 	.word	0xb5b6c020
    b0c4:	cbc1c9c6 	.word	0xcbc1c9c6
    b0c8:	00000ab8 	.word	0x00000ab8
    b0cc:	daa22020 	.word	0xdaa22020
    b0d0:	52415520 	.word	0x52415520
    b0d4:	65445f54 	.word	0x65445f54
    b0d8:	b4677562 	.word	0xb4677562
    b0dc:	a3dabfae 	.word	0xa3dabfae
    b0e0:	cca8b2a8 	.word	0xcca8b2a8
    b0e4:	31cac2d8 	.word	0x31cac2d8
    b0e8:	30323531 	.word	0x30323531
    b0ec:	a3a9a330 	.word	0xa3a9a330
    b0f0:	b3e4caac 	.word	0xb3e4caac
    b0f4:	c2fdcaf6 	.word	0xc2fdcaf6
    b0f8:	ccdcb9eb 	.word	0xccdcb9eb
    b0fc:	d0becae1 	.word	0xd0becae1
    b100:	20a2cfc5 	.word	0x20a2cfc5
    b104:	00000a0d 	.word	0x00000a0d
    b108:	2d2d2d2d 	.word	0x2d2d2d2d
    b10c:	2d2d2d2d 	.word	0x2d2d2d2d
    b110:	2d2d2d2d 	.word	0x2d2d2d2d
    b114:	2d2d2d2d 	.word	0x2d2d2d2d
    b118:	2d2d2d2d 	.word	0x2d2d2d2d
    b11c:	2d2d2d2d 	.word	0x2d2d2d2d
    b120:	2d2d2d2d 	.word	0x2d2d2d2d
    b124:	2d2d2d2d 	.word	0x2d2d2d2d
    b128:	2d2d2d2d 	.word	0x2d2d2d2d
    b12c:	2d2d2d2d 	.word	0x2d2d2d2d
    b130:	2d2d2d2d 	.word	0x2d2d2d2d
    b134:	2d2d2d2d 	.word	0x2d2d2d2d
    b138:	2d2d2d2d 	.word	0x2d2d2d2d
    b13c:	00000a0d 	.word	0x00000a0d
    b140:	66322e25 	.word	0x66322e25
    b144:	0000000a 	.word	0x0000000a

0000b148 <GPIO_ARR>:
    b148:	400ff000 400ff040 400ff080 400ff0c0     ...@@..@...@...@
    b158:	400ff100                                ...@

0000b15c <PORT_ARR>:
    b15c:	40049000 4004a000 4004b000 4004c000     ...@...@...@...@
    b16c:	4004d000 33323130 37363534 42413938     ...@0123456789AB
    b17c:	46454443 30323032 36313730 00000000     CDEF20200716....
    b18c:	bea12020 72657355 becae1cc baa3bfa1       ..User........
    b19c:	f8bdabbd 7355ebc8 c4b57265 6e69616d     ......User..main
    b1ac:	b4d62928 2e2ed0d0 000a0d2e              ()..........

0000b1b8 <UART_ARR>:
    b1b8:	4006b000 4006c000 0000a518 0000a530     ...@...@....0...
    b1c8:	0000a530 0000a524 0000a530 0000a530     0...$...0...0...
    b1d8:	0000a530 0000a530 0000a530 0000a530     0...0...0...0...
    b1e8:	0000a530 0000a512 0000a530 0000a4f2     0.......0.......
    b1f8:	0000a530 0000a530 0000a51e 0000a7a2     0...0...........
    b208:	0000a9ca 0000a9ca 0000a9ca 0000a9ca     ................
    b218:	0000a9ca 0000a9ca 0000a9ca 0000a9ca     ................
    b228:	0000a9ca 0000a89e 0000a928 0000a5e4     ........(.......
    b238:	0000a9ca 0000a6a8 0000a9ca 0000a9ca     ................
    b248:	0000a5e4 0000a9ca 0000a9ca 0000a9ca     ................
    b258:	0000a9ca 0000a9ba 0000a86c 0000a8b8     ........l.......
    b268:	0000a9ca 0000a9ca 0000a93c 0000a9ca     ........<.......
    b278:	0000a8d2 0000a9ca 0000a9ca 0000a7a2     ................
    b288:	00676f6c                                log.

0000b28c <_init>:
_init():
    b28c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b28e:	46c0      	nop			; (mov r8, r8)
    b290:	bcf8      	pop	{r3, r4, r5, r6, r7}
    b292:	bc08      	pop	{r3}
    b294:	469e      	mov	lr, r3
    b296:	4770      	bx	lr

0000b298 <_fini>:
_fini():
    b298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b29a:	46c0      	nop			; (mov r8, r8)
    b29c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    b29e:	bc08      	pop	{r3}
    b2a0:	469e      	mov	lr, r3
    b2a2:	4770      	bx	lr
