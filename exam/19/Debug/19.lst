
19.elf:     file format elf32-littlearm
19.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00006c59

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000068c0 memsz 0x000068c0 flags r--
    LOAD off    0x00006c00 vaddr 0x00006c00 paddr 0x00006c00 align 2**16
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00006c10 vaddr 0x00006c10 paddr 0x00006c10 align 2**16
         filesz 0x00004604 memsz 0x00004604 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x0000b214 align 2**16
         filesz 0x00000068 memsz 0x00000390 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts     000000c0  00006800  00006800  00006800  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flash_config   00000010  00006c00  00006c00  00006c00  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text           000045f4  00006c10  00006c10  00006c10  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM            00000008  0000b204  0000b204  0000b204  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array     00000004  0000b20c  0000b20c  0000b20c  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array     00000004  0000b210  0000b210  0000b210  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .mtb            00000000  20000400  20000400  00010468  2**0  CONTENTS
  7 .data           00000068  20000400  0000b214  00010400  2**2  CONTENTS, ALLOC, LOAD, DATA
  8 .bss            00000024  20000468  0000b27c  00010468  2**2  ALLOC
  9 .heap           00000204  2000048c  0000b2a0  00010468  2**0  ALLOC
 10 .stack          00000100  20000690  0000b4a4  00010468  2**0  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010468  2**0  CONTENTS, READONLY
 12 .debug_info     0000892a  00000000  00000000  00010490  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev   00001a26  00000000  00000000  00018dba  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc      00002729  00000000  00000000  0001a7e0  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges  000002f8  00000000  00000000  0001cf10  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges   00000238  00000000  00000000  0001d208  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro    0000f452  00000000  00000000  0001d440  2**0  CONTENTS, READONLY, DEBUGGING
 18 .debug_line     00002da3  00000000  00000000  0002c892  2**0  CONTENTS, READONLY, DEBUGGING
 19 .debug_str      0004ee9f  00000000  00000000  0002f635  2**0  CONTENTS, READONLY, DEBUGGING
 20 .comment        0000007e  00000000  00000000  0007e4d4  2**0  CONTENTS, READONLY
 21 .debug_frame    00000c9c  00000000  00000000  0007e554  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00006800 l    d  .interrupts	00000000 .interrupts
00006c00 l    d  .flash_config	00000000 .flash_config
00006c10 l    d  .text	00000000 .text
0000b204 l    d  .ARM	00000000 .ARM
0000b20c l    d  .init_array	00000000 .init_array
0000b210 l    d  .fini_array	00000000 .fini_array
20000400 l    d  .mtb	00000000 .mtb
20000400 l    d  .data	00000000 .data
20000468 l    d  .bss	00000000 .bss
2000048c l    d  .heap	00000000 .heap
20000690 l    d  .stack	00000000 .stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_MKL36Z4.o
00000000 l    df *ABS*	00000000 crtstuff.c
0000b1ec l     O .text	00000000 __EH_FRAME_BEGIN__
00006c10 l     F .text	00000000 __do_global_dtors_aux
20000468 l       .bss	00000001 completed.8654
0000b210 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00006c38 l     F .text	00000000 frame_dummy
2000046c l       .bss	00000018 object.8659
0000b20c l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 _udivsi3.o
00006ca8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00006dbc l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 _clzdi2.o
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 system_MKL36Z4.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 printf.c
0000a16c l     F .text	0000002a printk_putc
0000a196 l     F .text	00000084 printk_mknumstr
0000a21a l     F .text	0000001e printk_pad_zero
0000a238 l     F .text	0000001e printk_pad_space
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 d:/嵌入式技术app/ahl-gec-ide(4.11)/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crti.o
00000000 l    df *ABS*	00000000 d:/嵌入式技术app/ahl-gec-ide(4.11)/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crtn.o
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 impure.c
20000408 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 tm1637.c
00000000 l    df *ABS*	00000000 
0000b210 l       .init_array	00000000 __init_array_end
0000b20c l       .init_array	00000000 __preinit_array_end
0000b20c l       .init_array	00000000 __init_array_start
0000b20c l       .init_array	00000000 __preinit_array_start
0000969c g     F .text	00000038 .hidden __aeabi_dcmpun
20000490 g       .heap	00000000 __HeapBase
00006fd4 g     F .text	00000012 .hidden __aeabi_dcmple
00009dfc g     F .text	00000008 flash_read_physical
0000a970 g     F .text	00000110 log
00008918 g     F .text	00000078 .hidden __eqdf2
20000400 g       .data	00000000 __data_start__
00000100 g       *ABS*	00000000 STACK_SIZE
00006ca0  w    F .text	00000006 I2C0_IRQHandler
0000003e g       *ABS*	00000000 GEC_USER_SECTOR_END
00006ca0  w    F .text	00000006 HardFault_Handler
00006ca0  w    F .text	00000006 SysTick_Handler
20000484 g     O .bss	00000002 DIO_PIN
00006ca0  w    F .text	00000006 PendSV_Handler
00006ca0  w    F .text	00000006 NMI_Handler
0000b20c g       .ARM	00000000 __exidx_end
00006ca0  w    F .text	00000006 PORTC_PORTD_IRQHandler
00006ca0  w    F .text	00000006 I2C1_IRQHandler
00006ca0  w    F .text	00000006 UART1_IRQHandler
00008990 g     F .text	000000c8 .hidden __gtdf2
0000ae3c g     F .text	0000000c __errno
0000b214 g       .fini_array	00000000 __etext
00006ca0  w    F .text	00000006 DMA2_IRQHandler
00006ca0  w    F .text	00000006 TPM0_IRQHandler
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmple
00006ca0  w    F .text	00000006 I2S0_IRQHandler
00006ca0  w    F .text	00000006 LLWU_IRQHandler
0000001a g       *ABS*	00000000 GEC_USER_SECTOR_START
00006ca0  w    F .text	00000006 TSI0_IRQHandler
00009ae8 g     F .text	000000a4 adc_init_inner
0000a144 g     F .text	00000028 UART0_IRQHandler
00009bb4 g     F .text	00000084 TempRegression
0000ae48 g     F .text	00000012 memcpy
00006f94 g     F .text	00000020 .hidden __aeabi_cdrcmple
0000705c g     F .text	00000012 .hidden __aeabi_fcmpgt
00008a58 g     F .text	000000d0 .hidden __ltdf2
0000b20c g       .init_array	00000000 __DTOR_END__
00007084 g     F .text	0000003e .hidden __aeabi_uldivmod
00006ca0  w    F .text	00000006 ADC0_IRQHandler
00006ca8 g     F .text	0000010a .hidden __udivsi3
20000468 g       .bss	00000000 __START_BSS
000075d0 g     F .text	0000009e .hidden __lesf2
000070c4 g     F .text	0000003c .hidden __fixunsdfsi
20000486 g     O .bss	00000002 CLK_PIN
20000690 g       .heap	00000000 __HeapLimit
20000468 g       .bss	00000000 __bss_start__
00009e68 g     F .text	00000068 flash_erase
000097b4 g     F .text	00000064 .hidden __aeabi_ui2d
00006ca0  w    F .text	00000006 SPI1_IRQHandler
0000713c g     F .text	00000182 .hidden __udivmoddi4
00006ca0  w    F .text	00000006 DefaultISR
00006fc0 g     F .text	00000012 .hidden __aeabi_dcmplt
00008314 g     F .text	00000604 .hidden __aeabi_ddiv
000074e4 g     F .text	0000004e .hidden __nesf2
0000b204 g       .ARM	00000000 __exidx_start
00008b28 g     F .text	000004e4 .hidden __aeabi_dmul
20000400 g     O .data	00000001 __fdlib_version
0000a264 g     F .text	00000188 printk_mkfloatstr
0000b1ec g     F .text	00000000 _init
00006ca0  w    F .text	00000006 TPM2_IRQHandler
000098bc g     F .text	00000108 .hidden __aeabi_d2f
00007100 g     F .text	0000003c .hidden __aeabi_d2ulz
000078d4 g     F .text	00000388 .hidden __aeabi_fsub
00006ca0  w    F .text	00000006 RTC_IRQHandler
0000b0bc g     O .text	00000014 PORT_ARR
00000400 g       *ABS*	00000000 MCU_SECTORSIZE
00006c58  w    F .text	00000048 Reset_Handler
00007070 g     F .text	00000012 .hidden __aeabi_fcmpge
00006ca0  w    F .text	00000006 LCD_IRQHandler
00009a4c g     F .text	0000000a adc_read
00007534 g     F .text	0000009c .hidden __gtsf2
00007cdc g     F .text	00000638 .hidden __aeabi_dadd
00008a58 g     F .text	000000d0 .hidden __ledf2
200017ff g       *ABS*	00000000 GEC_USER_RAM_END
0000a94c g     F .text	00000024 myprintf
00007048 g     F .text	00000012 .hidden __aeabi_fcmple
00006ca0  w    F .text	00000006 RTC_Seconds_IRQHandler
00006dbc g     F .text	00000000 .hidden __aeabi_idiv
00006ca0  w    F .text	00000006 MCG_IRQHandler
00006ca0  w    F .text	00000006 UART2_IRQHandler
20000468 g       .data	00000000 __data_end__
0000b20c g       .init_array	00000000 __CTOR_LIST__
00000200 g       *ABS*	00000000 HEAP_SIZE
00006fe8 g     F .text	00000012 .hidden __aeabi_dcmpgt
000099c4 g     F .text	0000003c .hidden __clzsi2
2000048c g       .bss	00000000 __bss_end__
00006ca0  w    F .text	00000006 Reserved20_IRQHandler
00006ffc g     F .text	00000012 .hidden __aeabi_dcmpge
00009e24 g     F .text	00000044 flash_cmd_launch
0000900c g     F .text	00000690 .hidden __aeabi_dsub
20000488 g     O .bss	00000004 component_fun
20000400 g       *ABS*	00000000 GEC_USER_RAM_START
0000b118 g     O .text	00000008 UART_ARR
00009a28 g     F .text	00000024 adc_read_inner
000074e4 g     F .text	0000004e .hidden __eqsf2
000072c0 g     F .text	00000224 .hidden __aeabi_fdiv
00009740 g     F .text	00000074 .hidden __aeabi_i2d
0000a256 g     F .text	0000000c out_char
0000a3ec g     F .text	0000055e printk
00006f90  w    F .text	00000002 .hidden __aeabi_ldiv0
00007c5c g     F .text	00000080 .hidden __aeabi_ui2f
0000a0dc g     F .text	00000068 uart_re1
0000ae5a g     F .text	00000010 memset
00006800 g       .interrupts	000000c0 __isr_vector
00009d44 g     F .text	000000b8 main
00006ca0  w    F .text	00000006 PIT_IRQHandler
000075d0 g     F .text	0000009e .hidden __ltsf2
00006ca8 g     F .text	00000000 .hidden __aeabi_uidiv
00006ca0  w    F .text	00000006 SVC_Handler
0000ae2c g     F .text	00000004 matherr
20000400 g       .data	00000000 __DATA_RAM
00009f24 g     F .text	00000008 gpio_get_port_pin
20000490 g       .heap	00000000 __end__
00007018 g     F .text	00000010 .hidden __aeabi_cfcmple
00006dbc g     F .text	000001cc .hidden __divsi3
0000b20c g       .init_array	00000000 __CTOR_END__
00006ca0  w    F .text	00000006 DMA3_IRQHandler
0000b20c g       .init_array	00000000 __DTOR_LIST__
2000048c g       .bss	00000000 __END_BSS
00009c80 g     F .text	000000c4 SystemInit
00006ca0  w    F .text	00000006 DMA0_IRQHandler
00008918 g     F .text	00000078 .hidden __nedf2
00007100 g     F .text	0000003c .hidden __fixunsdfdi
0000b1f8 g     F .text	00000000 _fini
00006ca0  w    F .text	00000006 DAC0_IRQHandler
00007534 g     F .text	0000009c .hidden __gesf2
20001800 g       .stack	00000000 __StackTop
20000404 g     O .data	00000004 _impure_ptr
00007028 g     F .text	0000000c .hidden __aeabi_fcmpeq
00009b8c g     F .text	00000026 adc_init
00007670 g     F .text	00000264 .hidden __aeabi_fmul
00009ed0 g     F .text	00000054 flash_write_physical
0000aa80 g     F .text	000003ac __ieee754_log
20000400 g       .mtb	00000000 _mtb_end
00007010 g     F .text	00000018 .hidden __aeabi_cfrcmple
0000b27c g       *ABS*	00000000 __DATA_END
00009e04 g     F .text	0000001e flash_isempty
00009c38 g     F .text	00000048 TempTrans
000070c4 g     F .text	0000003c .hidden __aeabi_d2uiz
0000ae30 g     F .text	0000000c nan
00006ca0  w    F .text	00000006 TPM1_IRQHandler
00007034 g     F .text	00000012 .hidden __aeabi_fcmplt
00009fe8 g     F .text	0000008c Vectors_Init
20001800 g       *ABS*	00000000 __stack
00006db4 g     F .text	00000008 .hidden __aeabi_uidivmod
00006fb4 g     F .text	0000000c .hidden __aeabi_dcmpeq
00006ca0  w    F .text	00000006 LVD_LVW_IRQHandler
00006ca0  w    F .text	00000006 SPI0_IRQHandler
00006ca0  w    F .text	00000006 PORTA_IRQHandler
00006800 g       .interrupts	00000000 __VECTOR_TABLE
0000b214 g       .fini_array	00000000 __DATA_ROM
20001700 g       *ABS*	00000000 __StackLimit
00006ca0  w    F .text	00000006 FTFA_IRQHandler
0000b0a8 g     O .text	00000014 GPIO_ARR
000096d4 g     F .text	0000006c .hidden __aeabi_d2iz
00007018 g     F .text	00000010 .hidden __aeabi_cfcmpeq
20000400 g       .mtb	00000000 _mtb_start
00006ca0  w    F .text	00000006 Reserved40_IRQHandler
00006f90  w    F .text	00000002 .hidden __aeabi_idiv0
00006ca0  w    F .text	00000006 LPTMR0_IRQHandler
00009a18 g     F .text	0000000e strlen
00009a58 g     F .text	00000090 adc_cal
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00008990 g     F .text	000000c8 .hidden __gedf2
0000a080 g     F .text	0000005c uart_send1
0000a074 g     F .text	0000000c uart_is_uartNo
00009f2c g     F .text	00000044 gpio_set
00009818 g     F .text	000000a4 .hidden __aeabi_f2d
00009f70 g     F .text	00000078 gpio_init
00009a00 g     F .text	00000016 .hidden __clzdi2
00006ca0  w    F .text	00000006 CMP0_IRQHandler
00006f88 g     F .text	00000008 .hidden __aeabi_idivmod
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START
00006ca0  w    F .text	00000006 DMA1_IRQHandler



Disassembly of section .text:

00006c10 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    6c10:	b510      	push	{r4, lr}
    6c12:	4c06      	ldr	r4, [pc, #24]	; (6c2c <__do_global_dtors_aux+0x1c>)
    6c14:	7823      	ldrb	r3, [r4, #0]
    6c16:	2b00      	cmp	r3, #0
    6c18:	d107      	bne.n	6c2a <__do_global_dtors_aux+0x1a>
    6c1a:	4b05      	ldr	r3, [pc, #20]	; (6c30 <__do_global_dtors_aux+0x20>)
    6c1c:	2b00      	cmp	r3, #0
    6c1e:	d002      	beq.n	6c26 <__do_global_dtors_aux+0x16>
    6c20:	4804      	ldr	r0, [pc, #16]	; (6c34 <__do_global_dtors_aux+0x24>)
    6c22:	e000      	b.n	6c26 <__do_global_dtors_aux+0x16>
    6c24:	bf00      	nop
    6c26:	2301      	movs	r3, #1
    6c28:	7023      	strb	r3, [r4, #0]
    6c2a:	bd10      	pop	{r4, pc}
    6c2c:	20000468 	.word	0x20000468
    6c30:	00000000 	.word	0x00000000
    6c34:	0000b1ec 	.word	0x0000b1ec

00006c38 <frame_dummy>:
frame_dummy():
    6c38:	4b04      	ldr	r3, [pc, #16]	; (6c4c <frame_dummy+0x14>)
    6c3a:	b510      	push	{r4, lr}
    6c3c:	2b00      	cmp	r3, #0
    6c3e:	d003      	beq.n	6c48 <frame_dummy+0x10>
    6c40:	4903      	ldr	r1, [pc, #12]	; (6c50 <frame_dummy+0x18>)
    6c42:	4804      	ldr	r0, [pc, #16]	; (6c54 <frame_dummy+0x1c>)
    6c44:	e000      	b.n	6c48 <frame_dummy+0x10>
    6c46:	bf00      	nop
    6c48:	bd10      	pop	{r4, pc}
    6c4a:	46c0      	nop			; (mov r8, r8)
    6c4c:	00000000 	.word	0x00000000
    6c50:	2000046c 	.word	0x2000046c
    6c54:	0000b1ec 	.word	0x0000b1ec

00006c58 <Reset_Handler>:
Reset_Handler():
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:118
    .align 2
    .globl   Reset_Handler
    .weak    Reset_Handler
    .type    Reset_Handler, %function
Reset_Handler:
    cpsid   i               /* Mask interrupts */
    6c58:	b672      	cpsid	i
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:120
#ifndef __NO_SYSTEM_INIT
    bl SystemInit
    6c5a:	f003 f811 	bl	9c80 <SystemInit>
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:122
#endif
    cpsie   i               /* Unmask interrupts */
    6c5e:	b662      	cpsie	i
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:130
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */

    ldr    r1, =__etext
    6c60:	490a      	ldr	r1, [pc, #40]	; (6c8c <Reset_Handler+0x34>)
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c62:	4a0b      	ldr	r2, [pc, #44]	; (6c90 <Reset_Handler+0x38>)
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c64:	4b0b      	ldr	r3, [pc, #44]	; (6c94 <Reset_Handler+0x3c>)
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:134

    subs    r3, r2
    6c66:	1a9b      	subs	r3, r3, r2
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:135
    ble     .LC0
    6c68:	dd03      	ble.n	6c72 <Reset_Handler+0x1a>
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:138

.LC1:
    subs    r3, 4
    6c6a:	3b04      	subs	r3, #4
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:139
    ldr    r0, [r1,r3]
    6c6c:	58c8      	ldr	r0, [r1, r3]
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:140
    str    r0, [r2,r3]
    6c6e:	50d0      	str	r0, [r2, r3]
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:141
    bgt    .LC1
    6c70:	dcfb      	bgt.n	6c6a <Reset_Handler+0x12>
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:154
 *     Loop to zero out BSS section, which uses following symbols
 *     in linker script:
 *      __bss_start__: start of BSS section. Must align to 4
 *      __bss_end__: end of BSS section. Must align to 4
 */
    ldr r1, =__bss_start__
    6c72:	4909      	ldr	r1, [pc, #36]	; (6c98 <Reset_Handler+0x40>)
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c74:	4a09      	ldr	r2, [pc, #36]	; (6c9c <Reset_Handler+0x44>)
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:157

    subs    r2, r1
    6c76:	1a52      	subs	r2, r2, r1
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:158
    ble .LC3
    6c78:	dd03      	ble.n	6c82 <Reset_Handler+0x2a>
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:160

    movs    r0, 0
    6c7a:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:162
.LC2:
    str r0, [r1, r2]
    6c7c:	5088      	str	r0, [r1, r2]
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:163
    subs    r2, 4
    6c7e:	3a04      	subs	r2, #4
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:164
    bge .LC2
    6c80:	dafc      	bge.n	6c7c <Reset_Handler+0x24>
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:173
#define __START _start
#endif


/*【User程序修改处1】*/
	bl	 Vectors_Init  
    6c82:	f003 f9b1 	bl	9fe8 <Vectors_Init>
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:175
  //  bl    __START
   bl main
    6c86:	f003 f85d 	bl	9d44 <main>
    6c8a:	0000      	.short	0x0000
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:130
    ldr    r1, =__etext
    6c8c:	0000b214 	.word	0x0000b214
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c90:	20000400 	.word	0x20000400
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c94:	20000468 	.word	0x20000468
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:154
    ldr r1, =__bss_start__
    6c98:	20000468 	.word	0x20000468
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c9c:	2000048c 	.word	0x2000048c

00006ca0 <ADC0_IRQHandler>:
DMA1_IRQHandler():
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:186
    .weak DefaultISR
    .type DefaultISR, %function
DefaultISR:    
    //ldr	r0, =DefaultISR   //误中断，进入无限循环
    //bx r0
       push  {lr}        //【20200326】WYH改，误中断，回原处
    6ca0:	b500      	push	{lr}
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:187
       nop
    6ca2:	46c0      	nop			; (mov r8, r8)
D:\app_for_qianrushi\exam\19\Debug/srcs/startup_MKL36Z4.S:188
       pop   {pc}
    6ca4:	bd00      	pop	{pc}
    6ca6:	46c0      	nop			; (mov r8, r8)

00006ca8 <__udivsi3>:
__aeabi_uidiv():
    6ca8:	2200      	movs	r2, #0
    6caa:	0843      	lsrs	r3, r0, #1
    6cac:	428b      	cmp	r3, r1
    6cae:	d374      	bcc.n	6d9a <__udivsi3+0xf2>
    6cb0:	0903      	lsrs	r3, r0, #4
    6cb2:	428b      	cmp	r3, r1
    6cb4:	d35f      	bcc.n	6d76 <__udivsi3+0xce>
    6cb6:	0a03      	lsrs	r3, r0, #8
    6cb8:	428b      	cmp	r3, r1
    6cba:	d344      	bcc.n	6d46 <__udivsi3+0x9e>
    6cbc:	0b03      	lsrs	r3, r0, #12
    6cbe:	428b      	cmp	r3, r1
    6cc0:	d328      	bcc.n	6d14 <__udivsi3+0x6c>
    6cc2:	0c03      	lsrs	r3, r0, #16
    6cc4:	428b      	cmp	r3, r1
    6cc6:	d30d      	bcc.n	6ce4 <__udivsi3+0x3c>
    6cc8:	22ff      	movs	r2, #255	; 0xff
    6cca:	0209      	lsls	r1, r1, #8
    6ccc:	ba12      	rev	r2, r2
    6cce:	0c03      	lsrs	r3, r0, #16
    6cd0:	428b      	cmp	r3, r1
    6cd2:	d302      	bcc.n	6cda <__udivsi3+0x32>
    6cd4:	1212      	asrs	r2, r2, #8
    6cd6:	0209      	lsls	r1, r1, #8
    6cd8:	d065      	beq.n	6da6 <__udivsi3+0xfe>
    6cda:	0b03      	lsrs	r3, r0, #12
    6cdc:	428b      	cmp	r3, r1
    6cde:	d319      	bcc.n	6d14 <__udivsi3+0x6c>
    6ce0:	e000      	b.n	6ce4 <__udivsi3+0x3c>
    6ce2:	0a09      	lsrs	r1, r1, #8
    6ce4:	0bc3      	lsrs	r3, r0, #15
    6ce6:	428b      	cmp	r3, r1
    6ce8:	d301      	bcc.n	6cee <__udivsi3+0x46>
    6cea:	03cb      	lsls	r3, r1, #15
    6cec:	1ac0      	subs	r0, r0, r3
    6cee:	4152      	adcs	r2, r2
    6cf0:	0b83      	lsrs	r3, r0, #14
    6cf2:	428b      	cmp	r3, r1
    6cf4:	d301      	bcc.n	6cfa <__udivsi3+0x52>
    6cf6:	038b      	lsls	r3, r1, #14
    6cf8:	1ac0      	subs	r0, r0, r3
    6cfa:	4152      	adcs	r2, r2
    6cfc:	0b43      	lsrs	r3, r0, #13
    6cfe:	428b      	cmp	r3, r1
    6d00:	d301      	bcc.n	6d06 <__udivsi3+0x5e>
    6d02:	034b      	lsls	r3, r1, #13
    6d04:	1ac0      	subs	r0, r0, r3
    6d06:	4152      	adcs	r2, r2
    6d08:	0b03      	lsrs	r3, r0, #12
    6d0a:	428b      	cmp	r3, r1
    6d0c:	d301      	bcc.n	6d12 <__udivsi3+0x6a>
    6d0e:	030b      	lsls	r3, r1, #12
    6d10:	1ac0      	subs	r0, r0, r3
    6d12:	4152      	adcs	r2, r2
    6d14:	0ac3      	lsrs	r3, r0, #11
    6d16:	428b      	cmp	r3, r1
    6d18:	d301      	bcc.n	6d1e <__udivsi3+0x76>
    6d1a:	02cb      	lsls	r3, r1, #11
    6d1c:	1ac0      	subs	r0, r0, r3
    6d1e:	4152      	adcs	r2, r2
    6d20:	0a83      	lsrs	r3, r0, #10
    6d22:	428b      	cmp	r3, r1
    6d24:	d301      	bcc.n	6d2a <__udivsi3+0x82>
    6d26:	028b      	lsls	r3, r1, #10
    6d28:	1ac0      	subs	r0, r0, r3
    6d2a:	4152      	adcs	r2, r2
    6d2c:	0a43      	lsrs	r3, r0, #9
    6d2e:	428b      	cmp	r3, r1
    6d30:	d301      	bcc.n	6d36 <__udivsi3+0x8e>
    6d32:	024b      	lsls	r3, r1, #9
    6d34:	1ac0      	subs	r0, r0, r3
    6d36:	4152      	adcs	r2, r2
    6d38:	0a03      	lsrs	r3, r0, #8
    6d3a:	428b      	cmp	r3, r1
    6d3c:	d301      	bcc.n	6d42 <__udivsi3+0x9a>
    6d3e:	020b      	lsls	r3, r1, #8
    6d40:	1ac0      	subs	r0, r0, r3
    6d42:	4152      	adcs	r2, r2
    6d44:	d2cd      	bcs.n	6ce2 <__udivsi3+0x3a>
    6d46:	09c3      	lsrs	r3, r0, #7
    6d48:	428b      	cmp	r3, r1
    6d4a:	d301      	bcc.n	6d50 <__udivsi3+0xa8>
    6d4c:	01cb      	lsls	r3, r1, #7
    6d4e:	1ac0      	subs	r0, r0, r3
    6d50:	4152      	adcs	r2, r2
    6d52:	0983      	lsrs	r3, r0, #6
    6d54:	428b      	cmp	r3, r1
    6d56:	d301      	bcc.n	6d5c <__udivsi3+0xb4>
    6d58:	018b      	lsls	r3, r1, #6
    6d5a:	1ac0      	subs	r0, r0, r3
    6d5c:	4152      	adcs	r2, r2
    6d5e:	0943      	lsrs	r3, r0, #5
    6d60:	428b      	cmp	r3, r1
    6d62:	d301      	bcc.n	6d68 <__udivsi3+0xc0>
    6d64:	014b      	lsls	r3, r1, #5
    6d66:	1ac0      	subs	r0, r0, r3
    6d68:	4152      	adcs	r2, r2
    6d6a:	0903      	lsrs	r3, r0, #4
    6d6c:	428b      	cmp	r3, r1
    6d6e:	d301      	bcc.n	6d74 <__udivsi3+0xcc>
    6d70:	010b      	lsls	r3, r1, #4
    6d72:	1ac0      	subs	r0, r0, r3
    6d74:	4152      	adcs	r2, r2
    6d76:	08c3      	lsrs	r3, r0, #3
    6d78:	428b      	cmp	r3, r1
    6d7a:	d301      	bcc.n	6d80 <__udivsi3+0xd8>
    6d7c:	00cb      	lsls	r3, r1, #3
    6d7e:	1ac0      	subs	r0, r0, r3
    6d80:	4152      	adcs	r2, r2
    6d82:	0883      	lsrs	r3, r0, #2
    6d84:	428b      	cmp	r3, r1
    6d86:	d301      	bcc.n	6d8c <__udivsi3+0xe4>
    6d88:	008b      	lsls	r3, r1, #2
    6d8a:	1ac0      	subs	r0, r0, r3
    6d8c:	4152      	adcs	r2, r2
    6d8e:	0843      	lsrs	r3, r0, #1
    6d90:	428b      	cmp	r3, r1
    6d92:	d301      	bcc.n	6d98 <__udivsi3+0xf0>
    6d94:	004b      	lsls	r3, r1, #1
    6d96:	1ac0      	subs	r0, r0, r3
    6d98:	4152      	adcs	r2, r2
    6d9a:	1a41      	subs	r1, r0, r1
    6d9c:	d200      	bcs.n	6da0 <__udivsi3+0xf8>
    6d9e:	4601      	mov	r1, r0
    6da0:	4152      	adcs	r2, r2
    6da2:	4610      	mov	r0, r2
    6da4:	4770      	bx	lr
    6da6:	e7ff      	b.n	6da8 <__udivsi3+0x100>
    6da8:	b501      	push	{r0, lr}
    6daa:	2000      	movs	r0, #0
    6dac:	f000 f8f0 	bl	6f90 <__aeabi_idiv0>
    6db0:	bd02      	pop	{r1, pc}
    6db2:	46c0      	nop			; (mov r8, r8)

00006db4 <__aeabi_uidivmod>:
__aeabi_uidivmod():
    6db4:	2900      	cmp	r1, #0
    6db6:	d0f7      	beq.n	6da8 <__udivsi3+0x100>
    6db8:	e776      	b.n	6ca8 <__udivsi3>
    6dba:	4770      	bx	lr

00006dbc <__divsi3>:
__divsi3():
    6dbc:	4603      	mov	r3, r0
    6dbe:	430b      	orrs	r3, r1
    6dc0:	d47f      	bmi.n	6ec2 <__divsi3+0x106>
    6dc2:	2200      	movs	r2, #0
    6dc4:	0843      	lsrs	r3, r0, #1
    6dc6:	428b      	cmp	r3, r1
    6dc8:	d374      	bcc.n	6eb4 <__divsi3+0xf8>
    6dca:	0903      	lsrs	r3, r0, #4
    6dcc:	428b      	cmp	r3, r1
    6dce:	d35f      	bcc.n	6e90 <__divsi3+0xd4>
    6dd0:	0a03      	lsrs	r3, r0, #8
    6dd2:	428b      	cmp	r3, r1
    6dd4:	d344      	bcc.n	6e60 <__divsi3+0xa4>
    6dd6:	0b03      	lsrs	r3, r0, #12
    6dd8:	428b      	cmp	r3, r1
    6dda:	d328      	bcc.n	6e2e <__divsi3+0x72>
    6ddc:	0c03      	lsrs	r3, r0, #16
    6dde:	428b      	cmp	r3, r1
    6de0:	d30d      	bcc.n	6dfe <__divsi3+0x42>
    6de2:	22ff      	movs	r2, #255	; 0xff
    6de4:	0209      	lsls	r1, r1, #8
    6de6:	ba12      	rev	r2, r2
    6de8:	0c03      	lsrs	r3, r0, #16
    6dea:	428b      	cmp	r3, r1
    6dec:	d302      	bcc.n	6df4 <__divsi3+0x38>
    6dee:	1212      	asrs	r2, r2, #8
    6df0:	0209      	lsls	r1, r1, #8
    6df2:	d065      	beq.n	6ec0 <__divsi3+0x104>
    6df4:	0b03      	lsrs	r3, r0, #12
    6df6:	428b      	cmp	r3, r1
    6df8:	d319      	bcc.n	6e2e <__divsi3+0x72>
    6dfa:	e000      	b.n	6dfe <__divsi3+0x42>
    6dfc:	0a09      	lsrs	r1, r1, #8
    6dfe:	0bc3      	lsrs	r3, r0, #15
    6e00:	428b      	cmp	r3, r1
    6e02:	d301      	bcc.n	6e08 <__divsi3+0x4c>
    6e04:	03cb      	lsls	r3, r1, #15
    6e06:	1ac0      	subs	r0, r0, r3
    6e08:	4152      	adcs	r2, r2
    6e0a:	0b83      	lsrs	r3, r0, #14
    6e0c:	428b      	cmp	r3, r1
    6e0e:	d301      	bcc.n	6e14 <__divsi3+0x58>
    6e10:	038b      	lsls	r3, r1, #14
    6e12:	1ac0      	subs	r0, r0, r3
    6e14:	4152      	adcs	r2, r2
    6e16:	0b43      	lsrs	r3, r0, #13
    6e18:	428b      	cmp	r3, r1
    6e1a:	d301      	bcc.n	6e20 <__divsi3+0x64>
    6e1c:	034b      	lsls	r3, r1, #13
    6e1e:	1ac0      	subs	r0, r0, r3
    6e20:	4152      	adcs	r2, r2
    6e22:	0b03      	lsrs	r3, r0, #12
    6e24:	428b      	cmp	r3, r1
    6e26:	d301      	bcc.n	6e2c <__divsi3+0x70>
    6e28:	030b      	lsls	r3, r1, #12
    6e2a:	1ac0      	subs	r0, r0, r3
    6e2c:	4152      	adcs	r2, r2
    6e2e:	0ac3      	lsrs	r3, r0, #11
    6e30:	428b      	cmp	r3, r1
    6e32:	d301      	bcc.n	6e38 <__divsi3+0x7c>
    6e34:	02cb      	lsls	r3, r1, #11
    6e36:	1ac0      	subs	r0, r0, r3
    6e38:	4152      	adcs	r2, r2
    6e3a:	0a83      	lsrs	r3, r0, #10
    6e3c:	428b      	cmp	r3, r1
    6e3e:	d301      	bcc.n	6e44 <__divsi3+0x88>
    6e40:	028b      	lsls	r3, r1, #10
    6e42:	1ac0      	subs	r0, r0, r3
    6e44:	4152      	adcs	r2, r2
    6e46:	0a43      	lsrs	r3, r0, #9
    6e48:	428b      	cmp	r3, r1
    6e4a:	d301      	bcc.n	6e50 <__divsi3+0x94>
    6e4c:	024b      	lsls	r3, r1, #9
    6e4e:	1ac0      	subs	r0, r0, r3
    6e50:	4152      	adcs	r2, r2
    6e52:	0a03      	lsrs	r3, r0, #8
    6e54:	428b      	cmp	r3, r1
    6e56:	d301      	bcc.n	6e5c <__divsi3+0xa0>
    6e58:	020b      	lsls	r3, r1, #8
    6e5a:	1ac0      	subs	r0, r0, r3
    6e5c:	4152      	adcs	r2, r2
    6e5e:	d2cd      	bcs.n	6dfc <__divsi3+0x40>
    6e60:	09c3      	lsrs	r3, r0, #7
    6e62:	428b      	cmp	r3, r1
    6e64:	d301      	bcc.n	6e6a <__divsi3+0xae>
    6e66:	01cb      	lsls	r3, r1, #7
    6e68:	1ac0      	subs	r0, r0, r3
    6e6a:	4152      	adcs	r2, r2
    6e6c:	0983      	lsrs	r3, r0, #6
    6e6e:	428b      	cmp	r3, r1
    6e70:	d301      	bcc.n	6e76 <__divsi3+0xba>
    6e72:	018b      	lsls	r3, r1, #6
    6e74:	1ac0      	subs	r0, r0, r3
    6e76:	4152      	adcs	r2, r2
    6e78:	0943      	lsrs	r3, r0, #5
    6e7a:	428b      	cmp	r3, r1
    6e7c:	d301      	bcc.n	6e82 <__divsi3+0xc6>
    6e7e:	014b      	lsls	r3, r1, #5
    6e80:	1ac0      	subs	r0, r0, r3
    6e82:	4152      	adcs	r2, r2
    6e84:	0903      	lsrs	r3, r0, #4
    6e86:	428b      	cmp	r3, r1
    6e88:	d301      	bcc.n	6e8e <__divsi3+0xd2>
    6e8a:	010b      	lsls	r3, r1, #4
    6e8c:	1ac0      	subs	r0, r0, r3
    6e8e:	4152      	adcs	r2, r2
    6e90:	08c3      	lsrs	r3, r0, #3
    6e92:	428b      	cmp	r3, r1
    6e94:	d301      	bcc.n	6e9a <__divsi3+0xde>
    6e96:	00cb      	lsls	r3, r1, #3
    6e98:	1ac0      	subs	r0, r0, r3
    6e9a:	4152      	adcs	r2, r2
    6e9c:	0883      	lsrs	r3, r0, #2
    6e9e:	428b      	cmp	r3, r1
    6ea0:	d301      	bcc.n	6ea6 <__divsi3+0xea>
    6ea2:	008b      	lsls	r3, r1, #2
    6ea4:	1ac0      	subs	r0, r0, r3
    6ea6:	4152      	adcs	r2, r2
    6ea8:	0843      	lsrs	r3, r0, #1
    6eaa:	428b      	cmp	r3, r1
    6eac:	d301      	bcc.n	6eb2 <__divsi3+0xf6>
    6eae:	004b      	lsls	r3, r1, #1
    6eb0:	1ac0      	subs	r0, r0, r3
    6eb2:	4152      	adcs	r2, r2
    6eb4:	1a41      	subs	r1, r0, r1
    6eb6:	d200      	bcs.n	6eba <__divsi3+0xfe>
    6eb8:	4601      	mov	r1, r0
    6eba:	4152      	adcs	r2, r2
    6ebc:	4610      	mov	r0, r2
    6ebe:	4770      	bx	lr
    6ec0:	e05d      	b.n	6f7e <__divsi3+0x1c2>
    6ec2:	0fca      	lsrs	r2, r1, #31
    6ec4:	d000      	beq.n	6ec8 <__divsi3+0x10c>
    6ec6:	4249      	negs	r1, r1
    6ec8:	1003      	asrs	r3, r0, #32
    6eca:	d300      	bcc.n	6ece <__divsi3+0x112>
    6ecc:	4240      	negs	r0, r0
    6ece:	4053      	eors	r3, r2
    6ed0:	2200      	movs	r2, #0
    6ed2:	469c      	mov	ip, r3
    6ed4:	0903      	lsrs	r3, r0, #4
    6ed6:	428b      	cmp	r3, r1
    6ed8:	d32d      	bcc.n	6f36 <__divsi3+0x17a>
    6eda:	0a03      	lsrs	r3, r0, #8
    6edc:	428b      	cmp	r3, r1
    6ede:	d312      	bcc.n	6f06 <__divsi3+0x14a>
    6ee0:	22fc      	movs	r2, #252	; 0xfc
    6ee2:	0189      	lsls	r1, r1, #6
    6ee4:	ba12      	rev	r2, r2
    6ee6:	0a03      	lsrs	r3, r0, #8
    6ee8:	428b      	cmp	r3, r1
    6eea:	d30c      	bcc.n	6f06 <__divsi3+0x14a>
    6eec:	0189      	lsls	r1, r1, #6
    6eee:	1192      	asrs	r2, r2, #6
    6ef0:	428b      	cmp	r3, r1
    6ef2:	d308      	bcc.n	6f06 <__divsi3+0x14a>
    6ef4:	0189      	lsls	r1, r1, #6
    6ef6:	1192      	asrs	r2, r2, #6
    6ef8:	428b      	cmp	r3, r1
    6efa:	d304      	bcc.n	6f06 <__divsi3+0x14a>
    6efc:	0189      	lsls	r1, r1, #6
    6efe:	d03a      	beq.n	6f76 <__divsi3+0x1ba>
    6f00:	1192      	asrs	r2, r2, #6
    6f02:	e000      	b.n	6f06 <__divsi3+0x14a>
    6f04:	0989      	lsrs	r1, r1, #6
    6f06:	09c3      	lsrs	r3, r0, #7
    6f08:	428b      	cmp	r3, r1
    6f0a:	d301      	bcc.n	6f10 <__divsi3+0x154>
    6f0c:	01cb      	lsls	r3, r1, #7
    6f0e:	1ac0      	subs	r0, r0, r3
    6f10:	4152      	adcs	r2, r2
    6f12:	0983      	lsrs	r3, r0, #6
    6f14:	428b      	cmp	r3, r1
    6f16:	d301      	bcc.n	6f1c <__divsi3+0x160>
    6f18:	018b      	lsls	r3, r1, #6
    6f1a:	1ac0      	subs	r0, r0, r3
    6f1c:	4152      	adcs	r2, r2
    6f1e:	0943      	lsrs	r3, r0, #5
    6f20:	428b      	cmp	r3, r1
    6f22:	d301      	bcc.n	6f28 <__divsi3+0x16c>
    6f24:	014b      	lsls	r3, r1, #5
    6f26:	1ac0      	subs	r0, r0, r3
    6f28:	4152      	adcs	r2, r2
    6f2a:	0903      	lsrs	r3, r0, #4
    6f2c:	428b      	cmp	r3, r1
    6f2e:	d301      	bcc.n	6f34 <__divsi3+0x178>
    6f30:	010b      	lsls	r3, r1, #4
    6f32:	1ac0      	subs	r0, r0, r3
    6f34:	4152      	adcs	r2, r2
    6f36:	08c3      	lsrs	r3, r0, #3
    6f38:	428b      	cmp	r3, r1
    6f3a:	d301      	bcc.n	6f40 <__divsi3+0x184>
    6f3c:	00cb      	lsls	r3, r1, #3
    6f3e:	1ac0      	subs	r0, r0, r3
    6f40:	4152      	adcs	r2, r2
    6f42:	0883      	lsrs	r3, r0, #2
    6f44:	428b      	cmp	r3, r1
    6f46:	d301      	bcc.n	6f4c <__divsi3+0x190>
    6f48:	008b      	lsls	r3, r1, #2
    6f4a:	1ac0      	subs	r0, r0, r3
    6f4c:	4152      	adcs	r2, r2
    6f4e:	d2d9      	bcs.n	6f04 <__divsi3+0x148>
    6f50:	0843      	lsrs	r3, r0, #1
    6f52:	428b      	cmp	r3, r1
    6f54:	d301      	bcc.n	6f5a <__divsi3+0x19e>
    6f56:	004b      	lsls	r3, r1, #1
    6f58:	1ac0      	subs	r0, r0, r3
    6f5a:	4152      	adcs	r2, r2
    6f5c:	1a41      	subs	r1, r0, r1
    6f5e:	d200      	bcs.n	6f62 <__divsi3+0x1a6>
    6f60:	4601      	mov	r1, r0
    6f62:	4663      	mov	r3, ip
    6f64:	4152      	adcs	r2, r2
    6f66:	105b      	asrs	r3, r3, #1
    6f68:	4610      	mov	r0, r2
    6f6a:	d301      	bcc.n	6f70 <__divsi3+0x1b4>
    6f6c:	4240      	negs	r0, r0
    6f6e:	2b00      	cmp	r3, #0
    6f70:	d500      	bpl.n	6f74 <__divsi3+0x1b8>
    6f72:	4249      	negs	r1, r1
    6f74:	4770      	bx	lr
    6f76:	4663      	mov	r3, ip
    6f78:	105b      	asrs	r3, r3, #1
    6f7a:	d300      	bcc.n	6f7e <__divsi3+0x1c2>
    6f7c:	4240      	negs	r0, r0
    6f7e:	b501      	push	{r0, lr}
    6f80:	2000      	movs	r0, #0
    6f82:	f000 f805 	bl	6f90 <__aeabi_idiv0>
    6f86:	bd02      	pop	{r1, pc}

00006f88 <__aeabi_idivmod>:
__aeabi_idivmod():
    6f88:	2900      	cmp	r1, #0
    6f8a:	d0f8      	beq.n	6f7e <__divsi3+0x1c2>
    6f8c:	e716      	b.n	6dbc <__divsi3>
    6f8e:	4770      	bx	lr

00006f90 <__aeabi_idiv0>:
__aeabi_idiv0():
    6f90:	4770      	bx	lr
    6f92:	46c0      	nop			; (mov r8, r8)

00006f94 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    6f94:	4684      	mov	ip, r0
    6f96:	1c10      	adds	r0, r2, #0
    6f98:	4662      	mov	r2, ip
    6f9a:	468c      	mov	ip, r1
    6f9c:	1c19      	adds	r1, r3, #0
    6f9e:	4663      	mov	r3, ip
    6fa0:	e000      	b.n	6fa4 <__aeabi_cdcmpeq>
    6fa2:	46c0      	nop			; (mov r8, r8)

00006fa4 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    6fa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6fa6:	f001 fd57 	bl	8a58 <__ledf2>
    6faa:	2800      	cmp	r0, #0
    6fac:	d401      	bmi.n	6fb2 <__aeabi_cdcmpeq+0xe>
    6fae:	2100      	movs	r1, #0
    6fb0:	42c8      	cmn	r0, r1
    6fb2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006fb4 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    6fb4:	b510      	push	{r4, lr}
    6fb6:	f001 fcaf 	bl	8918 <__eqdf2>
    6fba:	4240      	negs	r0, r0
    6fbc:	3001      	adds	r0, #1
    6fbe:	bd10      	pop	{r4, pc}

00006fc0 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    6fc0:	b510      	push	{r4, lr}
    6fc2:	f001 fd49 	bl	8a58 <__ledf2>
    6fc6:	2800      	cmp	r0, #0
    6fc8:	db01      	blt.n	6fce <__aeabi_dcmplt+0xe>
    6fca:	2000      	movs	r0, #0
    6fcc:	bd10      	pop	{r4, pc}
    6fce:	2001      	movs	r0, #1
    6fd0:	bd10      	pop	{r4, pc}
    6fd2:	46c0      	nop			; (mov r8, r8)

00006fd4 <__aeabi_dcmple>:
__aeabi_dcmple():
    6fd4:	b510      	push	{r4, lr}
    6fd6:	f001 fd3f 	bl	8a58 <__ledf2>
    6fda:	2800      	cmp	r0, #0
    6fdc:	dd01      	ble.n	6fe2 <__aeabi_dcmple+0xe>
    6fde:	2000      	movs	r0, #0
    6fe0:	bd10      	pop	{r4, pc}
    6fe2:	2001      	movs	r0, #1
    6fe4:	bd10      	pop	{r4, pc}
    6fe6:	46c0      	nop			; (mov r8, r8)

00006fe8 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    6fe8:	b510      	push	{r4, lr}
    6fea:	f001 fcd1 	bl	8990 <__gedf2>
    6fee:	2800      	cmp	r0, #0
    6ff0:	dc01      	bgt.n	6ff6 <__aeabi_dcmpgt+0xe>
    6ff2:	2000      	movs	r0, #0
    6ff4:	bd10      	pop	{r4, pc}
    6ff6:	2001      	movs	r0, #1
    6ff8:	bd10      	pop	{r4, pc}
    6ffa:	46c0      	nop			; (mov r8, r8)

00006ffc <__aeabi_dcmpge>:
__aeabi_dcmpge():
    6ffc:	b510      	push	{r4, lr}
    6ffe:	f001 fcc7 	bl	8990 <__gedf2>
    7002:	2800      	cmp	r0, #0
    7004:	da01      	bge.n	700a <__aeabi_dcmpge+0xe>
    7006:	2000      	movs	r0, #0
    7008:	bd10      	pop	{r4, pc}
    700a:	2001      	movs	r0, #1
    700c:	bd10      	pop	{r4, pc}
    700e:	46c0      	nop			; (mov r8, r8)

00007010 <__aeabi_cfrcmple>:
__aeabi_cfrcmple():
    7010:	4684      	mov	ip, r0
    7012:	1c08      	adds	r0, r1, #0
    7014:	4661      	mov	r1, ip
    7016:	e7ff      	b.n	7018 <__aeabi_cfcmpeq>

00007018 <__aeabi_cfcmpeq>:
__aeabi_cfcmpeq():
    7018:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    701a:	f000 fad9 	bl	75d0 <__lesf2>
    701e:	2800      	cmp	r0, #0
    7020:	d401      	bmi.n	7026 <__aeabi_cfcmpeq+0xe>
    7022:	2100      	movs	r1, #0
    7024:	42c8      	cmn	r0, r1
    7026:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00007028 <__aeabi_fcmpeq>:
__aeabi_fcmpeq():
    7028:	b510      	push	{r4, lr}
    702a:	f000 fa5b 	bl	74e4 <__eqsf2>
    702e:	4240      	negs	r0, r0
    7030:	3001      	adds	r0, #1
    7032:	bd10      	pop	{r4, pc}

00007034 <__aeabi_fcmplt>:
__aeabi_fcmplt():
    7034:	b510      	push	{r4, lr}
    7036:	f000 facb 	bl	75d0 <__lesf2>
    703a:	2800      	cmp	r0, #0
    703c:	db01      	blt.n	7042 <__aeabi_fcmplt+0xe>
    703e:	2000      	movs	r0, #0
    7040:	bd10      	pop	{r4, pc}
    7042:	2001      	movs	r0, #1
    7044:	bd10      	pop	{r4, pc}
    7046:	46c0      	nop			; (mov r8, r8)

00007048 <__aeabi_fcmple>:
__aeabi_fcmple():
    7048:	b510      	push	{r4, lr}
    704a:	f000 fac1 	bl	75d0 <__lesf2>
    704e:	2800      	cmp	r0, #0
    7050:	dd01      	ble.n	7056 <__aeabi_fcmple+0xe>
    7052:	2000      	movs	r0, #0
    7054:	bd10      	pop	{r4, pc}
    7056:	2001      	movs	r0, #1
    7058:	bd10      	pop	{r4, pc}
    705a:	46c0      	nop			; (mov r8, r8)

0000705c <__aeabi_fcmpgt>:
__aeabi_fcmpgt():
    705c:	b510      	push	{r4, lr}
    705e:	f000 fa69 	bl	7534 <__gesf2>
    7062:	2800      	cmp	r0, #0
    7064:	dc01      	bgt.n	706a <__aeabi_fcmpgt+0xe>
    7066:	2000      	movs	r0, #0
    7068:	bd10      	pop	{r4, pc}
    706a:	2001      	movs	r0, #1
    706c:	bd10      	pop	{r4, pc}
    706e:	46c0      	nop			; (mov r8, r8)

00007070 <__aeabi_fcmpge>:
__aeabi_fcmpge():
    7070:	b510      	push	{r4, lr}
    7072:	f000 fa5f 	bl	7534 <__gesf2>
    7076:	2800      	cmp	r0, #0
    7078:	da01      	bge.n	707e <__aeabi_fcmpge+0xe>
    707a:	2000      	movs	r0, #0
    707c:	bd10      	pop	{r4, pc}
    707e:	2001      	movs	r0, #1
    7080:	bd10      	pop	{r4, pc}
    7082:	46c0      	nop			; (mov r8, r8)

00007084 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    7084:	2b00      	cmp	r3, #0
    7086:	d111      	bne.n	70ac <__aeabi_uldivmod+0x28>
    7088:	2a00      	cmp	r2, #0
    708a:	d10f      	bne.n	70ac <__aeabi_uldivmod+0x28>
    708c:	2900      	cmp	r1, #0
    708e:	d100      	bne.n	7092 <__aeabi_uldivmod+0xe>
    7090:	2800      	cmp	r0, #0
    7092:	d002      	beq.n	709a <__aeabi_uldivmod+0x16>
    7094:	2100      	movs	r1, #0
    7096:	43c9      	mvns	r1, r1
    7098:	1c08      	adds	r0, r1, #0
    709a:	b407      	push	{r0, r1, r2}
    709c:	4802      	ldr	r0, [pc, #8]	; (70a8 <__aeabi_uldivmod+0x24>)
    709e:	a102      	add	r1, pc, #8	; (adr r1, 70a8 <__aeabi_uldivmod+0x24>)
    70a0:	1840      	adds	r0, r0, r1
    70a2:	9002      	str	r0, [sp, #8]
    70a4:	bd03      	pop	{r0, r1, pc}
    70a6:	46c0      	nop			; (mov r8, r8)
    70a8:	fffffee9 	.word	0xfffffee9
    70ac:	b403      	push	{r0, r1}
    70ae:	4668      	mov	r0, sp
    70b0:	b501      	push	{r0, lr}
    70b2:	9802      	ldr	r0, [sp, #8]
    70b4:	f000 f842 	bl	713c <__udivmoddi4>
    70b8:	9b01      	ldr	r3, [sp, #4]
    70ba:	469e      	mov	lr, r3
    70bc:	b002      	add	sp, #8
    70be:	bc0c      	pop	{r2, r3}
    70c0:	4770      	bx	lr
    70c2:	46c0      	nop			; (mov r8, r8)

000070c4 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    70c4:	b570      	push	{r4, r5, r6, lr}
    70c6:	2200      	movs	r2, #0
    70c8:	4b0c      	ldr	r3, [pc, #48]	; (70fc <__aeabi_d2uiz+0x38>)
    70ca:	0004      	movs	r4, r0
    70cc:	000d      	movs	r5, r1
    70ce:	f7ff ff95 	bl	6ffc <__aeabi_dcmpge>
    70d2:	2800      	cmp	r0, #0
    70d4:	d104      	bne.n	70e0 <__aeabi_d2uiz+0x1c>
    70d6:	0020      	movs	r0, r4
    70d8:	0029      	movs	r1, r5
    70da:	f002 fafb 	bl	96d4 <__aeabi_d2iz>
    70de:	bd70      	pop	{r4, r5, r6, pc}
    70e0:	4b06      	ldr	r3, [pc, #24]	; (70fc <__aeabi_d2uiz+0x38>)
    70e2:	2200      	movs	r2, #0
    70e4:	0020      	movs	r0, r4
    70e6:	0029      	movs	r1, r5
    70e8:	f001 ff90 	bl	900c <__aeabi_dsub>
    70ec:	f002 faf2 	bl	96d4 <__aeabi_d2iz>
    70f0:	2380      	movs	r3, #128	; 0x80
    70f2:	061b      	lsls	r3, r3, #24
    70f4:	469c      	mov	ip, r3
    70f6:	4460      	add	r0, ip
    70f8:	e7f1      	b.n	70de <__aeabi_d2uiz+0x1a>
    70fa:	46c0      	nop			; (mov r8, r8)
    70fc:	41e00000 	.word	0x41e00000

00007100 <__aeabi_d2ulz>:
__fixunsdfdi():
    7100:	b570      	push	{r4, r5, r6, lr}
    7102:	2200      	movs	r2, #0
    7104:	4b0b      	ldr	r3, [pc, #44]	; (7134 <__aeabi_d2ulz+0x34>)
    7106:	000d      	movs	r5, r1
    7108:	0004      	movs	r4, r0
    710a:	f001 fd0d 	bl	8b28 <__aeabi_dmul>
    710e:	f7ff ffd9 	bl	70c4 <__aeabi_d2uiz>
    7112:	0006      	movs	r6, r0
    7114:	f002 fb4e 	bl	97b4 <__aeabi_ui2d>
    7118:	2200      	movs	r2, #0
    711a:	4b07      	ldr	r3, [pc, #28]	; (7138 <__aeabi_d2ulz+0x38>)
    711c:	f001 fd04 	bl	8b28 <__aeabi_dmul>
    7120:	0002      	movs	r2, r0
    7122:	000b      	movs	r3, r1
    7124:	0020      	movs	r0, r4
    7126:	0029      	movs	r1, r5
    7128:	f001 ff70 	bl	900c <__aeabi_dsub>
    712c:	f7ff ffca 	bl	70c4 <__aeabi_d2uiz>
    7130:	0031      	movs	r1, r6
    7132:	bd70      	pop	{r4, r5, r6, pc}
    7134:	3df00000 	.word	0x3df00000
    7138:	41f00000 	.word	0x41f00000

0000713c <__udivmoddi4>:
__udivmoddi4():
    713c:	b5f0      	push	{r4, r5, r6, r7, lr}
    713e:	464f      	mov	r7, r9
    7140:	4646      	mov	r6, r8
    7142:	46d6      	mov	lr, sl
    7144:	b5c0      	push	{r6, r7, lr}
    7146:	0004      	movs	r4, r0
    7148:	b082      	sub	sp, #8
    714a:	000d      	movs	r5, r1
    714c:	4691      	mov	r9, r2
    714e:	4698      	mov	r8, r3
    7150:	428b      	cmp	r3, r1
    7152:	d82f      	bhi.n	71b4 <__udivmoddi4+0x78>
    7154:	d02c      	beq.n	71b0 <__udivmoddi4+0x74>
    7156:	4641      	mov	r1, r8
    7158:	4648      	mov	r0, r9
    715a:	f002 fc51 	bl	9a00 <__clzdi2>
    715e:	0029      	movs	r1, r5
    7160:	0006      	movs	r6, r0
    7162:	0020      	movs	r0, r4
    7164:	f002 fc4c 	bl	9a00 <__clzdi2>
    7168:	1a33      	subs	r3, r6, r0
    716a:	469c      	mov	ip, r3
    716c:	3b20      	subs	r3, #32
    716e:	469a      	mov	sl, r3
    7170:	d500      	bpl.n	7174 <__udivmoddi4+0x38>
    7172:	e076      	b.n	7262 <__udivmoddi4+0x126>
    7174:	464b      	mov	r3, r9
    7176:	4652      	mov	r2, sl
    7178:	4093      	lsls	r3, r2
    717a:	001f      	movs	r7, r3
    717c:	464b      	mov	r3, r9
    717e:	4662      	mov	r2, ip
    7180:	4093      	lsls	r3, r2
    7182:	001e      	movs	r6, r3
    7184:	42af      	cmp	r7, r5
    7186:	d828      	bhi.n	71da <__udivmoddi4+0x9e>
    7188:	d025      	beq.n	71d6 <__udivmoddi4+0x9a>
    718a:	4653      	mov	r3, sl
    718c:	1ba4      	subs	r4, r4, r6
    718e:	41bd      	sbcs	r5, r7
    7190:	2b00      	cmp	r3, #0
    7192:	da00      	bge.n	7196 <__udivmoddi4+0x5a>
    7194:	e07b      	b.n	728e <__udivmoddi4+0x152>
    7196:	2200      	movs	r2, #0
    7198:	2300      	movs	r3, #0
    719a:	9200      	str	r2, [sp, #0]
    719c:	9301      	str	r3, [sp, #4]
    719e:	2301      	movs	r3, #1
    71a0:	4652      	mov	r2, sl
    71a2:	4093      	lsls	r3, r2
    71a4:	9301      	str	r3, [sp, #4]
    71a6:	2301      	movs	r3, #1
    71a8:	4662      	mov	r2, ip
    71aa:	4093      	lsls	r3, r2
    71ac:	9300      	str	r3, [sp, #0]
    71ae:	e018      	b.n	71e2 <__udivmoddi4+0xa6>
    71b0:	4282      	cmp	r2, r0
    71b2:	d9d0      	bls.n	7156 <__udivmoddi4+0x1a>
    71b4:	2200      	movs	r2, #0
    71b6:	2300      	movs	r3, #0
    71b8:	9200      	str	r2, [sp, #0]
    71ba:	9301      	str	r3, [sp, #4]
    71bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    71be:	2b00      	cmp	r3, #0
    71c0:	d001      	beq.n	71c6 <__udivmoddi4+0x8a>
    71c2:	601c      	str	r4, [r3, #0]
    71c4:	605d      	str	r5, [r3, #4]
    71c6:	9800      	ldr	r0, [sp, #0]
    71c8:	9901      	ldr	r1, [sp, #4]
    71ca:	b002      	add	sp, #8
    71cc:	bc1c      	pop	{r2, r3, r4}
    71ce:	4690      	mov	r8, r2
    71d0:	4699      	mov	r9, r3
    71d2:	46a2      	mov	sl, r4
    71d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    71d6:	42a3      	cmp	r3, r4
    71d8:	d9d7      	bls.n	718a <__udivmoddi4+0x4e>
    71da:	2200      	movs	r2, #0
    71dc:	2300      	movs	r3, #0
    71de:	9200      	str	r2, [sp, #0]
    71e0:	9301      	str	r3, [sp, #4]
    71e2:	4663      	mov	r3, ip
    71e4:	2b00      	cmp	r3, #0
    71e6:	d0e9      	beq.n	71bc <__udivmoddi4+0x80>
    71e8:	07fb      	lsls	r3, r7, #31
    71ea:	4698      	mov	r8, r3
    71ec:	4641      	mov	r1, r8
    71ee:	0872      	lsrs	r2, r6, #1
    71f0:	430a      	orrs	r2, r1
    71f2:	087b      	lsrs	r3, r7, #1
    71f4:	4666      	mov	r6, ip
    71f6:	e00e      	b.n	7216 <__udivmoddi4+0xda>
    71f8:	42ab      	cmp	r3, r5
    71fa:	d101      	bne.n	7200 <__udivmoddi4+0xc4>
    71fc:	42a2      	cmp	r2, r4
    71fe:	d80c      	bhi.n	721a <__udivmoddi4+0xde>
    7200:	1aa4      	subs	r4, r4, r2
    7202:	419d      	sbcs	r5, r3
    7204:	2001      	movs	r0, #1
    7206:	1924      	adds	r4, r4, r4
    7208:	416d      	adcs	r5, r5
    720a:	2100      	movs	r1, #0
    720c:	3e01      	subs	r6, #1
    720e:	1824      	adds	r4, r4, r0
    7210:	414d      	adcs	r5, r1
    7212:	2e00      	cmp	r6, #0
    7214:	d006      	beq.n	7224 <__udivmoddi4+0xe8>
    7216:	42ab      	cmp	r3, r5
    7218:	d9ee      	bls.n	71f8 <__udivmoddi4+0xbc>
    721a:	3e01      	subs	r6, #1
    721c:	1924      	adds	r4, r4, r4
    721e:	416d      	adcs	r5, r5
    7220:	2e00      	cmp	r6, #0
    7222:	d1f8      	bne.n	7216 <__udivmoddi4+0xda>
    7224:	9800      	ldr	r0, [sp, #0]
    7226:	9901      	ldr	r1, [sp, #4]
    7228:	4653      	mov	r3, sl
    722a:	1900      	adds	r0, r0, r4
    722c:	4169      	adcs	r1, r5
    722e:	2b00      	cmp	r3, #0
    7230:	db23      	blt.n	727a <__udivmoddi4+0x13e>
    7232:	002b      	movs	r3, r5
    7234:	4652      	mov	r2, sl
    7236:	40d3      	lsrs	r3, r2
    7238:	002a      	movs	r2, r5
    723a:	4664      	mov	r4, ip
    723c:	40e2      	lsrs	r2, r4
    723e:	001c      	movs	r4, r3
    7240:	4653      	mov	r3, sl
    7242:	0015      	movs	r5, r2
    7244:	2b00      	cmp	r3, #0
    7246:	db2d      	blt.n	72a4 <__udivmoddi4+0x168>
    7248:	0026      	movs	r6, r4
    724a:	4657      	mov	r7, sl
    724c:	40be      	lsls	r6, r7
    724e:	0033      	movs	r3, r6
    7250:	0026      	movs	r6, r4
    7252:	4667      	mov	r7, ip
    7254:	40be      	lsls	r6, r7
    7256:	0032      	movs	r2, r6
    7258:	1a80      	subs	r0, r0, r2
    725a:	4199      	sbcs	r1, r3
    725c:	9000      	str	r0, [sp, #0]
    725e:	9101      	str	r1, [sp, #4]
    7260:	e7ac      	b.n	71bc <__udivmoddi4+0x80>
    7262:	4662      	mov	r2, ip
    7264:	2320      	movs	r3, #32
    7266:	1a9b      	subs	r3, r3, r2
    7268:	464a      	mov	r2, r9
    726a:	40da      	lsrs	r2, r3
    726c:	4661      	mov	r1, ip
    726e:	0013      	movs	r3, r2
    7270:	4642      	mov	r2, r8
    7272:	408a      	lsls	r2, r1
    7274:	0017      	movs	r7, r2
    7276:	431f      	orrs	r7, r3
    7278:	e780      	b.n	717c <__udivmoddi4+0x40>
    727a:	4662      	mov	r2, ip
    727c:	2320      	movs	r3, #32
    727e:	1a9b      	subs	r3, r3, r2
    7280:	002a      	movs	r2, r5
    7282:	4666      	mov	r6, ip
    7284:	409a      	lsls	r2, r3
    7286:	0023      	movs	r3, r4
    7288:	40f3      	lsrs	r3, r6
    728a:	4313      	orrs	r3, r2
    728c:	e7d4      	b.n	7238 <__udivmoddi4+0xfc>
    728e:	4662      	mov	r2, ip
    7290:	2320      	movs	r3, #32
    7292:	2100      	movs	r1, #0
    7294:	1a9b      	subs	r3, r3, r2
    7296:	2200      	movs	r2, #0
    7298:	9100      	str	r1, [sp, #0]
    729a:	9201      	str	r2, [sp, #4]
    729c:	2201      	movs	r2, #1
    729e:	40da      	lsrs	r2, r3
    72a0:	9201      	str	r2, [sp, #4]
    72a2:	e780      	b.n	71a6 <__udivmoddi4+0x6a>
    72a4:	2320      	movs	r3, #32
    72a6:	4662      	mov	r2, ip
    72a8:	0026      	movs	r6, r4
    72aa:	1a9b      	subs	r3, r3, r2
    72ac:	40de      	lsrs	r6, r3
    72ae:	002f      	movs	r7, r5
    72b0:	46b0      	mov	r8, r6
    72b2:	4666      	mov	r6, ip
    72b4:	40b7      	lsls	r7, r6
    72b6:	4646      	mov	r6, r8
    72b8:	003b      	movs	r3, r7
    72ba:	4333      	orrs	r3, r6
    72bc:	e7c8      	b.n	7250 <__udivmoddi4+0x114>
    72be:	46c0      	nop			; (mov r8, r8)

000072c0 <__aeabi_fdiv>:
__aeabi_fdiv():
    72c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    72c2:	4657      	mov	r7, sl
    72c4:	464e      	mov	r6, r9
    72c6:	4645      	mov	r5, r8
    72c8:	46de      	mov	lr, fp
    72ca:	0244      	lsls	r4, r0, #9
    72cc:	b5e0      	push	{r5, r6, r7, lr}
    72ce:	0046      	lsls	r6, r0, #1
    72d0:	4688      	mov	r8, r1
    72d2:	0a64      	lsrs	r4, r4, #9
    72d4:	0e36      	lsrs	r6, r6, #24
    72d6:	0fc7      	lsrs	r7, r0, #31
    72d8:	2e00      	cmp	r6, #0
    72da:	d063      	beq.n	73a4 <__aeabi_fdiv+0xe4>
    72dc:	2eff      	cmp	r6, #255	; 0xff
    72de:	d024      	beq.n	732a <__aeabi_fdiv+0x6a>
    72e0:	2380      	movs	r3, #128	; 0x80
    72e2:	00e4      	lsls	r4, r4, #3
    72e4:	04db      	lsls	r3, r3, #19
    72e6:	431c      	orrs	r4, r3
    72e8:	2300      	movs	r3, #0
    72ea:	4699      	mov	r9, r3
    72ec:	469b      	mov	fp, r3
    72ee:	3e7f      	subs	r6, #127	; 0x7f
    72f0:	4643      	mov	r3, r8
    72f2:	4642      	mov	r2, r8
    72f4:	025d      	lsls	r5, r3, #9
    72f6:	0fd2      	lsrs	r2, r2, #31
    72f8:	005b      	lsls	r3, r3, #1
    72fa:	0a6d      	lsrs	r5, r5, #9
    72fc:	0e1b      	lsrs	r3, r3, #24
    72fe:	4690      	mov	r8, r2
    7300:	4692      	mov	sl, r2
    7302:	d065      	beq.n	73d0 <__aeabi_fdiv+0x110>
    7304:	2bff      	cmp	r3, #255	; 0xff
    7306:	d055      	beq.n	73b4 <__aeabi_fdiv+0xf4>
    7308:	2280      	movs	r2, #128	; 0x80
    730a:	2100      	movs	r1, #0
    730c:	00ed      	lsls	r5, r5, #3
    730e:	04d2      	lsls	r2, r2, #19
    7310:	3b7f      	subs	r3, #127	; 0x7f
    7312:	4315      	orrs	r5, r2
    7314:	1af6      	subs	r6, r6, r3
    7316:	4643      	mov	r3, r8
    7318:	464a      	mov	r2, r9
    731a:	407b      	eors	r3, r7
    731c:	2a0f      	cmp	r2, #15
    731e:	d900      	bls.n	7322 <__aeabi_fdiv+0x62>
    7320:	e08d      	b.n	743e <__aeabi_fdiv+0x17e>
    7322:	486d      	ldr	r0, [pc, #436]	; (74d8 <__aeabi_fdiv+0x218>)
    7324:	0092      	lsls	r2, r2, #2
    7326:	5882      	ldr	r2, [r0, r2]
    7328:	4697      	mov	pc, r2
    732a:	2c00      	cmp	r4, #0
    732c:	d154      	bne.n	73d8 <__aeabi_fdiv+0x118>
    732e:	2308      	movs	r3, #8
    7330:	4699      	mov	r9, r3
    7332:	3b06      	subs	r3, #6
    7334:	26ff      	movs	r6, #255	; 0xff
    7336:	469b      	mov	fp, r3
    7338:	e7da      	b.n	72f0 <__aeabi_fdiv+0x30>
    733a:	2500      	movs	r5, #0
    733c:	4653      	mov	r3, sl
    733e:	2902      	cmp	r1, #2
    7340:	d01b      	beq.n	737a <__aeabi_fdiv+0xba>
    7342:	2903      	cmp	r1, #3
    7344:	d100      	bne.n	7348 <__aeabi_fdiv+0x88>
    7346:	e0bf      	b.n	74c8 <__aeabi_fdiv+0x208>
    7348:	2901      	cmp	r1, #1
    734a:	d028      	beq.n	739e <__aeabi_fdiv+0xde>
    734c:	0030      	movs	r0, r6
    734e:	307f      	adds	r0, #127	; 0x7f
    7350:	2800      	cmp	r0, #0
    7352:	dd20      	ble.n	7396 <__aeabi_fdiv+0xd6>
    7354:	076a      	lsls	r2, r5, #29
    7356:	d004      	beq.n	7362 <__aeabi_fdiv+0xa2>
    7358:	220f      	movs	r2, #15
    735a:	402a      	ands	r2, r5
    735c:	2a04      	cmp	r2, #4
    735e:	d000      	beq.n	7362 <__aeabi_fdiv+0xa2>
    7360:	3504      	adds	r5, #4
    7362:	012a      	lsls	r2, r5, #4
    7364:	d503      	bpl.n	736e <__aeabi_fdiv+0xae>
    7366:	0030      	movs	r0, r6
    7368:	4a5c      	ldr	r2, [pc, #368]	; (74dc <__aeabi_fdiv+0x21c>)
    736a:	3080      	adds	r0, #128	; 0x80
    736c:	4015      	ands	r5, r2
    736e:	28fe      	cmp	r0, #254	; 0xfe
    7370:	dc03      	bgt.n	737a <__aeabi_fdiv+0xba>
    7372:	01ac      	lsls	r4, r5, #6
    7374:	0a64      	lsrs	r4, r4, #9
    7376:	b2c2      	uxtb	r2, r0
    7378:	e001      	b.n	737e <__aeabi_fdiv+0xbe>
    737a:	22ff      	movs	r2, #255	; 0xff
    737c:	2400      	movs	r4, #0
    737e:	0264      	lsls	r4, r4, #9
    7380:	05d2      	lsls	r2, r2, #23
    7382:	0a60      	lsrs	r0, r4, #9
    7384:	07db      	lsls	r3, r3, #31
    7386:	4310      	orrs	r0, r2
    7388:	4318      	orrs	r0, r3
    738a:	bc3c      	pop	{r2, r3, r4, r5}
    738c:	4690      	mov	r8, r2
    738e:	4699      	mov	r9, r3
    7390:	46a2      	mov	sl, r4
    7392:	46ab      	mov	fp, r5
    7394:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7396:	2201      	movs	r2, #1
    7398:	1a10      	subs	r0, r2, r0
    739a:	281b      	cmp	r0, #27
    739c:	dd7c      	ble.n	7498 <__aeabi_fdiv+0x1d8>
    739e:	2200      	movs	r2, #0
    73a0:	2400      	movs	r4, #0
    73a2:	e7ec      	b.n	737e <__aeabi_fdiv+0xbe>
    73a4:	2c00      	cmp	r4, #0
    73a6:	d11d      	bne.n	73e4 <__aeabi_fdiv+0x124>
    73a8:	2304      	movs	r3, #4
    73aa:	4699      	mov	r9, r3
    73ac:	3b03      	subs	r3, #3
    73ae:	2600      	movs	r6, #0
    73b0:	469b      	mov	fp, r3
    73b2:	e79d      	b.n	72f0 <__aeabi_fdiv+0x30>
    73b4:	3eff      	subs	r6, #255	; 0xff
    73b6:	2d00      	cmp	r5, #0
    73b8:	d120      	bne.n	73fc <__aeabi_fdiv+0x13c>
    73ba:	2102      	movs	r1, #2
    73bc:	4643      	mov	r3, r8
    73be:	464a      	mov	r2, r9
    73c0:	407b      	eors	r3, r7
    73c2:	430a      	orrs	r2, r1
    73c4:	2a0f      	cmp	r2, #15
    73c6:	d8d8      	bhi.n	737a <__aeabi_fdiv+0xba>
    73c8:	4845      	ldr	r0, [pc, #276]	; (74e0 <__aeabi_fdiv+0x220>)
    73ca:	0092      	lsls	r2, r2, #2
    73cc:	5882      	ldr	r2, [r0, r2]
    73ce:	4697      	mov	pc, r2
    73d0:	2d00      	cmp	r5, #0
    73d2:	d119      	bne.n	7408 <__aeabi_fdiv+0x148>
    73d4:	2101      	movs	r1, #1
    73d6:	e7f1      	b.n	73bc <__aeabi_fdiv+0xfc>
    73d8:	230c      	movs	r3, #12
    73da:	4699      	mov	r9, r3
    73dc:	3b09      	subs	r3, #9
    73de:	26ff      	movs	r6, #255	; 0xff
    73e0:	469b      	mov	fp, r3
    73e2:	e785      	b.n	72f0 <__aeabi_fdiv+0x30>
    73e4:	0020      	movs	r0, r4
    73e6:	f002 faed 	bl	99c4 <__clzsi2>
    73ea:	2676      	movs	r6, #118	; 0x76
    73ec:	1f43      	subs	r3, r0, #5
    73ee:	409c      	lsls	r4, r3
    73f0:	2300      	movs	r3, #0
    73f2:	4276      	negs	r6, r6
    73f4:	1a36      	subs	r6, r6, r0
    73f6:	4699      	mov	r9, r3
    73f8:	469b      	mov	fp, r3
    73fa:	e779      	b.n	72f0 <__aeabi_fdiv+0x30>
    73fc:	464a      	mov	r2, r9
    73fe:	2303      	movs	r3, #3
    7400:	431a      	orrs	r2, r3
    7402:	4691      	mov	r9, r2
    7404:	2103      	movs	r1, #3
    7406:	e786      	b.n	7316 <__aeabi_fdiv+0x56>
    7408:	0028      	movs	r0, r5
    740a:	f002 fadb 	bl	99c4 <__clzsi2>
    740e:	1f43      	subs	r3, r0, #5
    7410:	1836      	adds	r6, r6, r0
    7412:	409d      	lsls	r5, r3
    7414:	3676      	adds	r6, #118	; 0x76
    7416:	2100      	movs	r1, #0
    7418:	e77d      	b.n	7316 <__aeabi_fdiv+0x56>
    741a:	2480      	movs	r4, #128	; 0x80
    741c:	2300      	movs	r3, #0
    741e:	03e4      	lsls	r4, r4, #15
    7420:	22ff      	movs	r2, #255	; 0xff
    7422:	e7ac      	b.n	737e <__aeabi_fdiv+0xbe>
    7424:	2500      	movs	r5, #0
    7426:	2380      	movs	r3, #128	; 0x80
    7428:	03db      	lsls	r3, r3, #15
    742a:	421c      	tst	r4, r3
    742c:	d028      	beq.n	7480 <__aeabi_fdiv+0x1c0>
    742e:	421d      	tst	r5, r3
    7430:	d126      	bne.n	7480 <__aeabi_fdiv+0x1c0>
    7432:	432b      	orrs	r3, r5
    7434:	025c      	lsls	r4, r3, #9
    7436:	0a64      	lsrs	r4, r4, #9
    7438:	4643      	mov	r3, r8
    743a:	22ff      	movs	r2, #255	; 0xff
    743c:	e79f      	b.n	737e <__aeabi_fdiv+0xbe>
    743e:	0162      	lsls	r2, r4, #5
    7440:	016c      	lsls	r4, r5, #5
    7442:	42a2      	cmp	r2, r4
    7444:	d224      	bcs.n	7490 <__aeabi_fdiv+0x1d0>
    7446:	211b      	movs	r1, #27
    7448:	2500      	movs	r5, #0
    744a:	3e01      	subs	r6, #1
    744c:	2701      	movs	r7, #1
    744e:	0010      	movs	r0, r2
    7450:	006d      	lsls	r5, r5, #1
    7452:	0052      	lsls	r2, r2, #1
    7454:	2800      	cmp	r0, #0
    7456:	db01      	blt.n	745c <__aeabi_fdiv+0x19c>
    7458:	4294      	cmp	r4, r2
    745a:	d801      	bhi.n	7460 <__aeabi_fdiv+0x1a0>
    745c:	1b12      	subs	r2, r2, r4
    745e:	433d      	orrs	r5, r7
    7460:	3901      	subs	r1, #1
    7462:	2900      	cmp	r1, #0
    7464:	d1f3      	bne.n	744e <__aeabi_fdiv+0x18e>
    7466:	0014      	movs	r4, r2
    7468:	1e62      	subs	r2, r4, #1
    746a:	4194      	sbcs	r4, r2
    746c:	4325      	orrs	r5, r4
    746e:	e76d      	b.n	734c <__aeabi_fdiv+0x8c>
    7470:	46ba      	mov	sl, r7
    7472:	4659      	mov	r1, fp
    7474:	0025      	movs	r5, r4
    7476:	4653      	mov	r3, sl
    7478:	2902      	cmp	r1, #2
    747a:	d000      	beq.n	747e <__aeabi_fdiv+0x1be>
    747c:	e761      	b.n	7342 <__aeabi_fdiv+0x82>
    747e:	e77c      	b.n	737a <__aeabi_fdiv+0xba>
    7480:	2380      	movs	r3, #128	; 0x80
    7482:	03db      	lsls	r3, r3, #15
    7484:	431c      	orrs	r4, r3
    7486:	0264      	lsls	r4, r4, #9
    7488:	0a64      	lsrs	r4, r4, #9
    748a:	003b      	movs	r3, r7
    748c:	22ff      	movs	r2, #255	; 0xff
    748e:	e776      	b.n	737e <__aeabi_fdiv+0xbe>
    7490:	1b12      	subs	r2, r2, r4
    7492:	211a      	movs	r1, #26
    7494:	2501      	movs	r5, #1
    7496:	e7d9      	b.n	744c <__aeabi_fdiv+0x18c>
    7498:	369e      	adds	r6, #158	; 0x9e
    749a:	002a      	movs	r2, r5
    749c:	40b5      	lsls	r5, r6
    749e:	002c      	movs	r4, r5
    74a0:	40c2      	lsrs	r2, r0
    74a2:	1e65      	subs	r5, r4, #1
    74a4:	41ac      	sbcs	r4, r5
    74a6:	4314      	orrs	r4, r2
    74a8:	0762      	lsls	r2, r4, #29
    74aa:	d004      	beq.n	74b6 <__aeabi_fdiv+0x1f6>
    74ac:	220f      	movs	r2, #15
    74ae:	4022      	ands	r2, r4
    74b0:	2a04      	cmp	r2, #4
    74b2:	d000      	beq.n	74b6 <__aeabi_fdiv+0x1f6>
    74b4:	3404      	adds	r4, #4
    74b6:	0162      	lsls	r2, r4, #5
    74b8:	d403      	bmi.n	74c2 <__aeabi_fdiv+0x202>
    74ba:	01a4      	lsls	r4, r4, #6
    74bc:	0a64      	lsrs	r4, r4, #9
    74be:	2200      	movs	r2, #0
    74c0:	e75d      	b.n	737e <__aeabi_fdiv+0xbe>
    74c2:	2201      	movs	r2, #1
    74c4:	2400      	movs	r4, #0
    74c6:	e75a      	b.n	737e <__aeabi_fdiv+0xbe>
    74c8:	2480      	movs	r4, #128	; 0x80
    74ca:	03e4      	lsls	r4, r4, #15
    74cc:	432c      	orrs	r4, r5
    74ce:	0264      	lsls	r4, r4, #9
    74d0:	0a64      	lsrs	r4, r4, #9
    74d2:	22ff      	movs	r2, #255	; 0xff
    74d4:	e753      	b.n	737e <__aeabi_fdiv+0xbe>
    74d6:	46c0      	nop			; (mov r8, r8)
    74d8:	0000ae6c 	.word	0x0000ae6c
    74dc:	f7ffffff 	.word	0xf7ffffff
    74e0:	0000aeac 	.word	0x0000aeac

000074e4 <__eqsf2>:
__eqsf2():
    74e4:	b570      	push	{r4, r5, r6, lr}
    74e6:	0042      	lsls	r2, r0, #1
    74e8:	024e      	lsls	r6, r1, #9
    74ea:	004c      	lsls	r4, r1, #1
    74ec:	0245      	lsls	r5, r0, #9
    74ee:	0a6d      	lsrs	r5, r5, #9
    74f0:	0e12      	lsrs	r2, r2, #24
    74f2:	0fc3      	lsrs	r3, r0, #31
    74f4:	0a76      	lsrs	r6, r6, #9
    74f6:	0e24      	lsrs	r4, r4, #24
    74f8:	0fc9      	lsrs	r1, r1, #31
    74fa:	2aff      	cmp	r2, #255	; 0xff
    74fc:	d00f      	beq.n	751e <__eqsf2+0x3a>
    74fe:	2cff      	cmp	r4, #255	; 0xff
    7500:	d011      	beq.n	7526 <__eqsf2+0x42>
    7502:	2001      	movs	r0, #1
    7504:	42a2      	cmp	r2, r4
    7506:	d000      	beq.n	750a <__eqsf2+0x26>
    7508:	bd70      	pop	{r4, r5, r6, pc}
    750a:	42b5      	cmp	r5, r6
    750c:	d1fc      	bne.n	7508 <__eqsf2+0x24>
    750e:	428b      	cmp	r3, r1
    7510:	d00d      	beq.n	752e <__eqsf2+0x4a>
    7512:	2a00      	cmp	r2, #0
    7514:	d1f8      	bne.n	7508 <__eqsf2+0x24>
    7516:	0028      	movs	r0, r5
    7518:	1e45      	subs	r5, r0, #1
    751a:	41a8      	sbcs	r0, r5
    751c:	e7f4      	b.n	7508 <__eqsf2+0x24>
    751e:	2001      	movs	r0, #1
    7520:	2d00      	cmp	r5, #0
    7522:	d1f1      	bne.n	7508 <__eqsf2+0x24>
    7524:	e7eb      	b.n	74fe <__eqsf2+0x1a>
    7526:	2001      	movs	r0, #1
    7528:	2e00      	cmp	r6, #0
    752a:	d1ed      	bne.n	7508 <__eqsf2+0x24>
    752c:	e7e9      	b.n	7502 <__eqsf2+0x1e>
    752e:	2000      	movs	r0, #0
    7530:	e7ea      	b.n	7508 <__eqsf2+0x24>
    7532:	46c0      	nop			; (mov r8, r8)

00007534 <__gesf2>:
__gesf2():
    7534:	b570      	push	{r4, r5, r6, lr}
    7536:	004a      	lsls	r2, r1, #1
    7538:	024e      	lsls	r6, r1, #9
    753a:	0245      	lsls	r5, r0, #9
    753c:	0044      	lsls	r4, r0, #1
    753e:	0a6d      	lsrs	r5, r5, #9
    7540:	0e24      	lsrs	r4, r4, #24
    7542:	0fc3      	lsrs	r3, r0, #31
    7544:	0a76      	lsrs	r6, r6, #9
    7546:	0e12      	lsrs	r2, r2, #24
    7548:	0fc9      	lsrs	r1, r1, #31
    754a:	2cff      	cmp	r4, #255	; 0xff
    754c:	d015      	beq.n	757a <__gesf2+0x46>
    754e:	2aff      	cmp	r2, #255	; 0xff
    7550:	d00e      	beq.n	7570 <__gesf2+0x3c>
    7552:	2c00      	cmp	r4, #0
    7554:	d115      	bne.n	7582 <__gesf2+0x4e>
    7556:	2a00      	cmp	r2, #0
    7558:	d101      	bne.n	755e <__gesf2+0x2a>
    755a:	2e00      	cmp	r6, #0
    755c:	d01c      	beq.n	7598 <__gesf2+0x64>
    755e:	2d00      	cmp	r5, #0
    7560:	d014      	beq.n	758c <__gesf2+0x58>
    7562:	428b      	cmp	r3, r1
    7564:	d027      	beq.n	75b6 <__gesf2+0x82>
    7566:	2002      	movs	r0, #2
    7568:	3b01      	subs	r3, #1
    756a:	4018      	ands	r0, r3
    756c:	3801      	subs	r0, #1
    756e:	bd70      	pop	{r4, r5, r6, pc}
    7570:	2e00      	cmp	r6, #0
    7572:	d0ee      	beq.n	7552 <__gesf2+0x1e>
    7574:	2002      	movs	r0, #2
    7576:	4240      	negs	r0, r0
    7578:	e7f9      	b.n	756e <__gesf2+0x3a>
    757a:	2d00      	cmp	r5, #0
    757c:	d1fa      	bne.n	7574 <__gesf2+0x40>
    757e:	2aff      	cmp	r2, #255	; 0xff
    7580:	d00e      	beq.n	75a0 <__gesf2+0x6c>
    7582:	2a00      	cmp	r2, #0
    7584:	d10e      	bne.n	75a4 <__gesf2+0x70>
    7586:	2e00      	cmp	r6, #0
    7588:	d0ed      	beq.n	7566 <__gesf2+0x32>
    758a:	e00b      	b.n	75a4 <__gesf2+0x70>
    758c:	2301      	movs	r3, #1
    758e:	3901      	subs	r1, #1
    7590:	4399      	bics	r1, r3
    7592:	0008      	movs	r0, r1
    7594:	3001      	adds	r0, #1
    7596:	e7ea      	b.n	756e <__gesf2+0x3a>
    7598:	2000      	movs	r0, #0
    759a:	2d00      	cmp	r5, #0
    759c:	d0e7      	beq.n	756e <__gesf2+0x3a>
    759e:	e7e2      	b.n	7566 <__gesf2+0x32>
    75a0:	2e00      	cmp	r6, #0
    75a2:	d1e7      	bne.n	7574 <__gesf2+0x40>
    75a4:	428b      	cmp	r3, r1
    75a6:	d1de      	bne.n	7566 <__gesf2+0x32>
    75a8:	4294      	cmp	r4, r2
    75aa:	dd05      	ble.n	75b8 <__gesf2+0x84>
    75ac:	2102      	movs	r1, #2
    75ae:	1e58      	subs	r0, r3, #1
    75b0:	4008      	ands	r0, r1
    75b2:	3801      	subs	r0, #1
    75b4:	e7db      	b.n	756e <__gesf2+0x3a>
    75b6:	2400      	movs	r4, #0
    75b8:	42a2      	cmp	r2, r4
    75ba:	dc04      	bgt.n	75c6 <__gesf2+0x92>
    75bc:	42b5      	cmp	r5, r6
    75be:	d8d2      	bhi.n	7566 <__gesf2+0x32>
    75c0:	2000      	movs	r0, #0
    75c2:	42b5      	cmp	r5, r6
    75c4:	d2d3      	bcs.n	756e <__gesf2+0x3a>
    75c6:	1e58      	subs	r0, r3, #1
    75c8:	2301      	movs	r3, #1
    75ca:	4398      	bics	r0, r3
    75cc:	3001      	adds	r0, #1
    75ce:	e7ce      	b.n	756e <__gesf2+0x3a>

000075d0 <__lesf2>:
__ltsf2():
    75d0:	b530      	push	{r4, r5, lr}
    75d2:	0042      	lsls	r2, r0, #1
    75d4:	0244      	lsls	r4, r0, #9
    75d6:	024d      	lsls	r5, r1, #9
    75d8:	0fc3      	lsrs	r3, r0, #31
    75da:	0048      	lsls	r0, r1, #1
    75dc:	0a64      	lsrs	r4, r4, #9
    75de:	0e12      	lsrs	r2, r2, #24
    75e0:	0a6d      	lsrs	r5, r5, #9
    75e2:	0e00      	lsrs	r0, r0, #24
    75e4:	0fc9      	lsrs	r1, r1, #31
    75e6:	2aff      	cmp	r2, #255	; 0xff
    75e8:	d012      	beq.n	7610 <__lesf2+0x40>
    75ea:	28ff      	cmp	r0, #255	; 0xff
    75ec:	d00c      	beq.n	7608 <__lesf2+0x38>
    75ee:	2a00      	cmp	r2, #0
    75f0:	d112      	bne.n	7618 <__lesf2+0x48>
    75f2:	2800      	cmp	r0, #0
    75f4:	d119      	bne.n	762a <__lesf2+0x5a>
    75f6:	2d00      	cmp	r5, #0
    75f8:	d117      	bne.n	762a <__lesf2+0x5a>
    75fa:	2c00      	cmp	r4, #0
    75fc:	d02b      	beq.n	7656 <__lesf2+0x86>
    75fe:	2002      	movs	r0, #2
    7600:	3b01      	subs	r3, #1
    7602:	4018      	ands	r0, r3
    7604:	3801      	subs	r0, #1
    7606:	e026      	b.n	7656 <__lesf2+0x86>
    7608:	2d00      	cmp	r5, #0
    760a:	d0f0      	beq.n	75ee <__lesf2+0x1e>
    760c:	2002      	movs	r0, #2
    760e:	e022      	b.n	7656 <__lesf2+0x86>
    7610:	2c00      	cmp	r4, #0
    7612:	d1fb      	bne.n	760c <__lesf2+0x3c>
    7614:	28ff      	cmp	r0, #255	; 0xff
    7616:	d01f      	beq.n	7658 <__lesf2+0x88>
    7618:	2800      	cmp	r0, #0
    761a:	d11f      	bne.n	765c <__lesf2+0x8c>
    761c:	2d00      	cmp	r5, #0
    761e:	d11d      	bne.n	765c <__lesf2+0x8c>
    7620:	2002      	movs	r0, #2
    7622:	3b01      	subs	r3, #1
    7624:	4018      	ands	r0, r3
    7626:	3801      	subs	r0, #1
    7628:	e015      	b.n	7656 <__lesf2+0x86>
    762a:	2c00      	cmp	r4, #0
    762c:	d00e      	beq.n	764c <__lesf2+0x7c>
    762e:	428b      	cmp	r3, r1
    7630:	d1e5      	bne.n	75fe <__lesf2+0x2e>
    7632:	2200      	movs	r2, #0
    7634:	4290      	cmp	r0, r2
    7636:	dc04      	bgt.n	7642 <__lesf2+0x72>
    7638:	42ac      	cmp	r4, r5
    763a:	d8e0      	bhi.n	75fe <__lesf2+0x2e>
    763c:	2000      	movs	r0, #0
    763e:	42ac      	cmp	r4, r5
    7640:	d209      	bcs.n	7656 <__lesf2+0x86>
    7642:	1e58      	subs	r0, r3, #1
    7644:	2301      	movs	r3, #1
    7646:	4398      	bics	r0, r3
    7648:	3001      	adds	r0, #1
    764a:	e004      	b.n	7656 <__lesf2+0x86>
    764c:	2301      	movs	r3, #1
    764e:	3901      	subs	r1, #1
    7650:	4399      	bics	r1, r3
    7652:	0008      	movs	r0, r1
    7654:	3001      	adds	r0, #1
    7656:	bd30      	pop	{r4, r5, pc}
    7658:	2d00      	cmp	r5, #0
    765a:	d1d7      	bne.n	760c <__lesf2+0x3c>
    765c:	428b      	cmp	r3, r1
    765e:	d1ce      	bne.n	75fe <__lesf2+0x2e>
    7660:	4282      	cmp	r2, r0
    7662:	dde7      	ble.n	7634 <__lesf2+0x64>
    7664:	2102      	movs	r1, #2
    7666:	1e58      	subs	r0, r3, #1
    7668:	4008      	ands	r0, r1
    766a:	3801      	subs	r0, #1
    766c:	e7f3      	b.n	7656 <__lesf2+0x86>
    766e:	46c0      	nop			; (mov r8, r8)

00007670 <__aeabi_fmul>:
__aeabi_fmul():
    7670:	b5f0      	push	{r4, r5, r6, r7, lr}
    7672:	464e      	mov	r6, r9
    7674:	4657      	mov	r7, sl
    7676:	4645      	mov	r5, r8
    7678:	46de      	mov	lr, fp
    767a:	b5e0      	push	{r5, r6, r7, lr}
    767c:	0243      	lsls	r3, r0, #9
    767e:	0a5b      	lsrs	r3, r3, #9
    7680:	0045      	lsls	r5, r0, #1
    7682:	b083      	sub	sp, #12
    7684:	1c0f      	adds	r7, r1, #0
    7686:	4699      	mov	r9, r3
    7688:	0e2d      	lsrs	r5, r5, #24
    768a:	0fc6      	lsrs	r6, r0, #31
    768c:	2d00      	cmp	r5, #0
    768e:	d057      	beq.n	7740 <__aeabi_fmul+0xd0>
    7690:	2dff      	cmp	r5, #255	; 0xff
    7692:	d024      	beq.n	76de <__aeabi_fmul+0x6e>
    7694:	2080      	movs	r0, #128	; 0x80
    7696:	00db      	lsls	r3, r3, #3
    7698:	04c0      	lsls	r0, r0, #19
    769a:	4318      	orrs	r0, r3
    769c:	2300      	movs	r3, #0
    769e:	4681      	mov	r9, r0
    76a0:	469a      	mov	sl, r3
    76a2:	469b      	mov	fp, r3
    76a4:	3d7f      	subs	r5, #127	; 0x7f
    76a6:	027c      	lsls	r4, r7, #9
    76a8:	007a      	lsls	r2, r7, #1
    76aa:	0ffb      	lsrs	r3, r7, #31
    76ac:	0a64      	lsrs	r4, r4, #9
    76ae:	0e12      	lsrs	r2, r2, #24
    76b0:	4698      	mov	r8, r3
    76b2:	d023      	beq.n	76fc <__aeabi_fmul+0x8c>
    76b4:	2aff      	cmp	r2, #255	; 0xff
    76b6:	d04b      	beq.n	7750 <__aeabi_fmul+0xe0>
    76b8:	00e3      	lsls	r3, r4, #3
    76ba:	2480      	movs	r4, #128	; 0x80
    76bc:	2000      	movs	r0, #0
    76be:	04e4      	lsls	r4, r4, #19
    76c0:	3a7f      	subs	r2, #127	; 0x7f
    76c2:	431c      	orrs	r4, r3
    76c4:	18ad      	adds	r5, r5, r2
    76c6:	1c6b      	adds	r3, r5, #1
    76c8:	4647      	mov	r7, r8
    76ca:	9301      	str	r3, [sp, #4]
    76cc:	4653      	mov	r3, sl
    76ce:	4077      	eors	r7, r6
    76d0:	003a      	movs	r2, r7
    76d2:	2b0f      	cmp	r3, #15
    76d4:	d848      	bhi.n	7768 <__aeabi_fmul+0xf8>
    76d6:	497d      	ldr	r1, [pc, #500]	; (78cc <__aeabi_fmul+0x25c>)
    76d8:	009b      	lsls	r3, r3, #2
    76da:	58cb      	ldr	r3, [r1, r3]
    76dc:	469f      	mov	pc, r3
    76de:	2b00      	cmp	r3, #0
    76e0:	d000      	beq.n	76e4 <__aeabi_fmul+0x74>
    76e2:	e085      	b.n	77f0 <__aeabi_fmul+0x180>
    76e4:	3308      	adds	r3, #8
    76e6:	469a      	mov	sl, r3
    76e8:	3b06      	subs	r3, #6
    76ea:	469b      	mov	fp, r3
    76ec:	027c      	lsls	r4, r7, #9
    76ee:	007a      	lsls	r2, r7, #1
    76f0:	0ffb      	lsrs	r3, r7, #31
    76f2:	25ff      	movs	r5, #255	; 0xff
    76f4:	0a64      	lsrs	r4, r4, #9
    76f6:	0e12      	lsrs	r2, r2, #24
    76f8:	4698      	mov	r8, r3
    76fa:	d1db      	bne.n	76b4 <__aeabi_fmul+0x44>
    76fc:	2c00      	cmp	r4, #0
    76fe:	d000      	beq.n	7702 <__aeabi_fmul+0x92>
    7700:	e090      	b.n	7824 <__aeabi_fmul+0x1b4>
    7702:	4652      	mov	r2, sl
    7704:	2301      	movs	r3, #1
    7706:	431a      	orrs	r2, r3
    7708:	4692      	mov	sl, r2
    770a:	2001      	movs	r0, #1
    770c:	e7db      	b.n	76c6 <__aeabi_fmul+0x56>
    770e:	464c      	mov	r4, r9
    7710:	4658      	mov	r0, fp
    7712:	0017      	movs	r7, r2
    7714:	2802      	cmp	r0, #2
    7716:	d024      	beq.n	7762 <__aeabi_fmul+0xf2>
    7718:	2803      	cmp	r0, #3
    771a:	d100      	bne.n	771e <__aeabi_fmul+0xae>
    771c:	e0cf      	b.n	78be <__aeabi_fmul+0x24e>
    771e:	2200      	movs	r2, #0
    7720:	2300      	movs	r3, #0
    7722:	2801      	cmp	r0, #1
    7724:	d14d      	bne.n	77c2 <__aeabi_fmul+0x152>
    7726:	0258      	lsls	r0, r3, #9
    7728:	05d2      	lsls	r2, r2, #23
    772a:	0a40      	lsrs	r0, r0, #9
    772c:	07ff      	lsls	r7, r7, #31
    772e:	4310      	orrs	r0, r2
    7730:	4338      	orrs	r0, r7
    7732:	b003      	add	sp, #12
    7734:	bc3c      	pop	{r2, r3, r4, r5}
    7736:	4690      	mov	r8, r2
    7738:	4699      	mov	r9, r3
    773a:	46a2      	mov	sl, r4
    773c:	46ab      	mov	fp, r5
    773e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7740:	2b00      	cmp	r3, #0
    7742:	d15b      	bne.n	77fc <__aeabi_fmul+0x18c>
    7744:	2304      	movs	r3, #4
    7746:	469a      	mov	sl, r3
    7748:	3b03      	subs	r3, #3
    774a:	2500      	movs	r5, #0
    774c:	469b      	mov	fp, r3
    774e:	e7aa      	b.n	76a6 <__aeabi_fmul+0x36>
    7750:	35ff      	adds	r5, #255	; 0xff
    7752:	2c00      	cmp	r4, #0
    7754:	d160      	bne.n	7818 <__aeabi_fmul+0x1a8>
    7756:	4652      	mov	r2, sl
    7758:	2302      	movs	r3, #2
    775a:	431a      	orrs	r2, r3
    775c:	4692      	mov	sl, r2
    775e:	2002      	movs	r0, #2
    7760:	e7b1      	b.n	76c6 <__aeabi_fmul+0x56>
    7762:	22ff      	movs	r2, #255	; 0xff
    7764:	2300      	movs	r3, #0
    7766:	e7de      	b.n	7726 <__aeabi_fmul+0xb6>
    7768:	464b      	mov	r3, r9
    776a:	0c1b      	lsrs	r3, r3, #16
    776c:	469c      	mov	ip, r3
    776e:	464b      	mov	r3, r9
    7770:	0426      	lsls	r6, r4, #16
    7772:	0c36      	lsrs	r6, r6, #16
    7774:	0418      	lsls	r0, r3, #16
    7776:	4661      	mov	r1, ip
    7778:	0033      	movs	r3, r6
    777a:	0c22      	lsrs	r2, r4, #16
    777c:	4664      	mov	r4, ip
    777e:	0c00      	lsrs	r0, r0, #16
    7780:	4343      	muls	r3, r0
    7782:	434e      	muls	r6, r1
    7784:	4350      	muls	r0, r2
    7786:	4354      	muls	r4, r2
    7788:	1980      	adds	r0, r0, r6
    778a:	0c1a      	lsrs	r2, r3, #16
    778c:	1812      	adds	r2, r2, r0
    778e:	4296      	cmp	r6, r2
    7790:	d903      	bls.n	779a <__aeabi_fmul+0x12a>
    7792:	2180      	movs	r1, #128	; 0x80
    7794:	0249      	lsls	r1, r1, #9
    7796:	468c      	mov	ip, r1
    7798:	4464      	add	r4, ip
    779a:	041b      	lsls	r3, r3, #16
    779c:	0c1b      	lsrs	r3, r3, #16
    779e:	0410      	lsls	r0, r2, #16
    77a0:	18c0      	adds	r0, r0, r3
    77a2:	0183      	lsls	r3, r0, #6
    77a4:	1e5e      	subs	r6, r3, #1
    77a6:	41b3      	sbcs	r3, r6
    77a8:	0e80      	lsrs	r0, r0, #26
    77aa:	4318      	orrs	r0, r3
    77ac:	0c13      	lsrs	r3, r2, #16
    77ae:	191b      	adds	r3, r3, r4
    77b0:	019b      	lsls	r3, r3, #6
    77b2:	4303      	orrs	r3, r0
    77b4:	001c      	movs	r4, r3
    77b6:	0123      	lsls	r3, r4, #4
    77b8:	d579      	bpl.n	78ae <__aeabi_fmul+0x23e>
    77ba:	2301      	movs	r3, #1
    77bc:	0862      	lsrs	r2, r4, #1
    77be:	401c      	ands	r4, r3
    77c0:	4314      	orrs	r4, r2
    77c2:	9a01      	ldr	r2, [sp, #4]
    77c4:	327f      	adds	r2, #127	; 0x7f
    77c6:	2a00      	cmp	r2, #0
    77c8:	dd4d      	ble.n	7866 <__aeabi_fmul+0x1f6>
    77ca:	0763      	lsls	r3, r4, #29
    77cc:	d004      	beq.n	77d8 <__aeabi_fmul+0x168>
    77ce:	230f      	movs	r3, #15
    77d0:	4023      	ands	r3, r4
    77d2:	2b04      	cmp	r3, #4
    77d4:	d000      	beq.n	77d8 <__aeabi_fmul+0x168>
    77d6:	3404      	adds	r4, #4
    77d8:	0123      	lsls	r3, r4, #4
    77da:	d503      	bpl.n	77e4 <__aeabi_fmul+0x174>
    77dc:	4b3c      	ldr	r3, [pc, #240]	; (78d0 <__aeabi_fmul+0x260>)
    77de:	9a01      	ldr	r2, [sp, #4]
    77e0:	401c      	ands	r4, r3
    77e2:	3280      	adds	r2, #128	; 0x80
    77e4:	2afe      	cmp	r2, #254	; 0xfe
    77e6:	dcbc      	bgt.n	7762 <__aeabi_fmul+0xf2>
    77e8:	01a3      	lsls	r3, r4, #6
    77ea:	0a5b      	lsrs	r3, r3, #9
    77ec:	b2d2      	uxtb	r2, r2
    77ee:	e79a      	b.n	7726 <__aeabi_fmul+0xb6>
    77f0:	230c      	movs	r3, #12
    77f2:	469a      	mov	sl, r3
    77f4:	3b09      	subs	r3, #9
    77f6:	25ff      	movs	r5, #255	; 0xff
    77f8:	469b      	mov	fp, r3
    77fa:	e754      	b.n	76a6 <__aeabi_fmul+0x36>
    77fc:	0018      	movs	r0, r3
    77fe:	f002 f8e1 	bl	99c4 <__clzsi2>
    7802:	464a      	mov	r2, r9
    7804:	1f43      	subs	r3, r0, #5
    7806:	2576      	movs	r5, #118	; 0x76
    7808:	409a      	lsls	r2, r3
    780a:	2300      	movs	r3, #0
    780c:	426d      	negs	r5, r5
    780e:	4691      	mov	r9, r2
    7810:	1a2d      	subs	r5, r5, r0
    7812:	469a      	mov	sl, r3
    7814:	469b      	mov	fp, r3
    7816:	e746      	b.n	76a6 <__aeabi_fmul+0x36>
    7818:	4652      	mov	r2, sl
    781a:	2303      	movs	r3, #3
    781c:	431a      	orrs	r2, r3
    781e:	4692      	mov	sl, r2
    7820:	2003      	movs	r0, #3
    7822:	e750      	b.n	76c6 <__aeabi_fmul+0x56>
    7824:	0020      	movs	r0, r4
    7826:	f002 f8cd 	bl	99c4 <__clzsi2>
    782a:	1f43      	subs	r3, r0, #5
    782c:	1a2d      	subs	r5, r5, r0
    782e:	409c      	lsls	r4, r3
    7830:	3d76      	subs	r5, #118	; 0x76
    7832:	2000      	movs	r0, #0
    7834:	e747      	b.n	76c6 <__aeabi_fmul+0x56>
    7836:	2380      	movs	r3, #128	; 0x80
    7838:	2700      	movs	r7, #0
    783a:	03db      	lsls	r3, r3, #15
    783c:	22ff      	movs	r2, #255	; 0xff
    783e:	e772      	b.n	7726 <__aeabi_fmul+0xb6>
    7840:	4642      	mov	r2, r8
    7842:	e766      	b.n	7712 <__aeabi_fmul+0xa2>
    7844:	464c      	mov	r4, r9
    7846:	0032      	movs	r2, r6
    7848:	4658      	mov	r0, fp
    784a:	e762      	b.n	7712 <__aeabi_fmul+0xa2>
    784c:	2380      	movs	r3, #128	; 0x80
    784e:	464a      	mov	r2, r9
    7850:	03db      	lsls	r3, r3, #15
    7852:	421a      	tst	r2, r3
    7854:	d022      	beq.n	789c <__aeabi_fmul+0x22c>
    7856:	421c      	tst	r4, r3
    7858:	d120      	bne.n	789c <__aeabi_fmul+0x22c>
    785a:	4323      	orrs	r3, r4
    785c:	025b      	lsls	r3, r3, #9
    785e:	0a5b      	lsrs	r3, r3, #9
    7860:	4647      	mov	r7, r8
    7862:	22ff      	movs	r2, #255	; 0xff
    7864:	e75f      	b.n	7726 <__aeabi_fmul+0xb6>
    7866:	2301      	movs	r3, #1
    7868:	1a9a      	subs	r2, r3, r2
    786a:	2a1b      	cmp	r2, #27
    786c:	dc21      	bgt.n	78b2 <__aeabi_fmul+0x242>
    786e:	0023      	movs	r3, r4
    7870:	9901      	ldr	r1, [sp, #4]
    7872:	40d3      	lsrs	r3, r2
    7874:	319e      	adds	r1, #158	; 0x9e
    7876:	408c      	lsls	r4, r1
    7878:	001a      	movs	r2, r3
    787a:	0023      	movs	r3, r4
    787c:	1e5c      	subs	r4, r3, #1
    787e:	41a3      	sbcs	r3, r4
    7880:	4313      	orrs	r3, r2
    7882:	075a      	lsls	r2, r3, #29
    7884:	d004      	beq.n	7890 <__aeabi_fmul+0x220>
    7886:	220f      	movs	r2, #15
    7888:	401a      	ands	r2, r3
    788a:	2a04      	cmp	r2, #4
    788c:	d000      	beq.n	7890 <__aeabi_fmul+0x220>
    788e:	3304      	adds	r3, #4
    7890:	015a      	lsls	r2, r3, #5
    7892:	d411      	bmi.n	78b8 <__aeabi_fmul+0x248>
    7894:	019b      	lsls	r3, r3, #6
    7896:	0a5b      	lsrs	r3, r3, #9
    7898:	2200      	movs	r2, #0
    789a:	e744      	b.n	7726 <__aeabi_fmul+0xb6>
    789c:	2380      	movs	r3, #128	; 0x80
    789e:	464a      	mov	r2, r9
    78a0:	03db      	lsls	r3, r3, #15
    78a2:	4313      	orrs	r3, r2
    78a4:	025b      	lsls	r3, r3, #9
    78a6:	0a5b      	lsrs	r3, r3, #9
    78a8:	0037      	movs	r7, r6
    78aa:	22ff      	movs	r2, #255	; 0xff
    78ac:	e73b      	b.n	7726 <__aeabi_fmul+0xb6>
    78ae:	9501      	str	r5, [sp, #4]
    78b0:	e787      	b.n	77c2 <__aeabi_fmul+0x152>
    78b2:	2200      	movs	r2, #0
    78b4:	2300      	movs	r3, #0
    78b6:	e736      	b.n	7726 <__aeabi_fmul+0xb6>
    78b8:	2201      	movs	r2, #1
    78ba:	2300      	movs	r3, #0
    78bc:	e733      	b.n	7726 <__aeabi_fmul+0xb6>
    78be:	2380      	movs	r3, #128	; 0x80
    78c0:	03db      	lsls	r3, r3, #15
    78c2:	4323      	orrs	r3, r4
    78c4:	025b      	lsls	r3, r3, #9
    78c6:	0a5b      	lsrs	r3, r3, #9
    78c8:	22ff      	movs	r2, #255	; 0xff
    78ca:	e72c      	b.n	7726 <__aeabi_fmul+0xb6>
    78cc:	0000aeec 	.word	0x0000aeec
    78d0:	f7ffffff 	.word	0xf7ffffff

000078d4 <__aeabi_fsub>:
__aeabi_fsub():
    78d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    78d6:	4647      	mov	r7, r8
    78d8:	46ce      	mov	lr, r9
    78da:	0044      	lsls	r4, r0, #1
    78dc:	0fc2      	lsrs	r2, r0, #31
    78de:	b580      	push	{r7, lr}
    78e0:	0247      	lsls	r7, r0, #9
    78e2:	0248      	lsls	r0, r1, #9
    78e4:	0a40      	lsrs	r0, r0, #9
    78e6:	4684      	mov	ip, r0
    78e8:	4666      	mov	r6, ip
    78ea:	0048      	lsls	r0, r1, #1
    78ec:	0a7f      	lsrs	r7, r7, #9
    78ee:	0e24      	lsrs	r4, r4, #24
    78f0:	00f6      	lsls	r6, r6, #3
    78f2:	0025      	movs	r5, r4
    78f4:	4690      	mov	r8, r2
    78f6:	00fb      	lsls	r3, r7, #3
    78f8:	0e00      	lsrs	r0, r0, #24
    78fa:	0fc9      	lsrs	r1, r1, #31
    78fc:	46b1      	mov	r9, r6
    78fe:	28ff      	cmp	r0, #255	; 0xff
    7900:	d100      	bne.n	7904 <__aeabi_fsub+0x30>
    7902:	e085      	b.n	7a10 <__aeabi_fsub+0x13c>
    7904:	2601      	movs	r6, #1
    7906:	4071      	eors	r1, r6
    7908:	1a26      	subs	r6, r4, r0
    790a:	4291      	cmp	r1, r2
    790c:	d057      	beq.n	79be <__aeabi_fsub+0xea>
    790e:	2e00      	cmp	r6, #0
    7910:	dd43      	ble.n	799a <__aeabi_fsub+0xc6>
    7912:	2800      	cmp	r0, #0
    7914:	d000      	beq.n	7918 <__aeabi_fsub+0x44>
    7916:	e07f      	b.n	7a18 <__aeabi_fsub+0x144>
    7918:	4649      	mov	r1, r9
    791a:	2900      	cmp	r1, #0
    791c:	d100      	bne.n	7920 <__aeabi_fsub+0x4c>
    791e:	e0aa      	b.n	7a76 <__aeabi_fsub+0x1a2>
    7920:	3e01      	subs	r6, #1
    7922:	2e00      	cmp	r6, #0
    7924:	d000      	beq.n	7928 <__aeabi_fsub+0x54>
    7926:	e0f7      	b.n	7b18 <__aeabi_fsub+0x244>
    7928:	1a5b      	subs	r3, r3, r1
    792a:	015a      	lsls	r2, r3, #5
    792c:	d400      	bmi.n	7930 <__aeabi_fsub+0x5c>
    792e:	e08b      	b.n	7a48 <__aeabi_fsub+0x174>
    7930:	019b      	lsls	r3, r3, #6
    7932:	099c      	lsrs	r4, r3, #6
    7934:	0020      	movs	r0, r4
    7936:	f002 f845 	bl	99c4 <__clzsi2>
    793a:	3805      	subs	r0, #5
    793c:	4084      	lsls	r4, r0
    793e:	4285      	cmp	r5, r0
    7940:	dd00      	ble.n	7944 <__aeabi_fsub+0x70>
    7942:	e0d3      	b.n	7aec <__aeabi_fsub+0x218>
    7944:	1b45      	subs	r5, r0, r5
    7946:	0023      	movs	r3, r4
    7948:	2020      	movs	r0, #32
    794a:	3501      	adds	r5, #1
    794c:	40eb      	lsrs	r3, r5
    794e:	1b45      	subs	r5, r0, r5
    7950:	40ac      	lsls	r4, r5
    7952:	1e62      	subs	r2, r4, #1
    7954:	4194      	sbcs	r4, r2
    7956:	4323      	orrs	r3, r4
    7958:	2407      	movs	r4, #7
    795a:	2500      	movs	r5, #0
    795c:	401c      	ands	r4, r3
    795e:	2201      	movs	r2, #1
    7960:	4641      	mov	r1, r8
    7962:	400a      	ands	r2, r1
    7964:	2c00      	cmp	r4, #0
    7966:	d004      	beq.n	7972 <__aeabi_fsub+0x9e>
    7968:	210f      	movs	r1, #15
    796a:	4019      	ands	r1, r3
    796c:	2904      	cmp	r1, #4
    796e:	d000      	beq.n	7972 <__aeabi_fsub+0x9e>
    7970:	3304      	adds	r3, #4
    7972:	0159      	lsls	r1, r3, #5
    7974:	d400      	bmi.n	7978 <__aeabi_fsub+0xa4>
    7976:	e080      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7978:	3501      	adds	r5, #1
    797a:	b2ec      	uxtb	r4, r5
    797c:	2dff      	cmp	r5, #255	; 0xff
    797e:	d000      	beq.n	7982 <__aeabi_fsub+0xae>
    7980:	e0a3      	b.n	7aca <__aeabi_fsub+0x1f6>
    7982:	24ff      	movs	r4, #255	; 0xff
    7984:	2300      	movs	r3, #0
    7986:	025b      	lsls	r3, r3, #9
    7988:	05e4      	lsls	r4, r4, #23
    798a:	0a58      	lsrs	r0, r3, #9
    798c:	07d2      	lsls	r2, r2, #31
    798e:	4320      	orrs	r0, r4
    7990:	4310      	orrs	r0, r2
    7992:	bc0c      	pop	{r2, r3}
    7994:	4690      	mov	r8, r2
    7996:	4699      	mov	r9, r3
    7998:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    799a:	2e00      	cmp	r6, #0
    799c:	d174      	bne.n	7a88 <__aeabi_fsub+0x1b4>
    799e:	1c60      	adds	r0, r4, #1
    79a0:	b2c0      	uxtb	r0, r0
    79a2:	2801      	cmp	r0, #1
    79a4:	dc00      	bgt.n	79a8 <__aeabi_fsub+0xd4>
    79a6:	e0a7      	b.n	7af8 <__aeabi_fsub+0x224>
    79a8:	464a      	mov	r2, r9
    79aa:	1a9c      	subs	r4, r3, r2
    79ac:	0162      	lsls	r2, r4, #5
    79ae:	d500      	bpl.n	79b2 <__aeabi_fsub+0xde>
    79b0:	e0b6      	b.n	7b20 <__aeabi_fsub+0x24c>
    79b2:	2c00      	cmp	r4, #0
    79b4:	d1be      	bne.n	7934 <__aeabi_fsub+0x60>
    79b6:	2200      	movs	r2, #0
    79b8:	2400      	movs	r4, #0
    79ba:	2300      	movs	r3, #0
    79bc:	e7e3      	b.n	7986 <__aeabi_fsub+0xb2>
    79be:	2e00      	cmp	r6, #0
    79c0:	dc00      	bgt.n	79c4 <__aeabi_fsub+0xf0>
    79c2:	e085      	b.n	7ad0 <__aeabi_fsub+0x1fc>
    79c4:	2800      	cmp	r0, #0
    79c6:	d046      	beq.n	7a56 <__aeabi_fsub+0x182>
    79c8:	2cff      	cmp	r4, #255	; 0xff
    79ca:	d049      	beq.n	7a60 <__aeabi_fsub+0x18c>
    79cc:	2280      	movs	r2, #128	; 0x80
    79ce:	4648      	mov	r0, r9
    79d0:	04d2      	lsls	r2, r2, #19
    79d2:	4310      	orrs	r0, r2
    79d4:	4681      	mov	r9, r0
    79d6:	2201      	movs	r2, #1
    79d8:	2e1b      	cmp	r6, #27
    79da:	dc09      	bgt.n	79f0 <__aeabi_fsub+0x11c>
    79dc:	2020      	movs	r0, #32
    79de:	464c      	mov	r4, r9
    79e0:	1b80      	subs	r0, r0, r6
    79e2:	4084      	lsls	r4, r0
    79e4:	464a      	mov	r2, r9
    79e6:	0020      	movs	r0, r4
    79e8:	40f2      	lsrs	r2, r6
    79ea:	1e44      	subs	r4, r0, #1
    79ec:	41a0      	sbcs	r0, r4
    79ee:	4302      	orrs	r2, r0
    79f0:	189b      	adds	r3, r3, r2
    79f2:	015a      	lsls	r2, r3, #5
    79f4:	d528      	bpl.n	7a48 <__aeabi_fsub+0x174>
    79f6:	3501      	adds	r5, #1
    79f8:	2dff      	cmp	r5, #255	; 0xff
    79fa:	d100      	bne.n	79fe <__aeabi_fsub+0x12a>
    79fc:	e0a8      	b.n	7b50 <__aeabi_fsub+0x27c>
    79fe:	2201      	movs	r2, #1
    7a00:	2407      	movs	r4, #7
    7a02:	4994      	ldr	r1, [pc, #592]	; (7c54 <__aeabi_fsub+0x380>)
    7a04:	401a      	ands	r2, r3
    7a06:	085b      	lsrs	r3, r3, #1
    7a08:	400b      	ands	r3, r1
    7a0a:	4313      	orrs	r3, r2
    7a0c:	401c      	ands	r4, r3
    7a0e:	e7a6      	b.n	795e <__aeabi_fsub+0x8a>
    7a10:	2e00      	cmp	r6, #0
    7a12:	d000      	beq.n	7a16 <__aeabi_fsub+0x142>
    7a14:	e778      	b.n	7908 <__aeabi_fsub+0x34>
    7a16:	e775      	b.n	7904 <__aeabi_fsub+0x30>
    7a18:	2cff      	cmp	r4, #255	; 0xff
    7a1a:	d054      	beq.n	7ac6 <__aeabi_fsub+0x1f2>
    7a1c:	2280      	movs	r2, #128	; 0x80
    7a1e:	4649      	mov	r1, r9
    7a20:	04d2      	lsls	r2, r2, #19
    7a22:	4311      	orrs	r1, r2
    7a24:	4689      	mov	r9, r1
    7a26:	2201      	movs	r2, #1
    7a28:	2e1b      	cmp	r6, #27
    7a2a:	dc09      	bgt.n	7a40 <__aeabi_fsub+0x16c>
    7a2c:	2120      	movs	r1, #32
    7a2e:	4648      	mov	r0, r9
    7a30:	1b89      	subs	r1, r1, r6
    7a32:	4088      	lsls	r0, r1
    7a34:	464a      	mov	r2, r9
    7a36:	0001      	movs	r1, r0
    7a38:	40f2      	lsrs	r2, r6
    7a3a:	1e48      	subs	r0, r1, #1
    7a3c:	4181      	sbcs	r1, r0
    7a3e:	430a      	orrs	r2, r1
    7a40:	1a9b      	subs	r3, r3, r2
    7a42:	015a      	lsls	r2, r3, #5
    7a44:	d500      	bpl.n	7a48 <__aeabi_fsub+0x174>
    7a46:	e773      	b.n	7930 <__aeabi_fsub+0x5c>
    7a48:	2201      	movs	r2, #1
    7a4a:	4641      	mov	r1, r8
    7a4c:	400a      	ands	r2, r1
    7a4e:	0759      	lsls	r1, r3, #29
    7a50:	d000      	beq.n	7a54 <__aeabi_fsub+0x180>
    7a52:	e789      	b.n	7968 <__aeabi_fsub+0x94>
    7a54:	e011      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7a56:	4648      	mov	r0, r9
    7a58:	2800      	cmp	r0, #0
    7a5a:	d158      	bne.n	7b0e <__aeabi_fsub+0x23a>
    7a5c:	2cff      	cmp	r4, #255	; 0xff
    7a5e:	d10c      	bne.n	7a7a <__aeabi_fsub+0x1a6>
    7a60:	08db      	lsrs	r3, r3, #3
    7a62:	2b00      	cmp	r3, #0
    7a64:	d100      	bne.n	7a68 <__aeabi_fsub+0x194>
    7a66:	e78c      	b.n	7982 <__aeabi_fsub+0xae>
    7a68:	2080      	movs	r0, #128	; 0x80
    7a6a:	03c0      	lsls	r0, r0, #15
    7a6c:	4303      	orrs	r3, r0
    7a6e:	025b      	lsls	r3, r3, #9
    7a70:	0a5b      	lsrs	r3, r3, #9
    7a72:	24ff      	movs	r4, #255	; 0xff
    7a74:	e787      	b.n	7986 <__aeabi_fsub+0xb2>
    7a76:	2cff      	cmp	r4, #255	; 0xff
    7a78:	d025      	beq.n	7ac6 <__aeabi_fsub+0x1f2>
    7a7a:	08db      	lsrs	r3, r3, #3
    7a7c:	2dff      	cmp	r5, #255	; 0xff
    7a7e:	d0f0      	beq.n	7a62 <__aeabi_fsub+0x18e>
    7a80:	025b      	lsls	r3, r3, #9
    7a82:	0a5b      	lsrs	r3, r3, #9
    7a84:	b2ec      	uxtb	r4, r5
    7a86:	e77e      	b.n	7986 <__aeabi_fsub+0xb2>
    7a88:	2c00      	cmp	r4, #0
    7a8a:	d04d      	beq.n	7b28 <__aeabi_fsub+0x254>
    7a8c:	28ff      	cmp	r0, #255	; 0xff
    7a8e:	d018      	beq.n	7ac2 <__aeabi_fsub+0x1ee>
    7a90:	2480      	movs	r4, #128	; 0x80
    7a92:	04e4      	lsls	r4, r4, #19
    7a94:	4272      	negs	r2, r6
    7a96:	4323      	orrs	r3, r4
    7a98:	2a1b      	cmp	r2, #27
    7a9a:	dd00      	ble.n	7a9e <__aeabi_fsub+0x1ca>
    7a9c:	e0c4      	b.n	7c28 <__aeabi_fsub+0x354>
    7a9e:	001c      	movs	r4, r3
    7aa0:	2520      	movs	r5, #32
    7aa2:	40d4      	lsrs	r4, r2
    7aa4:	1aaa      	subs	r2, r5, r2
    7aa6:	4093      	lsls	r3, r2
    7aa8:	1e5a      	subs	r2, r3, #1
    7aaa:	4193      	sbcs	r3, r2
    7aac:	4323      	orrs	r3, r4
    7aae:	464a      	mov	r2, r9
    7ab0:	0005      	movs	r5, r0
    7ab2:	1ad3      	subs	r3, r2, r3
    7ab4:	4688      	mov	r8, r1
    7ab6:	e738      	b.n	792a <__aeabi_fsub+0x56>
    7ab8:	1c72      	adds	r2, r6, #1
    7aba:	d0f8      	beq.n	7aae <__aeabi_fsub+0x1da>
    7abc:	43f2      	mvns	r2, r6
    7abe:	28ff      	cmp	r0, #255	; 0xff
    7ac0:	d1ea      	bne.n	7a98 <__aeabi_fsub+0x1c4>
    7ac2:	000a      	movs	r2, r1
    7ac4:	464b      	mov	r3, r9
    7ac6:	25ff      	movs	r5, #255	; 0xff
    7ac8:	e7d7      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7aca:	019b      	lsls	r3, r3, #6
    7acc:	0a5b      	lsrs	r3, r3, #9
    7ace:	e75a      	b.n	7986 <__aeabi_fsub+0xb2>
    7ad0:	2e00      	cmp	r6, #0
    7ad2:	d141      	bne.n	7b58 <__aeabi_fsub+0x284>
    7ad4:	1c65      	adds	r5, r4, #1
    7ad6:	b2e9      	uxtb	r1, r5
    7ad8:	2901      	cmp	r1, #1
    7ada:	dd45      	ble.n	7b68 <__aeabi_fsub+0x294>
    7adc:	2dff      	cmp	r5, #255	; 0xff
    7ade:	d100      	bne.n	7ae2 <__aeabi_fsub+0x20e>
    7ae0:	e74f      	b.n	7982 <__aeabi_fsub+0xae>
    7ae2:	2407      	movs	r4, #7
    7ae4:	444b      	add	r3, r9
    7ae6:	085b      	lsrs	r3, r3, #1
    7ae8:	401c      	ands	r4, r3
    7aea:	e738      	b.n	795e <__aeabi_fsub+0x8a>
    7aec:	2207      	movs	r2, #7
    7aee:	4b5a      	ldr	r3, [pc, #360]	; (7c58 <__aeabi_fsub+0x384>)
    7af0:	1a2d      	subs	r5, r5, r0
    7af2:	4023      	ands	r3, r4
    7af4:	4014      	ands	r4, r2
    7af6:	e732      	b.n	795e <__aeabi_fsub+0x8a>
    7af8:	2c00      	cmp	r4, #0
    7afa:	d11d      	bne.n	7b38 <__aeabi_fsub+0x264>
    7afc:	2b00      	cmp	r3, #0
    7afe:	d17a      	bne.n	7bf6 <__aeabi_fsub+0x322>
    7b00:	464b      	mov	r3, r9
    7b02:	2b00      	cmp	r3, #0
    7b04:	d100      	bne.n	7b08 <__aeabi_fsub+0x234>
    7b06:	e091      	b.n	7c2c <__aeabi_fsub+0x358>
    7b08:	000a      	movs	r2, r1
    7b0a:	2500      	movs	r5, #0
    7b0c:	e7b5      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7b0e:	3e01      	subs	r6, #1
    7b10:	2e00      	cmp	r6, #0
    7b12:	d119      	bne.n	7b48 <__aeabi_fsub+0x274>
    7b14:	444b      	add	r3, r9
    7b16:	e76c      	b.n	79f2 <__aeabi_fsub+0x11e>
    7b18:	2cff      	cmp	r4, #255	; 0xff
    7b1a:	d184      	bne.n	7a26 <__aeabi_fsub+0x152>
    7b1c:	25ff      	movs	r5, #255	; 0xff
    7b1e:	e7ac      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7b20:	464a      	mov	r2, r9
    7b22:	4688      	mov	r8, r1
    7b24:	1ad4      	subs	r4, r2, r3
    7b26:	e705      	b.n	7934 <__aeabi_fsub+0x60>
    7b28:	2b00      	cmp	r3, #0
    7b2a:	d1c5      	bne.n	7ab8 <__aeabi_fsub+0x1e4>
    7b2c:	000a      	movs	r2, r1
    7b2e:	28ff      	cmp	r0, #255	; 0xff
    7b30:	d0c8      	beq.n	7ac4 <__aeabi_fsub+0x1f0>
    7b32:	0005      	movs	r5, r0
    7b34:	464b      	mov	r3, r9
    7b36:	e7a0      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7b38:	2b00      	cmp	r3, #0
    7b3a:	d149      	bne.n	7bd0 <__aeabi_fsub+0x2fc>
    7b3c:	464b      	mov	r3, r9
    7b3e:	2b00      	cmp	r3, #0
    7b40:	d077      	beq.n	7c32 <__aeabi_fsub+0x35e>
    7b42:	000a      	movs	r2, r1
    7b44:	25ff      	movs	r5, #255	; 0xff
    7b46:	e798      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7b48:	2cff      	cmp	r4, #255	; 0xff
    7b4a:	d000      	beq.n	7b4e <__aeabi_fsub+0x27a>
    7b4c:	e743      	b.n	79d6 <__aeabi_fsub+0x102>
    7b4e:	e787      	b.n	7a60 <__aeabi_fsub+0x18c>
    7b50:	000a      	movs	r2, r1
    7b52:	24ff      	movs	r4, #255	; 0xff
    7b54:	2300      	movs	r3, #0
    7b56:	e716      	b.n	7986 <__aeabi_fsub+0xb2>
    7b58:	2c00      	cmp	r4, #0
    7b5a:	d115      	bne.n	7b88 <__aeabi_fsub+0x2b4>
    7b5c:	2b00      	cmp	r3, #0
    7b5e:	d157      	bne.n	7c10 <__aeabi_fsub+0x33c>
    7b60:	28ff      	cmp	r0, #255	; 0xff
    7b62:	d1e6      	bne.n	7b32 <__aeabi_fsub+0x25e>
    7b64:	464b      	mov	r3, r9
    7b66:	e77b      	b.n	7a60 <__aeabi_fsub+0x18c>
    7b68:	2c00      	cmp	r4, #0
    7b6a:	d120      	bne.n	7bae <__aeabi_fsub+0x2da>
    7b6c:	2b00      	cmp	r3, #0
    7b6e:	d057      	beq.n	7c20 <__aeabi_fsub+0x34c>
    7b70:	4649      	mov	r1, r9
    7b72:	2900      	cmp	r1, #0
    7b74:	d053      	beq.n	7c1e <__aeabi_fsub+0x34a>
    7b76:	444b      	add	r3, r9
    7b78:	015a      	lsls	r2, r3, #5
    7b7a:	d568      	bpl.n	7c4e <__aeabi_fsub+0x37a>
    7b7c:	2407      	movs	r4, #7
    7b7e:	4a36      	ldr	r2, [pc, #216]	; (7c58 <__aeabi_fsub+0x384>)
    7b80:	401c      	ands	r4, r3
    7b82:	2501      	movs	r5, #1
    7b84:	4013      	ands	r3, r2
    7b86:	e6ea      	b.n	795e <__aeabi_fsub+0x8a>
    7b88:	28ff      	cmp	r0, #255	; 0xff
    7b8a:	d0eb      	beq.n	7b64 <__aeabi_fsub+0x290>
    7b8c:	2280      	movs	r2, #128	; 0x80
    7b8e:	04d2      	lsls	r2, r2, #19
    7b90:	4276      	negs	r6, r6
    7b92:	4313      	orrs	r3, r2
    7b94:	2e1b      	cmp	r6, #27
    7b96:	dc53      	bgt.n	7c40 <__aeabi_fsub+0x36c>
    7b98:	2520      	movs	r5, #32
    7b9a:	1bad      	subs	r5, r5, r6
    7b9c:	001a      	movs	r2, r3
    7b9e:	40ab      	lsls	r3, r5
    7ba0:	40f2      	lsrs	r2, r6
    7ba2:	1e5c      	subs	r4, r3, #1
    7ba4:	41a3      	sbcs	r3, r4
    7ba6:	4313      	orrs	r3, r2
    7ba8:	444b      	add	r3, r9
    7baa:	0005      	movs	r5, r0
    7bac:	e721      	b.n	79f2 <__aeabi_fsub+0x11e>
    7bae:	2b00      	cmp	r3, #0
    7bb0:	d0d8      	beq.n	7b64 <__aeabi_fsub+0x290>
    7bb2:	4649      	mov	r1, r9
    7bb4:	2900      	cmp	r1, #0
    7bb6:	d100      	bne.n	7bba <__aeabi_fsub+0x2e6>
    7bb8:	e752      	b.n	7a60 <__aeabi_fsub+0x18c>
    7bba:	2180      	movs	r1, #128	; 0x80
    7bbc:	03c9      	lsls	r1, r1, #15
    7bbe:	420f      	tst	r7, r1
    7bc0:	d100      	bne.n	7bc4 <__aeabi_fsub+0x2f0>
    7bc2:	e74d      	b.n	7a60 <__aeabi_fsub+0x18c>
    7bc4:	4660      	mov	r0, ip
    7bc6:	4208      	tst	r0, r1
    7bc8:	d000      	beq.n	7bcc <__aeabi_fsub+0x2f8>
    7bca:	e749      	b.n	7a60 <__aeabi_fsub+0x18c>
    7bcc:	464b      	mov	r3, r9
    7bce:	e747      	b.n	7a60 <__aeabi_fsub+0x18c>
    7bd0:	4648      	mov	r0, r9
    7bd2:	25ff      	movs	r5, #255	; 0xff
    7bd4:	2800      	cmp	r0, #0
    7bd6:	d100      	bne.n	7bda <__aeabi_fsub+0x306>
    7bd8:	e74f      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7bda:	2280      	movs	r2, #128	; 0x80
    7bdc:	03d2      	lsls	r2, r2, #15
    7bde:	4217      	tst	r7, r2
    7be0:	d004      	beq.n	7bec <__aeabi_fsub+0x318>
    7be2:	4660      	mov	r0, ip
    7be4:	4210      	tst	r0, r2
    7be6:	d101      	bne.n	7bec <__aeabi_fsub+0x318>
    7be8:	464b      	mov	r3, r9
    7bea:	4688      	mov	r8, r1
    7bec:	2201      	movs	r2, #1
    7bee:	4641      	mov	r1, r8
    7bf0:	25ff      	movs	r5, #255	; 0xff
    7bf2:	400a      	ands	r2, r1
    7bf4:	e741      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7bf6:	4648      	mov	r0, r9
    7bf8:	2800      	cmp	r0, #0
    7bfa:	d01f      	beq.n	7c3c <__aeabi_fsub+0x368>
    7bfc:	1a1a      	subs	r2, r3, r0
    7bfe:	0150      	lsls	r0, r2, #5
    7c00:	d520      	bpl.n	7c44 <__aeabi_fsub+0x370>
    7c02:	464a      	mov	r2, r9
    7c04:	2407      	movs	r4, #7
    7c06:	1ad3      	subs	r3, r2, r3
    7c08:	401c      	ands	r4, r3
    7c0a:	4688      	mov	r8, r1
    7c0c:	2500      	movs	r5, #0
    7c0e:	e6a6      	b.n	795e <__aeabi_fsub+0x8a>
    7c10:	1c74      	adds	r4, r6, #1
    7c12:	d0c9      	beq.n	7ba8 <__aeabi_fsub+0x2d4>
    7c14:	43f6      	mvns	r6, r6
    7c16:	28ff      	cmp	r0, #255	; 0xff
    7c18:	d1bc      	bne.n	7b94 <__aeabi_fsub+0x2c0>
    7c1a:	464b      	mov	r3, r9
    7c1c:	e720      	b.n	7a60 <__aeabi_fsub+0x18c>
    7c1e:	4699      	mov	r9, r3
    7c20:	464b      	mov	r3, r9
    7c22:	2500      	movs	r5, #0
    7c24:	08db      	lsrs	r3, r3, #3
    7c26:	e72b      	b.n	7a80 <__aeabi_fsub+0x1ac>
    7c28:	2301      	movs	r3, #1
    7c2a:	e740      	b.n	7aae <__aeabi_fsub+0x1da>
    7c2c:	2200      	movs	r2, #0
    7c2e:	2300      	movs	r3, #0
    7c30:	e6a9      	b.n	7986 <__aeabi_fsub+0xb2>
    7c32:	2380      	movs	r3, #128	; 0x80
    7c34:	2200      	movs	r2, #0
    7c36:	03db      	lsls	r3, r3, #15
    7c38:	24ff      	movs	r4, #255	; 0xff
    7c3a:	e6a4      	b.n	7986 <__aeabi_fsub+0xb2>
    7c3c:	2500      	movs	r5, #0
    7c3e:	e71c      	b.n	7a7a <__aeabi_fsub+0x1a6>
    7c40:	2301      	movs	r3, #1
    7c42:	e7b1      	b.n	7ba8 <__aeabi_fsub+0x2d4>
    7c44:	2a00      	cmp	r2, #0
    7c46:	d0f1      	beq.n	7c2c <__aeabi_fsub+0x358>
    7c48:	0013      	movs	r3, r2
    7c4a:	2500      	movs	r5, #0
    7c4c:	e6fc      	b.n	7a48 <__aeabi_fsub+0x174>
    7c4e:	2500      	movs	r5, #0
    7c50:	e6fa      	b.n	7a48 <__aeabi_fsub+0x174>
    7c52:	46c0      	nop			; (mov r8, r8)
    7c54:	7dffffff 	.word	0x7dffffff
    7c58:	fbffffff 	.word	0xfbffffff

00007c5c <__aeabi_ui2f>:
__aeabi_ui2f():
    7c5c:	b570      	push	{r4, r5, r6, lr}
    7c5e:	1e04      	subs	r4, r0, #0
    7c60:	d034      	beq.n	7ccc <__aeabi_ui2f+0x70>
    7c62:	f001 feaf 	bl	99c4 <__clzsi2>
    7c66:	229e      	movs	r2, #158	; 0x9e
    7c68:	1a12      	subs	r2, r2, r0
    7c6a:	2a96      	cmp	r2, #150	; 0x96
    7c6c:	dc07      	bgt.n	7c7e <__aeabi_ui2f+0x22>
    7c6e:	b2d2      	uxtb	r2, r2
    7c70:	2808      	cmp	r0, #8
    7c72:	dd2e      	ble.n	7cd2 <__aeabi_ui2f+0x76>
    7c74:	3808      	subs	r0, #8
    7c76:	4084      	lsls	r4, r0
    7c78:	0260      	lsls	r0, r4, #9
    7c7a:	0a40      	lsrs	r0, r0, #9
    7c7c:	e021      	b.n	7cc2 <__aeabi_ui2f+0x66>
    7c7e:	2a99      	cmp	r2, #153	; 0x99
    7c80:	dd09      	ble.n	7c96 <__aeabi_ui2f+0x3a>
    7c82:	0003      	movs	r3, r0
    7c84:	0021      	movs	r1, r4
    7c86:	331b      	adds	r3, #27
    7c88:	4099      	lsls	r1, r3
    7c8a:	1e4b      	subs	r3, r1, #1
    7c8c:	4199      	sbcs	r1, r3
    7c8e:	2305      	movs	r3, #5
    7c90:	1a1b      	subs	r3, r3, r0
    7c92:	40dc      	lsrs	r4, r3
    7c94:	430c      	orrs	r4, r1
    7c96:	2805      	cmp	r0, #5
    7c98:	dd01      	ble.n	7c9e <__aeabi_ui2f+0x42>
    7c9a:	1f43      	subs	r3, r0, #5
    7c9c:	409c      	lsls	r4, r3
    7c9e:	0023      	movs	r3, r4
    7ca0:	490d      	ldr	r1, [pc, #52]	; (7cd8 <__aeabi_ui2f+0x7c>)
    7ca2:	400b      	ands	r3, r1
    7ca4:	0765      	lsls	r5, r4, #29
    7ca6:	d009      	beq.n	7cbc <__aeabi_ui2f+0x60>
    7ca8:	250f      	movs	r5, #15
    7caa:	402c      	ands	r4, r5
    7cac:	2c04      	cmp	r4, #4
    7cae:	d005      	beq.n	7cbc <__aeabi_ui2f+0x60>
    7cb0:	3304      	adds	r3, #4
    7cb2:	015c      	lsls	r4, r3, #5
    7cb4:	d502      	bpl.n	7cbc <__aeabi_ui2f+0x60>
    7cb6:	229f      	movs	r2, #159	; 0x9f
    7cb8:	400b      	ands	r3, r1
    7cba:	1a12      	subs	r2, r2, r0
    7cbc:	019b      	lsls	r3, r3, #6
    7cbe:	0a58      	lsrs	r0, r3, #9
    7cc0:	b2d2      	uxtb	r2, r2
    7cc2:	0240      	lsls	r0, r0, #9
    7cc4:	05d2      	lsls	r2, r2, #23
    7cc6:	0a40      	lsrs	r0, r0, #9
    7cc8:	4310      	orrs	r0, r2
    7cca:	bd70      	pop	{r4, r5, r6, pc}
    7ccc:	2200      	movs	r2, #0
    7cce:	2000      	movs	r0, #0
    7cd0:	e7f7      	b.n	7cc2 <__aeabi_ui2f+0x66>
    7cd2:	0260      	lsls	r0, r4, #9
    7cd4:	0a40      	lsrs	r0, r0, #9
    7cd6:	e7f4      	b.n	7cc2 <__aeabi_ui2f+0x66>
    7cd8:	fbffffff 	.word	0xfbffffff

00007cdc <__aeabi_dadd>:
__aeabi_dadd():
    7cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    7cde:	464f      	mov	r7, r9
    7ce0:	4646      	mov	r6, r8
    7ce2:	46d6      	mov	lr, sl
    7ce4:	000c      	movs	r4, r1
    7ce6:	0309      	lsls	r1, r1, #12
    7ce8:	b5c0      	push	{r6, r7, lr}
    7cea:	0a49      	lsrs	r1, r1, #9
    7cec:	0f47      	lsrs	r7, r0, #29
    7cee:	005e      	lsls	r6, r3, #1
    7cf0:	4339      	orrs	r1, r7
    7cf2:	031f      	lsls	r7, r3, #12
    7cf4:	0fdb      	lsrs	r3, r3, #31
    7cf6:	469c      	mov	ip, r3
    7cf8:	0065      	lsls	r5, r4, #1
    7cfa:	0a7b      	lsrs	r3, r7, #9
    7cfc:	0f57      	lsrs	r7, r2, #29
    7cfe:	431f      	orrs	r7, r3
    7d00:	0d6d      	lsrs	r5, r5, #21
    7d02:	0fe4      	lsrs	r4, r4, #31
    7d04:	0d76      	lsrs	r6, r6, #21
    7d06:	46a1      	mov	r9, r4
    7d08:	00c0      	lsls	r0, r0, #3
    7d0a:	46b8      	mov	r8, r7
    7d0c:	00d2      	lsls	r2, r2, #3
    7d0e:	1bab      	subs	r3, r5, r6
    7d10:	4564      	cmp	r4, ip
    7d12:	d07b      	beq.n	7e0c <__aeabi_dadd+0x130>
    7d14:	2b00      	cmp	r3, #0
    7d16:	dd5f      	ble.n	7dd8 <__aeabi_dadd+0xfc>
    7d18:	2e00      	cmp	r6, #0
    7d1a:	d000      	beq.n	7d1e <__aeabi_dadd+0x42>
    7d1c:	e0a4      	b.n	7e68 <__aeabi_dadd+0x18c>
    7d1e:	003e      	movs	r6, r7
    7d20:	4316      	orrs	r6, r2
    7d22:	d100      	bne.n	7d26 <__aeabi_dadd+0x4a>
    7d24:	e112      	b.n	7f4c <__aeabi_dadd+0x270>
    7d26:	1e5e      	subs	r6, r3, #1
    7d28:	2e00      	cmp	r6, #0
    7d2a:	d000      	beq.n	7d2e <__aeabi_dadd+0x52>
    7d2c:	e19e      	b.n	806c <__aeabi_dadd+0x390>
    7d2e:	1a87      	subs	r7, r0, r2
    7d30:	4643      	mov	r3, r8
    7d32:	42b8      	cmp	r0, r7
    7d34:	4180      	sbcs	r0, r0
    7d36:	2501      	movs	r5, #1
    7d38:	1ac9      	subs	r1, r1, r3
    7d3a:	4240      	negs	r0, r0
    7d3c:	1a09      	subs	r1, r1, r0
    7d3e:	020b      	lsls	r3, r1, #8
    7d40:	d400      	bmi.n	7d44 <__aeabi_dadd+0x68>
    7d42:	e131      	b.n	7fa8 <__aeabi_dadd+0x2cc>
    7d44:	0249      	lsls	r1, r1, #9
    7d46:	0a4e      	lsrs	r6, r1, #9
    7d48:	2e00      	cmp	r6, #0
    7d4a:	d100      	bne.n	7d4e <__aeabi_dadd+0x72>
    7d4c:	e16e      	b.n	802c <__aeabi_dadd+0x350>
    7d4e:	0030      	movs	r0, r6
    7d50:	f001 fe38 	bl	99c4 <__clzsi2>
    7d54:	0003      	movs	r3, r0
    7d56:	3b08      	subs	r3, #8
    7d58:	2b1f      	cmp	r3, #31
    7d5a:	dd00      	ble.n	7d5e <__aeabi_dadd+0x82>
    7d5c:	e161      	b.n	8022 <__aeabi_dadd+0x346>
    7d5e:	2220      	movs	r2, #32
    7d60:	0039      	movs	r1, r7
    7d62:	1ad2      	subs	r2, r2, r3
    7d64:	409e      	lsls	r6, r3
    7d66:	40d1      	lsrs	r1, r2
    7d68:	409f      	lsls	r7, r3
    7d6a:	430e      	orrs	r6, r1
    7d6c:	429d      	cmp	r5, r3
    7d6e:	dd00      	ble.n	7d72 <__aeabi_dadd+0x96>
    7d70:	e151      	b.n	8016 <__aeabi_dadd+0x33a>
    7d72:	1b5d      	subs	r5, r3, r5
    7d74:	1c6b      	adds	r3, r5, #1
    7d76:	2b1f      	cmp	r3, #31
    7d78:	dd00      	ble.n	7d7c <__aeabi_dadd+0xa0>
    7d7a:	e17c      	b.n	8076 <__aeabi_dadd+0x39a>
    7d7c:	2120      	movs	r1, #32
    7d7e:	1ac9      	subs	r1, r1, r3
    7d80:	003d      	movs	r5, r7
    7d82:	0030      	movs	r0, r6
    7d84:	408f      	lsls	r7, r1
    7d86:	4088      	lsls	r0, r1
    7d88:	40dd      	lsrs	r5, r3
    7d8a:	1e79      	subs	r1, r7, #1
    7d8c:	418f      	sbcs	r7, r1
    7d8e:	0031      	movs	r1, r6
    7d90:	2207      	movs	r2, #7
    7d92:	4328      	orrs	r0, r5
    7d94:	40d9      	lsrs	r1, r3
    7d96:	2500      	movs	r5, #0
    7d98:	4307      	orrs	r7, r0
    7d9a:	403a      	ands	r2, r7
    7d9c:	2a00      	cmp	r2, #0
    7d9e:	d009      	beq.n	7db4 <__aeabi_dadd+0xd8>
    7da0:	230f      	movs	r3, #15
    7da2:	403b      	ands	r3, r7
    7da4:	2b04      	cmp	r3, #4
    7da6:	d005      	beq.n	7db4 <__aeabi_dadd+0xd8>
    7da8:	1d3b      	adds	r3, r7, #4
    7daa:	42bb      	cmp	r3, r7
    7dac:	41bf      	sbcs	r7, r7
    7dae:	427f      	negs	r7, r7
    7db0:	19c9      	adds	r1, r1, r7
    7db2:	001f      	movs	r7, r3
    7db4:	020b      	lsls	r3, r1, #8
    7db6:	d400      	bmi.n	7dba <__aeabi_dadd+0xde>
    7db8:	e226      	b.n	8208 <__aeabi_dadd+0x52c>
    7dba:	1c6a      	adds	r2, r5, #1
    7dbc:	4bc6      	ldr	r3, [pc, #792]	; (80d8 <__aeabi_dadd+0x3fc>)
    7dbe:	0555      	lsls	r5, r2, #21
    7dc0:	0d6d      	lsrs	r5, r5, #21
    7dc2:	429a      	cmp	r2, r3
    7dc4:	d100      	bne.n	7dc8 <__aeabi_dadd+0xec>
    7dc6:	e106      	b.n	7fd6 <__aeabi_dadd+0x2fa>
    7dc8:	4ac4      	ldr	r2, [pc, #784]	; (80dc <__aeabi_dadd+0x400>)
    7dca:	08ff      	lsrs	r7, r7, #3
    7dcc:	400a      	ands	r2, r1
    7dce:	0753      	lsls	r3, r2, #29
    7dd0:	0252      	lsls	r2, r2, #9
    7dd2:	433b      	orrs	r3, r7
    7dd4:	0b12      	lsrs	r2, r2, #12
    7dd6:	e08e      	b.n	7ef6 <__aeabi_dadd+0x21a>
    7dd8:	2b00      	cmp	r3, #0
    7dda:	d000      	beq.n	7dde <__aeabi_dadd+0x102>
    7ddc:	e0b8      	b.n	7f50 <__aeabi_dadd+0x274>
    7dde:	1c6b      	adds	r3, r5, #1
    7de0:	055b      	lsls	r3, r3, #21
    7de2:	0d5b      	lsrs	r3, r3, #21
    7de4:	2b01      	cmp	r3, #1
    7de6:	dc00      	bgt.n	7dea <__aeabi_dadd+0x10e>
    7de8:	e130      	b.n	804c <__aeabi_dadd+0x370>
    7dea:	1a87      	subs	r7, r0, r2
    7dec:	4643      	mov	r3, r8
    7dee:	42b8      	cmp	r0, r7
    7df0:	41b6      	sbcs	r6, r6
    7df2:	1acb      	subs	r3, r1, r3
    7df4:	4276      	negs	r6, r6
    7df6:	1b9e      	subs	r6, r3, r6
    7df8:	0233      	lsls	r3, r6, #8
    7dfa:	d500      	bpl.n	7dfe <__aeabi_dadd+0x122>
    7dfc:	e14c      	b.n	8098 <__aeabi_dadd+0x3bc>
    7dfe:	003b      	movs	r3, r7
    7e00:	4333      	orrs	r3, r6
    7e02:	d1a1      	bne.n	7d48 <__aeabi_dadd+0x6c>
    7e04:	2200      	movs	r2, #0
    7e06:	2400      	movs	r4, #0
    7e08:	2500      	movs	r5, #0
    7e0a:	e070      	b.n	7eee <__aeabi_dadd+0x212>
    7e0c:	2b00      	cmp	r3, #0
    7e0e:	dc00      	bgt.n	7e12 <__aeabi_dadd+0x136>
    7e10:	e0e5      	b.n	7fde <__aeabi_dadd+0x302>
    7e12:	2e00      	cmp	r6, #0
    7e14:	d100      	bne.n	7e18 <__aeabi_dadd+0x13c>
    7e16:	e083      	b.n	7f20 <__aeabi_dadd+0x244>
    7e18:	4eaf      	ldr	r6, [pc, #700]	; (80d8 <__aeabi_dadd+0x3fc>)
    7e1a:	42b5      	cmp	r5, r6
    7e1c:	d060      	beq.n	7ee0 <__aeabi_dadd+0x204>
    7e1e:	2680      	movs	r6, #128	; 0x80
    7e20:	0436      	lsls	r6, r6, #16
    7e22:	4337      	orrs	r7, r6
    7e24:	46b8      	mov	r8, r7
    7e26:	2b38      	cmp	r3, #56	; 0x38
    7e28:	dc00      	bgt.n	7e2c <__aeabi_dadd+0x150>
    7e2a:	e13e      	b.n	80aa <__aeabi_dadd+0x3ce>
    7e2c:	4643      	mov	r3, r8
    7e2e:	4313      	orrs	r3, r2
    7e30:	001f      	movs	r7, r3
    7e32:	1e7a      	subs	r2, r7, #1
    7e34:	4197      	sbcs	r7, r2
    7e36:	183f      	adds	r7, r7, r0
    7e38:	4287      	cmp	r7, r0
    7e3a:	4180      	sbcs	r0, r0
    7e3c:	4240      	negs	r0, r0
    7e3e:	1809      	adds	r1, r1, r0
    7e40:	020b      	lsls	r3, r1, #8
    7e42:	d400      	bmi.n	7e46 <__aeabi_dadd+0x16a>
    7e44:	e0b0      	b.n	7fa8 <__aeabi_dadd+0x2cc>
    7e46:	4ba4      	ldr	r3, [pc, #656]	; (80d8 <__aeabi_dadd+0x3fc>)
    7e48:	3501      	adds	r5, #1
    7e4a:	429d      	cmp	r5, r3
    7e4c:	d100      	bne.n	7e50 <__aeabi_dadd+0x174>
    7e4e:	e0c3      	b.n	7fd8 <__aeabi_dadd+0x2fc>
    7e50:	4aa2      	ldr	r2, [pc, #648]	; (80dc <__aeabi_dadd+0x400>)
    7e52:	087b      	lsrs	r3, r7, #1
    7e54:	400a      	ands	r2, r1
    7e56:	2101      	movs	r1, #1
    7e58:	400f      	ands	r7, r1
    7e5a:	431f      	orrs	r7, r3
    7e5c:	0851      	lsrs	r1, r2, #1
    7e5e:	07d3      	lsls	r3, r2, #31
    7e60:	2207      	movs	r2, #7
    7e62:	431f      	orrs	r7, r3
    7e64:	403a      	ands	r2, r7
    7e66:	e799      	b.n	7d9c <__aeabi_dadd+0xc0>
    7e68:	4e9b      	ldr	r6, [pc, #620]	; (80d8 <__aeabi_dadd+0x3fc>)
    7e6a:	42b5      	cmp	r5, r6
    7e6c:	d038      	beq.n	7ee0 <__aeabi_dadd+0x204>
    7e6e:	2680      	movs	r6, #128	; 0x80
    7e70:	0436      	lsls	r6, r6, #16
    7e72:	4337      	orrs	r7, r6
    7e74:	46b8      	mov	r8, r7
    7e76:	2b38      	cmp	r3, #56	; 0x38
    7e78:	dd00      	ble.n	7e7c <__aeabi_dadd+0x1a0>
    7e7a:	e0dc      	b.n	8036 <__aeabi_dadd+0x35a>
    7e7c:	2b1f      	cmp	r3, #31
    7e7e:	dc00      	bgt.n	7e82 <__aeabi_dadd+0x1a6>
    7e80:	e130      	b.n	80e4 <__aeabi_dadd+0x408>
    7e82:	001e      	movs	r6, r3
    7e84:	4647      	mov	r7, r8
    7e86:	3e20      	subs	r6, #32
    7e88:	40f7      	lsrs	r7, r6
    7e8a:	46bc      	mov	ip, r7
    7e8c:	2b20      	cmp	r3, #32
    7e8e:	d004      	beq.n	7e9a <__aeabi_dadd+0x1be>
    7e90:	2640      	movs	r6, #64	; 0x40
    7e92:	1af3      	subs	r3, r6, r3
    7e94:	4646      	mov	r6, r8
    7e96:	409e      	lsls	r6, r3
    7e98:	4332      	orrs	r2, r6
    7e9a:	0017      	movs	r7, r2
    7e9c:	4663      	mov	r3, ip
    7e9e:	1e7a      	subs	r2, r7, #1
    7ea0:	4197      	sbcs	r7, r2
    7ea2:	431f      	orrs	r7, r3
    7ea4:	e0cc      	b.n	8040 <__aeabi_dadd+0x364>
    7ea6:	2b00      	cmp	r3, #0
    7ea8:	d100      	bne.n	7eac <__aeabi_dadd+0x1d0>
    7eaa:	e204      	b.n	82b6 <__aeabi_dadd+0x5da>
    7eac:	4643      	mov	r3, r8
    7eae:	4313      	orrs	r3, r2
    7eb0:	d100      	bne.n	7eb4 <__aeabi_dadd+0x1d8>
    7eb2:	e159      	b.n	8168 <__aeabi_dadd+0x48c>
    7eb4:	074b      	lsls	r3, r1, #29
    7eb6:	08c0      	lsrs	r0, r0, #3
    7eb8:	4318      	orrs	r0, r3
    7eba:	2380      	movs	r3, #128	; 0x80
    7ebc:	08c9      	lsrs	r1, r1, #3
    7ebe:	031b      	lsls	r3, r3, #12
    7ec0:	4219      	tst	r1, r3
    7ec2:	d008      	beq.n	7ed6 <__aeabi_dadd+0x1fa>
    7ec4:	4645      	mov	r5, r8
    7ec6:	08ed      	lsrs	r5, r5, #3
    7ec8:	421d      	tst	r5, r3
    7eca:	d104      	bne.n	7ed6 <__aeabi_dadd+0x1fa>
    7ecc:	4643      	mov	r3, r8
    7ece:	08d0      	lsrs	r0, r2, #3
    7ed0:	0759      	lsls	r1, r3, #29
    7ed2:	4308      	orrs	r0, r1
    7ed4:	0029      	movs	r1, r5
    7ed6:	0f42      	lsrs	r2, r0, #29
    7ed8:	00c9      	lsls	r1, r1, #3
    7eda:	4d7f      	ldr	r5, [pc, #508]	; (80d8 <__aeabi_dadd+0x3fc>)
    7edc:	4311      	orrs	r1, r2
    7ede:	00c0      	lsls	r0, r0, #3
    7ee0:	074b      	lsls	r3, r1, #29
    7ee2:	08ca      	lsrs	r2, r1, #3
    7ee4:	497c      	ldr	r1, [pc, #496]	; (80d8 <__aeabi_dadd+0x3fc>)
    7ee6:	08c0      	lsrs	r0, r0, #3
    7ee8:	4303      	orrs	r3, r0
    7eea:	428d      	cmp	r5, r1
    7eec:	d068      	beq.n	7fc0 <__aeabi_dadd+0x2e4>
    7eee:	0312      	lsls	r2, r2, #12
    7ef0:	056d      	lsls	r5, r5, #21
    7ef2:	0b12      	lsrs	r2, r2, #12
    7ef4:	0d6d      	lsrs	r5, r5, #21
    7ef6:	2100      	movs	r1, #0
    7ef8:	0312      	lsls	r2, r2, #12
    7efa:	0018      	movs	r0, r3
    7efc:	0b13      	lsrs	r3, r2, #12
    7efe:	0d0a      	lsrs	r2, r1, #20
    7f00:	0512      	lsls	r2, r2, #20
    7f02:	431a      	orrs	r2, r3
    7f04:	4b76      	ldr	r3, [pc, #472]	; (80e0 <__aeabi_dadd+0x404>)
    7f06:	052d      	lsls	r5, r5, #20
    7f08:	4013      	ands	r3, r2
    7f0a:	432b      	orrs	r3, r5
    7f0c:	005b      	lsls	r3, r3, #1
    7f0e:	07e4      	lsls	r4, r4, #31
    7f10:	085b      	lsrs	r3, r3, #1
    7f12:	4323      	orrs	r3, r4
    7f14:	0019      	movs	r1, r3
    7f16:	bc1c      	pop	{r2, r3, r4}
    7f18:	4690      	mov	r8, r2
    7f1a:	4699      	mov	r9, r3
    7f1c:	46a2      	mov	sl, r4
    7f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7f20:	003e      	movs	r6, r7
    7f22:	4316      	orrs	r6, r2
    7f24:	d012      	beq.n	7f4c <__aeabi_dadd+0x270>
    7f26:	1e5e      	subs	r6, r3, #1
    7f28:	2e00      	cmp	r6, #0
    7f2a:	d000      	beq.n	7f2e <__aeabi_dadd+0x252>
    7f2c:	e100      	b.n	8130 <__aeabi_dadd+0x454>
    7f2e:	1887      	adds	r7, r0, r2
    7f30:	4287      	cmp	r7, r0
    7f32:	4180      	sbcs	r0, r0
    7f34:	4441      	add	r1, r8
    7f36:	4240      	negs	r0, r0
    7f38:	1809      	adds	r1, r1, r0
    7f3a:	2501      	movs	r5, #1
    7f3c:	020b      	lsls	r3, r1, #8
    7f3e:	d533      	bpl.n	7fa8 <__aeabi_dadd+0x2cc>
    7f40:	2502      	movs	r5, #2
    7f42:	e785      	b.n	7e50 <__aeabi_dadd+0x174>
    7f44:	4664      	mov	r4, ip
    7f46:	0033      	movs	r3, r6
    7f48:	4641      	mov	r1, r8
    7f4a:	0010      	movs	r0, r2
    7f4c:	001d      	movs	r5, r3
    7f4e:	e7c7      	b.n	7ee0 <__aeabi_dadd+0x204>
    7f50:	2d00      	cmp	r5, #0
    7f52:	d000      	beq.n	7f56 <__aeabi_dadd+0x27a>
    7f54:	e0da      	b.n	810c <__aeabi_dadd+0x430>
    7f56:	000c      	movs	r4, r1
    7f58:	4304      	orrs	r4, r0
    7f5a:	d0f3      	beq.n	7f44 <__aeabi_dadd+0x268>
    7f5c:	1c5c      	adds	r4, r3, #1
    7f5e:	d100      	bne.n	7f62 <__aeabi_dadd+0x286>
    7f60:	e19f      	b.n	82a2 <__aeabi_dadd+0x5c6>
    7f62:	4c5d      	ldr	r4, [pc, #372]	; (80d8 <__aeabi_dadd+0x3fc>)
    7f64:	42a6      	cmp	r6, r4
    7f66:	d100      	bne.n	7f6a <__aeabi_dadd+0x28e>
    7f68:	e12f      	b.n	81ca <__aeabi_dadd+0x4ee>
    7f6a:	43db      	mvns	r3, r3
    7f6c:	2b38      	cmp	r3, #56	; 0x38
    7f6e:	dd00      	ble.n	7f72 <__aeabi_dadd+0x296>
    7f70:	e166      	b.n	8240 <__aeabi_dadd+0x564>
    7f72:	2b1f      	cmp	r3, #31
    7f74:	dd00      	ble.n	7f78 <__aeabi_dadd+0x29c>
    7f76:	e183      	b.n	8280 <__aeabi_dadd+0x5a4>
    7f78:	2420      	movs	r4, #32
    7f7a:	0005      	movs	r5, r0
    7f7c:	1ae4      	subs	r4, r4, r3
    7f7e:	000f      	movs	r7, r1
    7f80:	40dd      	lsrs	r5, r3
    7f82:	40d9      	lsrs	r1, r3
    7f84:	40a0      	lsls	r0, r4
    7f86:	4643      	mov	r3, r8
    7f88:	40a7      	lsls	r7, r4
    7f8a:	1a5b      	subs	r3, r3, r1
    7f8c:	1e44      	subs	r4, r0, #1
    7f8e:	41a0      	sbcs	r0, r4
    7f90:	4698      	mov	r8, r3
    7f92:	432f      	orrs	r7, r5
    7f94:	4338      	orrs	r0, r7
    7f96:	1a17      	subs	r7, r2, r0
    7f98:	42ba      	cmp	r2, r7
    7f9a:	4192      	sbcs	r2, r2
    7f9c:	4643      	mov	r3, r8
    7f9e:	4252      	negs	r2, r2
    7fa0:	1a99      	subs	r1, r3, r2
    7fa2:	4664      	mov	r4, ip
    7fa4:	0035      	movs	r5, r6
    7fa6:	e6ca      	b.n	7d3e <__aeabi_dadd+0x62>
    7fa8:	2207      	movs	r2, #7
    7faa:	403a      	ands	r2, r7
    7fac:	2a00      	cmp	r2, #0
    7fae:	d000      	beq.n	7fb2 <__aeabi_dadd+0x2d6>
    7fb0:	e6f6      	b.n	7da0 <__aeabi_dadd+0xc4>
    7fb2:	074b      	lsls	r3, r1, #29
    7fb4:	08ca      	lsrs	r2, r1, #3
    7fb6:	4948      	ldr	r1, [pc, #288]	; (80d8 <__aeabi_dadd+0x3fc>)
    7fb8:	08ff      	lsrs	r7, r7, #3
    7fba:	433b      	orrs	r3, r7
    7fbc:	428d      	cmp	r5, r1
    7fbe:	d196      	bne.n	7eee <__aeabi_dadd+0x212>
    7fc0:	0019      	movs	r1, r3
    7fc2:	4311      	orrs	r1, r2
    7fc4:	d100      	bne.n	7fc8 <__aeabi_dadd+0x2ec>
    7fc6:	e19e      	b.n	8306 <__aeabi_dadd+0x62a>
    7fc8:	2180      	movs	r1, #128	; 0x80
    7fca:	0309      	lsls	r1, r1, #12
    7fcc:	430a      	orrs	r2, r1
    7fce:	0312      	lsls	r2, r2, #12
    7fd0:	0b12      	lsrs	r2, r2, #12
    7fd2:	4d41      	ldr	r5, [pc, #260]	; (80d8 <__aeabi_dadd+0x3fc>)
    7fd4:	e78f      	b.n	7ef6 <__aeabi_dadd+0x21a>
    7fd6:	0015      	movs	r5, r2
    7fd8:	2200      	movs	r2, #0
    7fda:	2300      	movs	r3, #0
    7fdc:	e78b      	b.n	7ef6 <__aeabi_dadd+0x21a>
    7fde:	2b00      	cmp	r3, #0
    7fe0:	d000      	beq.n	7fe4 <__aeabi_dadd+0x308>
    7fe2:	e0c7      	b.n	8174 <__aeabi_dadd+0x498>
    7fe4:	1c6b      	adds	r3, r5, #1
    7fe6:	055f      	lsls	r7, r3, #21
    7fe8:	0d7f      	lsrs	r7, r7, #21
    7fea:	2f01      	cmp	r7, #1
    7fec:	dc00      	bgt.n	7ff0 <__aeabi_dadd+0x314>
    7fee:	e0f1      	b.n	81d4 <__aeabi_dadd+0x4f8>
    7ff0:	4d39      	ldr	r5, [pc, #228]	; (80d8 <__aeabi_dadd+0x3fc>)
    7ff2:	42ab      	cmp	r3, r5
    7ff4:	d100      	bne.n	7ff8 <__aeabi_dadd+0x31c>
    7ff6:	e0b9      	b.n	816c <__aeabi_dadd+0x490>
    7ff8:	1885      	adds	r5, r0, r2
    7ffa:	000a      	movs	r2, r1
    7ffc:	4285      	cmp	r5, r0
    7ffe:	4189      	sbcs	r1, r1
    8000:	4442      	add	r2, r8
    8002:	4249      	negs	r1, r1
    8004:	1851      	adds	r1, r2, r1
    8006:	2207      	movs	r2, #7
    8008:	07cf      	lsls	r7, r1, #31
    800a:	086d      	lsrs	r5, r5, #1
    800c:	432f      	orrs	r7, r5
    800e:	0849      	lsrs	r1, r1, #1
    8010:	403a      	ands	r2, r7
    8012:	001d      	movs	r5, r3
    8014:	e6c2      	b.n	7d9c <__aeabi_dadd+0xc0>
    8016:	2207      	movs	r2, #7
    8018:	4930      	ldr	r1, [pc, #192]	; (80dc <__aeabi_dadd+0x400>)
    801a:	1aed      	subs	r5, r5, r3
    801c:	4031      	ands	r1, r6
    801e:	403a      	ands	r2, r7
    8020:	e6bc      	b.n	7d9c <__aeabi_dadd+0xc0>
    8022:	003e      	movs	r6, r7
    8024:	3828      	subs	r0, #40	; 0x28
    8026:	4086      	lsls	r6, r0
    8028:	2700      	movs	r7, #0
    802a:	e69f      	b.n	7d6c <__aeabi_dadd+0x90>
    802c:	0038      	movs	r0, r7
    802e:	f001 fcc9 	bl	99c4 <__clzsi2>
    8032:	3020      	adds	r0, #32
    8034:	e68e      	b.n	7d54 <__aeabi_dadd+0x78>
    8036:	4643      	mov	r3, r8
    8038:	4313      	orrs	r3, r2
    803a:	001f      	movs	r7, r3
    803c:	1e7a      	subs	r2, r7, #1
    803e:	4197      	sbcs	r7, r2
    8040:	1bc7      	subs	r7, r0, r7
    8042:	42b8      	cmp	r0, r7
    8044:	4180      	sbcs	r0, r0
    8046:	4240      	negs	r0, r0
    8048:	1a09      	subs	r1, r1, r0
    804a:	e678      	b.n	7d3e <__aeabi_dadd+0x62>
    804c:	000e      	movs	r6, r1
    804e:	003b      	movs	r3, r7
    8050:	4306      	orrs	r6, r0
    8052:	4313      	orrs	r3, r2
    8054:	2d00      	cmp	r5, #0
    8056:	d161      	bne.n	811c <__aeabi_dadd+0x440>
    8058:	2e00      	cmp	r6, #0
    805a:	d000      	beq.n	805e <__aeabi_dadd+0x382>
    805c:	e0f4      	b.n	8248 <__aeabi_dadd+0x56c>
    805e:	2b00      	cmp	r3, #0
    8060:	d100      	bne.n	8064 <__aeabi_dadd+0x388>
    8062:	e11b      	b.n	829c <__aeabi_dadd+0x5c0>
    8064:	4664      	mov	r4, ip
    8066:	0039      	movs	r1, r7
    8068:	0010      	movs	r0, r2
    806a:	e739      	b.n	7ee0 <__aeabi_dadd+0x204>
    806c:	4f1a      	ldr	r7, [pc, #104]	; (80d8 <__aeabi_dadd+0x3fc>)
    806e:	42bb      	cmp	r3, r7
    8070:	d07a      	beq.n	8168 <__aeabi_dadd+0x48c>
    8072:	0033      	movs	r3, r6
    8074:	e6ff      	b.n	7e76 <__aeabi_dadd+0x19a>
    8076:	0030      	movs	r0, r6
    8078:	3d1f      	subs	r5, #31
    807a:	40e8      	lsrs	r0, r5
    807c:	2b20      	cmp	r3, #32
    807e:	d003      	beq.n	8088 <__aeabi_dadd+0x3ac>
    8080:	2140      	movs	r1, #64	; 0x40
    8082:	1acb      	subs	r3, r1, r3
    8084:	409e      	lsls	r6, r3
    8086:	4337      	orrs	r7, r6
    8088:	1e7b      	subs	r3, r7, #1
    808a:	419f      	sbcs	r7, r3
    808c:	2207      	movs	r2, #7
    808e:	4307      	orrs	r7, r0
    8090:	403a      	ands	r2, r7
    8092:	2100      	movs	r1, #0
    8094:	2500      	movs	r5, #0
    8096:	e789      	b.n	7fac <__aeabi_dadd+0x2d0>
    8098:	1a17      	subs	r7, r2, r0
    809a:	4643      	mov	r3, r8
    809c:	42ba      	cmp	r2, r7
    809e:	41b6      	sbcs	r6, r6
    80a0:	1a59      	subs	r1, r3, r1
    80a2:	4276      	negs	r6, r6
    80a4:	1b8e      	subs	r6, r1, r6
    80a6:	4664      	mov	r4, ip
    80a8:	e64e      	b.n	7d48 <__aeabi_dadd+0x6c>
    80aa:	2b1f      	cmp	r3, #31
    80ac:	dd00      	ble.n	80b0 <__aeabi_dadd+0x3d4>
    80ae:	e0ad      	b.n	820c <__aeabi_dadd+0x530>
    80b0:	2620      	movs	r6, #32
    80b2:	4647      	mov	r7, r8
    80b4:	1af6      	subs	r6, r6, r3
    80b6:	40b7      	lsls	r7, r6
    80b8:	46b9      	mov	r9, r7
    80ba:	0017      	movs	r7, r2
    80bc:	46b2      	mov	sl, r6
    80be:	40df      	lsrs	r7, r3
    80c0:	464e      	mov	r6, r9
    80c2:	433e      	orrs	r6, r7
    80c4:	0037      	movs	r7, r6
    80c6:	4656      	mov	r6, sl
    80c8:	40b2      	lsls	r2, r6
    80ca:	1e56      	subs	r6, r2, #1
    80cc:	41b2      	sbcs	r2, r6
    80ce:	4317      	orrs	r7, r2
    80d0:	4642      	mov	r2, r8
    80d2:	40da      	lsrs	r2, r3
    80d4:	1889      	adds	r1, r1, r2
    80d6:	e6ae      	b.n	7e36 <__aeabi_dadd+0x15a>
    80d8:	000007ff 	.word	0x000007ff
    80dc:	ff7fffff 	.word	0xff7fffff
    80e0:	800fffff 	.word	0x800fffff
    80e4:	2620      	movs	r6, #32
    80e6:	4647      	mov	r7, r8
    80e8:	1af6      	subs	r6, r6, r3
    80ea:	40b7      	lsls	r7, r6
    80ec:	46b9      	mov	r9, r7
    80ee:	0017      	movs	r7, r2
    80f0:	46b2      	mov	sl, r6
    80f2:	40df      	lsrs	r7, r3
    80f4:	464e      	mov	r6, r9
    80f6:	433e      	orrs	r6, r7
    80f8:	0037      	movs	r7, r6
    80fa:	4656      	mov	r6, sl
    80fc:	40b2      	lsls	r2, r6
    80fe:	1e56      	subs	r6, r2, #1
    8100:	41b2      	sbcs	r2, r6
    8102:	4317      	orrs	r7, r2
    8104:	4642      	mov	r2, r8
    8106:	40da      	lsrs	r2, r3
    8108:	1a89      	subs	r1, r1, r2
    810a:	e799      	b.n	8040 <__aeabi_dadd+0x364>
    810c:	4c7f      	ldr	r4, [pc, #508]	; (830c <__aeabi_dadd+0x630>)
    810e:	42a6      	cmp	r6, r4
    8110:	d05b      	beq.n	81ca <__aeabi_dadd+0x4ee>
    8112:	2480      	movs	r4, #128	; 0x80
    8114:	0424      	lsls	r4, r4, #16
    8116:	425b      	negs	r3, r3
    8118:	4321      	orrs	r1, r4
    811a:	e727      	b.n	7f6c <__aeabi_dadd+0x290>
    811c:	2e00      	cmp	r6, #0
    811e:	d10c      	bne.n	813a <__aeabi_dadd+0x45e>
    8120:	2b00      	cmp	r3, #0
    8122:	d100      	bne.n	8126 <__aeabi_dadd+0x44a>
    8124:	e0cb      	b.n	82be <__aeabi_dadd+0x5e2>
    8126:	4664      	mov	r4, ip
    8128:	0039      	movs	r1, r7
    812a:	0010      	movs	r0, r2
    812c:	4d77      	ldr	r5, [pc, #476]	; (830c <__aeabi_dadd+0x630>)
    812e:	e6d7      	b.n	7ee0 <__aeabi_dadd+0x204>
    8130:	4f76      	ldr	r7, [pc, #472]	; (830c <__aeabi_dadd+0x630>)
    8132:	42bb      	cmp	r3, r7
    8134:	d018      	beq.n	8168 <__aeabi_dadd+0x48c>
    8136:	0033      	movs	r3, r6
    8138:	e675      	b.n	7e26 <__aeabi_dadd+0x14a>
    813a:	2b00      	cmp	r3, #0
    813c:	d014      	beq.n	8168 <__aeabi_dadd+0x48c>
    813e:	074b      	lsls	r3, r1, #29
    8140:	08c0      	lsrs	r0, r0, #3
    8142:	4318      	orrs	r0, r3
    8144:	2380      	movs	r3, #128	; 0x80
    8146:	08c9      	lsrs	r1, r1, #3
    8148:	031b      	lsls	r3, r3, #12
    814a:	4219      	tst	r1, r3
    814c:	d007      	beq.n	815e <__aeabi_dadd+0x482>
    814e:	08fc      	lsrs	r4, r7, #3
    8150:	421c      	tst	r4, r3
    8152:	d104      	bne.n	815e <__aeabi_dadd+0x482>
    8154:	0779      	lsls	r1, r7, #29
    8156:	08d0      	lsrs	r0, r2, #3
    8158:	4308      	orrs	r0, r1
    815a:	46e1      	mov	r9, ip
    815c:	0021      	movs	r1, r4
    815e:	464c      	mov	r4, r9
    8160:	0f42      	lsrs	r2, r0, #29
    8162:	00c9      	lsls	r1, r1, #3
    8164:	4311      	orrs	r1, r2
    8166:	00c0      	lsls	r0, r0, #3
    8168:	4d68      	ldr	r5, [pc, #416]	; (830c <__aeabi_dadd+0x630>)
    816a:	e6b9      	b.n	7ee0 <__aeabi_dadd+0x204>
    816c:	001d      	movs	r5, r3
    816e:	2200      	movs	r2, #0
    8170:	2300      	movs	r3, #0
    8172:	e6c0      	b.n	7ef6 <__aeabi_dadd+0x21a>
    8174:	2d00      	cmp	r5, #0
    8176:	d15b      	bne.n	8230 <__aeabi_dadd+0x554>
    8178:	000d      	movs	r5, r1
    817a:	4305      	orrs	r5, r0
    817c:	d100      	bne.n	8180 <__aeabi_dadd+0x4a4>
    817e:	e6e2      	b.n	7f46 <__aeabi_dadd+0x26a>
    8180:	1c5d      	adds	r5, r3, #1
    8182:	d100      	bne.n	8186 <__aeabi_dadd+0x4aa>
    8184:	e0b0      	b.n	82e8 <__aeabi_dadd+0x60c>
    8186:	4d61      	ldr	r5, [pc, #388]	; (830c <__aeabi_dadd+0x630>)
    8188:	42ae      	cmp	r6, r5
    818a:	d01f      	beq.n	81cc <__aeabi_dadd+0x4f0>
    818c:	43db      	mvns	r3, r3
    818e:	2b38      	cmp	r3, #56	; 0x38
    8190:	dc71      	bgt.n	8276 <__aeabi_dadd+0x59a>
    8192:	2b1f      	cmp	r3, #31
    8194:	dd00      	ble.n	8198 <__aeabi_dadd+0x4bc>
    8196:	e096      	b.n	82c6 <__aeabi_dadd+0x5ea>
    8198:	2520      	movs	r5, #32
    819a:	000f      	movs	r7, r1
    819c:	1aed      	subs	r5, r5, r3
    819e:	40af      	lsls	r7, r5
    81a0:	46b9      	mov	r9, r7
    81a2:	0007      	movs	r7, r0
    81a4:	46aa      	mov	sl, r5
    81a6:	40df      	lsrs	r7, r3
    81a8:	464d      	mov	r5, r9
    81aa:	433d      	orrs	r5, r7
    81ac:	002f      	movs	r7, r5
    81ae:	4655      	mov	r5, sl
    81b0:	40a8      	lsls	r0, r5
    81b2:	40d9      	lsrs	r1, r3
    81b4:	1e45      	subs	r5, r0, #1
    81b6:	41a8      	sbcs	r0, r5
    81b8:	4488      	add	r8, r1
    81ba:	4307      	orrs	r7, r0
    81bc:	18bf      	adds	r7, r7, r2
    81be:	4297      	cmp	r7, r2
    81c0:	4192      	sbcs	r2, r2
    81c2:	4251      	negs	r1, r2
    81c4:	4441      	add	r1, r8
    81c6:	0035      	movs	r5, r6
    81c8:	e63a      	b.n	7e40 <__aeabi_dadd+0x164>
    81ca:	4664      	mov	r4, ip
    81cc:	0035      	movs	r5, r6
    81ce:	4641      	mov	r1, r8
    81d0:	0010      	movs	r0, r2
    81d2:	e685      	b.n	7ee0 <__aeabi_dadd+0x204>
    81d4:	000b      	movs	r3, r1
    81d6:	4303      	orrs	r3, r0
    81d8:	2d00      	cmp	r5, #0
    81da:	d000      	beq.n	81de <__aeabi_dadd+0x502>
    81dc:	e663      	b.n	7ea6 <__aeabi_dadd+0x1ca>
    81de:	2b00      	cmp	r3, #0
    81e0:	d0f5      	beq.n	81ce <__aeabi_dadd+0x4f2>
    81e2:	4643      	mov	r3, r8
    81e4:	4313      	orrs	r3, r2
    81e6:	d100      	bne.n	81ea <__aeabi_dadd+0x50e>
    81e8:	e67a      	b.n	7ee0 <__aeabi_dadd+0x204>
    81ea:	1887      	adds	r7, r0, r2
    81ec:	4287      	cmp	r7, r0
    81ee:	4180      	sbcs	r0, r0
    81f0:	2207      	movs	r2, #7
    81f2:	4441      	add	r1, r8
    81f4:	4240      	negs	r0, r0
    81f6:	1809      	adds	r1, r1, r0
    81f8:	403a      	ands	r2, r7
    81fa:	020b      	lsls	r3, r1, #8
    81fc:	d400      	bmi.n	8200 <__aeabi_dadd+0x524>
    81fe:	e6d5      	b.n	7fac <__aeabi_dadd+0x2d0>
    8200:	4b43      	ldr	r3, [pc, #268]	; (8310 <__aeabi_dadd+0x634>)
    8202:	3501      	adds	r5, #1
    8204:	4019      	ands	r1, r3
    8206:	e5c9      	b.n	7d9c <__aeabi_dadd+0xc0>
    8208:	0038      	movs	r0, r7
    820a:	e669      	b.n	7ee0 <__aeabi_dadd+0x204>
    820c:	001e      	movs	r6, r3
    820e:	4647      	mov	r7, r8
    8210:	3e20      	subs	r6, #32
    8212:	40f7      	lsrs	r7, r6
    8214:	46bc      	mov	ip, r7
    8216:	2b20      	cmp	r3, #32
    8218:	d004      	beq.n	8224 <__aeabi_dadd+0x548>
    821a:	2640      	movs	r6, #64	; 0x40
    821c:	1af3      	subs	r3, r6, r3
    821e:	4646      	mov	r6, r8
    8220:	409e      	lsls	r6, r3
    8222:	4332      	orrs	r2, r6
    8224:	0017      	movs	r7, r2
    8226:	4663      	mov	r3, ip
    8228:	1e7a      	subs	r2, r7, #1
    822a:	4197      	sbcs	r7, r2
    822c:	431f      	orrs	r7, r3
    822e:	e602      	b.n	7e36 <__aeabi_dadd+0x15a>
    8230:	4d36      	ldr	r5, [pc, #216]	; (830c <__aeabi_dadd+0x630>)
    8232:	42ae      	cmp	r6, r5
    8234:	d0ca      	beq.n	81cc <__aeabi_dadd+0x4f0>
    8236:	2580      	movs	r5, #128	; 0x80
    8238:	042d      	lsls	r5, r5, #16
    823a:	425b      	negs	r3, r3
    823c:	4329      	orrs	r1, r5
    823e:	e7a6      	b.n	818e <__aeabi_dadd+0x4b2>
    8240:	4308      	orrs	r0, r1
    8242:	1e41      	subs	r1, r0, #1
    8244:	4188      	sbcs	r0, r1
    8246:	e6a6      	b.n	7f96 <__aeabi_dadd+0x2ba>
    8248:	2b00      	cmp	r3, #0
    824a:	d100      	bne.n	824e <__aeabi_dadd+0x572>
    824c:	e648      	b.n	7ee0 <__aeabi_dadd+0x204>
    824e:	1a87      	subs	r7, r0, r2
    8250:	4643      	mov	r3, r8
    8252:	42b8      	cmp	r0, r7
    8254:	41b6      	sbcs	r6, r6
    8256:	1acb      	subs	r3, r1, r3
    8258:	4276      	negs	r6, r6
    825a:	1b9e      	subs	r6, r3, r6
    825c:	0233      	lsls	r3, r6, #8
    825e:	d54b      	bpl.n	82f8 <__aeabi_dadd+0x61c>
    8260:	1a17      	subs	r7, r2, r0
    8262:	4643      	mov	r3, r8
    8264:	42ba      	cmp	r2, r7
    8266:	4192      	sbcs	r2, r2
    8268:	1a59      	subs	r1, r3, r1
    826a:	4252      	negs	r2, r2
    826c:	1a89      	subs	r1, r1, r2
    826e:	2207      	movs	r2, #7
    8270:	4664      	mov	r4, ip
    8272:	403a      	ands	r2, r7
    8274:	e592      	b.n	7d9c <__aeabi_dadd+0xc0>
    8276:	4301      	orrs	r1, r0
    8278:	000f      	movs	r7, r1
    827a:	1e79      	subs	r1, r7, #1
    827c:	418f      	sbcs	r7, r1
    827e:	e79d      	b.n	81bc <__aeabi_dadd+0x4e0>
    8280:	001c      	movs	r4, r3
    8282:	000f      	movs	r7, r1
    8284:	3c20      	subs	r4, #32
    8286:	40e7      	lsrs	r7, r4
    8288:	2b20      	cmp	r3, #32
    828a:	d003      	beq.n	8294 <__aeabi_dadd+0x5b8>
    828c:	2440      	movs	r4, #64	; 0x40
    828e:	1ae3      	subs	r3, r4, r3
    8290:	4099      	lsls	r1, r3
    8292:	4308      	orrs	r0, r1
    8294:	1e41      	subs	r1, r0, #1
    8296:	4188      	sbcs	r0, r1
    8298:	4338      	orrs	r0, r7
    829a:	e67c      	b.n	7f96 <__aeabi_dadd+0x2ba>
    829c:	2200      	movs	r2, #0
    829e:	2400      	movs	r4, #0
    82a0:	e625      	b.n	7eee <__aeabi_dadd+0x212>
    82a2:	1a17      	subs	r7, r2, r0
    82a4:	4643      	mov	r3, r8
    82a6:	42ba      	cmp	r2, r7
    82a8:	4192      	sbcs	r2, r2
    82aa:	1a59      	subs	r1, r3, r1
    82ac:	4252      	negs	r2, r2
    82ae:	1a89      	subs	r1, r1, r2
    82b0:	4664      	mov	r4, ip
    82b2:	0035      	movs	r5, r6
    82b4:	e543      	b.n	7d3e <__aeabi_dadd+0x62>
    82b6:	4641      	mov	r1, r8
    82b8:	0010      	movs	r0, r2
    82ba:	4d14      	ldr	r5, [pc, #80]	; (830c <__aeabi_dadd+0x630>)
    82bc:	e610      	b.n	7ee0 <__aeabi_dadd+0x204>
    82be:	2280      	movs	r2, #128	; 0x80
    82c0:	2400      	movs	r4, #0
    82c2:	0312      	lsls	r2, r2, #12
    82c4:	e680      	b.n	7fc8 <__aeabi_dadd+0x2ec>
    82c6:	001d      	movs	r5, r3
    82c8:	000f      	movs	r7, r1
    82ca:	3d20      	subs	r5, #32
    82cc:	40ef      	lsrs	r7, r5
    82ce:	46bc      	mov	ip, r7
    82d0:	2b20      	cmp	r3, #32
    82d2:	d003      	beq.n	82dc <__aeabi_dadd+0x600>
    82d4:	2540      	movs	r5, #64	; 0x40
    82d6:	1aeb      	subs	r3, r5, r3
    82d8:	4099      	lsls	r1, r3
    82da:	4308      	orrs	r0, r1
    82dc:	0007      	movs	r7, r0
    82de:	4663      	mov	r3, ip
    82e0:	1e78      	subs	r0, r7, #1
    82e2:	4187      	sbcs	r7, r0
    82e4:	431f      	orrs	r7, r3
    82e6:	e769      	b.n	81bc <__aeabi_dadd+0x4e0>
    82e8:	1887      	adds	r7, r0, r2
    82ea:	4297      	cmp	r7, r2
    82ec:	419b      	sbcs	r3, r3
    82ee:	4441      	add	r1, r8
    82f0:	425b      	negs	r3, r3
    82f2:	18c9      	adds	r1, r1, r3
    82f4:	0035      	movs	r5, r6
    82f6:	e5a3      	b.n	7e40 <__aeabi_dadd+0x164>
    82f8:	003b      	movs	r3, r7
    82fa:	4333      	orrs	r3, r6
    82fc:	d0ce      	beq.n	829c <__aeabi_dadd+0x5c0>
    82fe:	2207      	movs	r2, #7
    8300:	0031      	movs	r1, r6
    8302:	403a      	ands	r2, r7
    8304:	e652      	b.n	7fac <__aeabi_dadd+0x2d0>
    8306:	2300      	movs	r3, #0
    8308:	001a      	movs	r2, r3
    830a:	e5f4      	b.n	7ef6 <__aeabi_dadd+0x21a>
    830c:	000007ff 	.word	0x000007ff
    8310:	ff7fffff 	.word	0xff7fffff

00008314 <__aeabi_ddiv>:
__aeabi_ddiv():
    8314:	b5f0      	push	{r4, r5, r6, r7, lr}
    8316:	4657      	mov	r7, sl
    8318:	46de      	mov	lr, fp
    831a:	464e      	mov	r6, r9
    831c:	4645      	mov	r5, r8
    831e:	b5e0      	push	{r5, r6, r7, lr}
    8320:	4683      	mov	fp, r0
    8322:	0007      	movs	r7, r0
    8324:	030e      	lsls	r6, r1, #12
    8326:	0048      	lsls	r0, r1, #1
    8328:	b085      	sub	sp, #20
    832a:	4692      	mov	sl, r2
    832c:	001c      	movs	r4, r3
    832e:	0b36      	lsrs	r6, r6, #12
    8330:	0d40      	lsrs	r0, r0, #21
    8332:	0fcd      	lsrs	r5, r1, #31
    8334:	2800      	cmp	r0, #0
    8336:	d100      	bne.n	833a <__aeabi_ddiv+0x26>
    8338:	e09d      	b.n	8476 <__aeabi_ddiv+0x162>
    833a:	4b95      	ldr	r3, [pc, #596]	; (8590 <__aeabi_ddiv+0x27c>)
    833c:	4298      	cmp	r0, r3
    833e:	d039      	beq.n	83b4 <__aeabi_ddiv+0xa0>
    8340:	2380      	movs	r3, #128	; 0x80
    8342:	00f6      	lsls	r6, r6, #3
    8344:	041b      	lsls	r3, r3, #16
    8346:	431e      	orrs	r6, r3
    8348:	4a92      	ldr	r2, [pc, #584]	; (8594 <__aeabi_ddiv+0x280>)
    834a:	0f7b      	lsrs	r3, r7, #29
    834c:	4333      	orrs	r3, r6
    834e:	4699      	mov	r9, r3
    8350:	4694      	mov	ip, r2
    8352:	0003      	movs	r3, r0
    8354:	4463      	add	r3, ip
    8356:	9300      	str	r3, [sp, #0]
    8358:	2300      	movs	r3, #0
    835a:	2600      	movs	r6, #0
    835c:	00ff      	lsls	r7, r7, #3
    835e:	9302      	str	r3, [sp, #8]
    8360:	0323      	lsls	r3, r4, #12
    8362:	0b1b      	lsrs	r3, r3, #12
    8364:	4698      	mov	r8, r3
    8366:	0063      	lsls	r3, r4, #1
    8368:	0fe4      	lsrs	r4, r4, #31
    836a:	4652      	mov	r2, sl
    836c:	0d5b      	lsrs	r3, r3, #21
    836e:	9401      	str	r4, [sp, #4]
    8370:	d100      	bne.n	8374 <__aeabi_ddiv+0x60>
    8372:	e0b3      	b.n	84dc <__aeabi_ddiv+0x1c8>
    8374:	4986      	ldr	r1, [pc, #536]	; (8590 <__aeabi_ddiv+0x27c>)
    8376:	428b      	cmp	r3, r1
    8378:	d100      	bne.n	837c <__aeabi_ddiv+0x68>
    837a:	e09e      	b.n	84ba <__aeabi_ddiv+0x1a6>
    837c:	4642      	mov	r2, r8
    837e:	00d1      	lsls	r1, r2, #3
    8380:	2280      	movs	r2, #128	; 0x80
    8382:	0412      	lsls	r2, r2, #16
    8384:	430a      	orrs	r2, r1
    8386:	4651      	mov	r1, sl
    8388:	0f49      	lsrs	r1, r1, #29
    838a:	4311      	orrs	r1, r2
    838c:	468b      	mov	fp, r1
    838e:	4981      	ldr	r1, [pc, #516]	; (8594 <__aeabi_ddiv+0x280>)
    8390:	4652      	mov	r2, sl
    8392:	468c      	mov	ip, r1
    8394:	9900      	ldr	r1, [sp, #0]
    8396:	4463      	add	r3, ip
    8398:	1acb      	subs	r3, r1, r3
    839a:	2100      	movs	r1, #0
    839c:	00d2      	lsls	r2, r2, #3
    839e:	9300      	str	r3, [sp, #0]
    83a0:	002b      	movs	r3, r5
    83a2:	4063      	eors	r3, r4
    83a4:	469a      	mov	sl, r3
    83a6:	2e0f      	cmp	r6, #15
    83a8:	d900      	bls.n	83ac <__aeabi_ddiv+0x98>
    83aa:	e105      	b.n	85b8 <__aeabi_ddiv+0x2a4>
    83ac:	4b7a      	ldr	r3, [pc, #488]	; (8598 <__aeabi_ddiv+0x284>)
    83ae:	00b6      	lsls	r6, r6, #2
    83b0:	599b      	ldr	r3, [r3, r6]
    83b2:	469f      	mov	pc, r3
    83b4:	465b      	mov	r3, fp
    83b6:	4333      	orrs	r3, r6
    83b8:	4699      	mov	r9, r3
    83ba:	d000      	beq.n	83be <__aeabi_ddiv+0xaa>
    83bc:	e0b8      	b.n	8530 <__aeabi_ddiv+0x21c>
    83be:	2302      	movs	r3, #2
    83c0:	2608      	movs	r6, #8
    83c2:	2700      	movs	r7, #0
    83c4:	9000      	str	r0, [sp, #0]
    83c6:	9302      	str	r3, [sp, #8]
    83c8:	e7ca      	b.n	8360 <__aeabi_ddiv+0x4c>
    83ca:	46cb      	mov	fp, r9
    83cc:	003a      	movs	r2, r7
    83ce:	9902      	ldr	r1, [sp, #8]
    83d0:	9501      	str	r5, [sp, #4]
    83d2:	9b01      	ldr	r3, [sp, #4]
    83d4:	469a      	mov	sl, r3
    83d6:	2902      	cmp	r1, #2
    83d8:	d027      	beq.n	842a <__aeabi_ddiv+0x116>
    83da:	2903      	cmp	r1, #3
    83dc:	d100      	bne.n	83e0 <__aeabi_ddiv+0xcc>
    83de:	e280      	b.n	88e2 <__aeabi_ddiv+0x5ce>
    83e0:	2901      	cmp	r1, #1
    83e2:	d044      	beq.n	846e <__aeabi_ddiv+0x15a>
    83e4:	496d      	ldr	r1, [pc, #436]	; (859c <__aeabi_ddiv+0x288>)
    83e6:	9b00      	ldr	r3, [sp, #0]
    83e8:	468c      	mov	ip, r1
    83ea:	4463      	add	r3, ip
    83ec:	001c      	movs	r4, r3
    83ee:	2c00      	cmp	r4, #0
    83f0:	dd38      	ble.n	8464 <__aeabi_ddiv+0x150>
    83f2:	0753      	lsls	r3, r2, #29
    83f4:	d000      	beq.n	83f8 <__aeabi_ddiv+0xe4>
    83f6:	e213      	b.n	8820 <__aeabi_ddiv+0x50c>
    83f8:	08d2      	lsrs	r2, r2, #3
    83fa:	465b      	mov	r3, fp
    83fc:	01db      	lsls	r3, r3, #7
    83fe:	d509      	bpl.n	8414 <__aeabi_ddiv+0x100>
    8400:	4659      	mov	r1, fp
    8402:	4b67      	ldr	r3, [pc, #412]	; (85a0 <__aeabi_ddiv+0x28c>)
    8404:	4019      	ands	r1, r3
    8406:	468b      	mov	fp, r1
    8408:	2180      	movs	r1, #128	; 0x80
    840a:	00c9      	lsls	r1, r1, #3
    840c:	468c      	mov	ip, r1
    840e:	9b00      	ldr	r3, [sp, #0]
    8410:	4463      	add	r3, ip
    8412:	001c      	movs	r4, r3
    8414:	4b63      	ldr	r3, [pc, #396]	; (85a4 <__aeabi_ddiv+0x290>)
    8416:	429c      	cmp	r4, r3
    8418:	dc07      	bgt.n	842a <__aeabi_ddiv+0x116>
    841a:	465b      	mov	r3, fp
    841c:	0564      	lsls	r4, r4, #21
    841e:	075f      	lsls	r7, r3, #29
    8420:	025b      	lsls	r3, r3, #9
    8422:	4317      	orrs	r7, r2
    8424:	0b1b      	lsrs	r3, r3, #12
    8426:	0d62      	lsrs	r2, r4, #21
    8428:	e002      	b.n	8430 <__aeabi_ddiv+0x11c>
    842a:	2300      	movs	r3, #0
    842c:	2700      	movs	r7, #0
    842e:	4a58      	ldr	r2, [pc, #352]	; (8590 <__aeabi_ddiv+0x27c>)
    8430:	2100      	movs	r1, #0
    8432:	031b      	lsls	r3, r3, #12
    8434:	0b1c      	lsrs	r4, r3, #12
    8436:	0d0b      	lsrs	r3, r1, #20
    8438:	051b      	lsls	r3, r3, #20
    843a:	4323      	orrs	r3, r4
    843c:	0514      	lsls	r4, r2, #20
    843e:	4a5a      	ldr	r2, [pc, #360]	; (85a8 <__aeabi_ddiv+0x294>)
    8440:	0038      	movs	r0, r7
    8442:	4013      	ands	r3, r2
    8444:	431c      	orrs	r4, r3
    8446:	4653      	mov	r3, sl
    8448:	0064      	lsls	r4, r4, #1
    844a:	07db      	lsls	r3, r3, #31
    844c:	0864      	lsrs	r4, r4, #1
    844e:	431c      	orrs	r4, r3
    8450:	0021      	movs	r1, r4
    8452:	b005      	add	sp, #20
    8454:	bc3c      	pop	{r2, r3, r4, r5}
    8456:	4690      	mov	r8, r2
    8458:	4699      	mov	r9, r3
    845a:	46a2      	mov	sl, r4
    845c:	46ab      	mov	fp, r5
    845e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8460:	2201      	movs	r2, #1
    8462:	4252      	negs	r2, r2
    8464:	2301      	movs	r3, #1
    8466:	1b1b      	subs	r3, r3, r4
    8468:	2b38      	cmp	r3, #56	; 0x38
    846a:	dc00      	bgt.n	846e <__aeabi_ddiv+0x15a>
    846c:	e1ad      	b.n	87ca <__aeabi_ddiv+0x4b6>
    846e:	2200      	movs	r2, #0
    8470:	2300      	movs	r3, #0
    8472:	2700      	movs	r7, #0
    8474:	e7dc      	b.n	8430 <__aeabi_ddiv+0x11c>
    8476:	465b      	mov	r3, fp
    8478:	4333      	orrs	r3, r6
    847a:	4699      	mov	r9, r3
    847c:	d05e      	beq.n	853c <__aeabi_ddiv+0x228>
    847e:	2e00      	cmp	r6, #0
    8480:	d100      	bne.n	8484 <__aeabi_ddiv+0x170>
    8482:	e18a      	b.n	879a <__aeabi_ddiv+0x486>
    8484:	0030      	movs	r0, r6
    8486:	f001 fa9d 	bl	99c4 <__clzsi2>
    848a:	0003      	movs	r3, r0
    848c:	3b0b      	subs	r3, #11
    848e:	2b1c      	cmp	r3, #28
    8490:	dd00      	ble.n	8494 <__aeabi_ddiv+0x180>
    8492:	e17b      	b.n	878c <__aeabi_ddiv+0x478>
    8494:	221d      	movs	r2, #29
    8496:	1ad3      	subs	r3, r2, r3
    8498:	465a      	mov	r2, fp
    849a:	0001      	movs	r1, r0
    849c:	40da      	lsrs	r2, r3
    849e:	3908      	subs	r1, #8
    84a0:	408e      	lsls	r6, r1
    84a2:	0013      	movs	r3, r2
    84a4:	465f      	mov	r7, fp
    84a6:	4333      	orrs	r3, r6
    84a8:	4699      	mov	r9, r3
    84aa:	408f      	lsls	r7, r1
    84ac:	4b3f      	ldr	r3, [pc, #252]	; (85ac <__aeabi_ddiv+0x298>)
    84ae:	2600      	movs	r6, #0
    84b0:	1a1b      	subs	r3, r3, r0
    84b2:	9300      	str	r3, [sp, #0]
    84b4:	2300      	movs	r3, #0
    84b6:	9302      	str	r3, [sp, #8]
    84b8:	e752      	b.n	8360 <__aeabi_ddiv+0x4c>
    84ba:	4641      	mov	r1, r8
    84bc:	4653      	mov	r3, sl
    84be:	430b      	orrs	r3, r1
    84c0:	493b      	ldr	r1, [pc, #236]	; (85b0 <__aeabi_ddiv+0x29c>)
    84c2:	469b      	mov	fp, r3
    84c4:	468c      	mov	ip, r1
    84c6:	9b00      	ldr	r3, [sp, #0]
    84c8:	4463      	add	r3, ip
    84ca:	9300      	str	r3, [sp, #0]
    84cc:	465b      	mov	r3, fp
    84ce:	2b00      	cmp	r3, #0
    84d0:	d13b      	bne.n	854a <__aeabi_ddiv+0x236>
    84d2:	2302      	movs	r3, #2
    84d4:	2200      	movs	r2, #0
    84d6:	431e      	orrs	r6, r3
    84d8:	2102      	movs	r1, #2
    84da:	e761      	b.n	83a0 <__aeabi_ddiv+0x8c>
    84dc:	4643      	mov	r3, r8
    84de:	4313      	orrs	r3, r2
    84e0:	469b      	mov	fp, r3
    84e2:	d037      	beq.n	8554 <__aeabi_ddiv+0x240>
    84e4:	4643      	mov	r3, r8
    84e6:	2b00      	cmp	r3, #0
    84e8:	d100      	bne.n	84ec <__aeabi_ddiv+0x1d8>
    84ea:	e162      	b.n	87b2 <__aeabi_ddiv+0x49e>
    84ec:	4640      	mov	r0, r8
    84ee:	f001 fa69 	bl	99c4 <__clzsi2>
    84f2:	0003      	movs	r3, r0
    84f4:	3b0b      	subs	r3, #11
    84f6:	2b1c      	cmp	r3, #28
    84f8:	dd00      	ble.n	84fc <__aeabi_ddiv+0x1e8>
    84fa:	e153      	b.n	87a4 <__aeabi_ddiv+0x490>
    84fc:	0002      	movs	r2, r0
    84fe:	4641      	mov	r1, r8
    8500:	3a08      	subs	r2, #8
    8502:	4091      	lsls	r1, r2
    8504:	4688      	mov	r8, r1
    8506:	211d      	movs	r1, #29
    8508:	1acb      	subs	r3, r1, r3
    850a:	4651      	mov	r1, sl
    850c:	40d9      	lsrs	r1, r3
    850e:	000b      	movs	r3, r1
    8510:	4641      	mov	r1, r8
    8512:	430b      	orrs	r3, r1
    8514:	469b      	mov	fp, r3
    8516:	4653      	mov	r3, sl
    8518:	4093      	lsls	r3, r2
    851a:	001a      	movs	r2, r3
    851c:	9b00      	ldr	r3, [sp, #0]
    851e:	4925      	ldr	r1, [pc, #148]	; (85b4 <__aeabi_ddiv+0x2a0>)
    8520:	469c      	mov	ip, r3
    8522:	4460      	add	r0, ip
    8524:	0003      	movs	r3, r0
    8526:	468c      	mov	ip, r1
    8528:	4463      	add	r3, ip
    852a:	9300      	str	r3, [sp, #0]
    852c:	2100      	movs	r1, #0
    852e:	e737      	b.n	83a0 <__aeabi_ddiv+0x8c>
    8530:	2303      	movs	r3, #3
    8532:	46b1      	mov	r9, r6
    8534:	9000      	str	r0, [sp, #0]
    8536:	260c      	movs	r6, #12
    8538:	9302      	str	r3, [sp, #8]
    853a:	e711      	b.n	8360 <__aeabi_ddiv+0x4c>
    853c:	2300      	movs	r3, #0
    853e:	9300      	str	r3, [sp, #0]
    8540:	3301      	adds	r3, #1
    8542:	2604      	movs	r6, #4
    8544:	2700      	movs	r7, #0
    8546:	9302      	str	r3, [sp, #8]
    8548:	e70a      	b.n	8360 <__aeabi_ddiv+0x4c>
    854a:	2303      	movs	r3, #3
    854c:	46c3      	mov	fp, r8
    854e:	431e      	orrs	r6, r3
    8550:	2103      	movs	r1, #3
    8552:	e725      	b.n	83a0 <__aeabi_ddiv+0x8c>
    8554:	3301      	adds	r3, #1
    8556:	431e      	orrs	r6, r3
    8558:	2200      	movs	r2, #0
    855a:	2101      	movs	r1, #1
    855c:	e720      	b.n	83a0 <__aeabi_ddiv+0x8c>
    855e:	2300      	movs	r3, #0
    8560:	469a      	mov	sl, r3
    8562:	2380      	movs	r3, #128	; 0x80
    8564:	2700      	movs	r7, #0
    8566:	031b      	lsls	r3, r3, #12
    8568:	4a09      	ldr	r2, [pc, #36]	; (8590 <__aeabi_ddiv+0x27c>)
    856a:	e761      	b.n	8430 <__aeabi_ddiv+0x11c>
    856c:	2380      	movs	r3, #128	; 0x80
    856e:	4649      	mov	r1, r9
    8570:	031b      	lsls	r3, r3, #12
    8572:	4219      	tst	r1, r3
    8574:	d100      	bne.n	8578 <__aeabi_ddiv+0x264>
    8576:	e0e2      	b.n	873e <__aeabi_ddiv+0x42a>
    8578:	4659      	mov	r1, fp
    857a:	4219      	tst	r1, r3
    857c:	d000      	beq.n	8580 <__aeabi_ddiv+0x26c>
    857e:	e0de      	b.n	873e <__aeabi_ddiv+0x42a>
    8580:	430b      	orrs	r3, r1
    8582:	031b      	lsls	r3, r3, #12
    8584:	0017      	movs	r7, r2
    8586:	0b1b      	lsrs	r3, r3, #12
    8588:	46a2      	mov	sl, r4
    858a:	4a01      	ldr	r2, [pc, #4]	; (8590 <__aeabi_ddiv+0x27c>)
    858c:	e750      	b.n	8430 <__aeabi_ddiv+0x11c>
    858e:	46c0      	nop			; (mov r8, r8)
    8590:	000007ff 	.word	0x000007ff
    8594:	fffffc01 	.word	0xfffffc01
    8598:	0000af2c 	.word	0x0000af2c
    859c:	000003ff 	.word	0x000003ff
    85a0:	feffffff 	.word	0xfeffffff
    85a4:	000007fe 	.word	0x000007fe
    85a8:	800fffff 	.word	0x800fffff
    85ac:	fffffc0d 	.word	0xfffffc0d
    85b0:	fffff801 	.word	0xfffff801
    85b4:	000003f3 	.word	0x000003f3
    85b8:	45d9      	cmp	r9, fp
    85ba:	d900      	bls.n	85be <__aeabi_ddiv+0x2aa>
    85bc:	e0cb      	b.n	8756 <__aeabi_ddiv+0x442>
    85be:	d100      	bne.n	85c2 <__aeabi_ddiv+0x2ae>
    85c0:	e0c6      	b.n	8750 <__aeabi_ddiv+0x43c>
    85c2:	003c      	movs	r4, r7
    85c4:	4648      	mov	r0, r9
    85c6:	2700      	movs	r7, #0
    85c8:	9b00      	ldr	r3, [sp, #0]
    85ca:	3b01      	subs	r3, #1
    85cc:	9300      	str	r3, [sp, #0]
    85ce:	465b      	mov	r3, fp
    85d0:	0e16      	lsrs	r6, r2, #24
    85d2:	021b      	lsls	r3, r3, #8
    85d4:	431e      	orrs	r6, r3
    85d6:	0213      	lsls	r3, r2, #8
    85d8:	4698      	mov	r8, r3
    85da:	0433      	lsls	r3, r6, #16
    85dc:	0c1b      	lsrs	r3, r3, #16
    85de:	4699      	mov	r9, r3
    85e0:	0c31      	lsrs	r1, r6, #16
    85e2:	9101      	str	r1, [sp, #4]
    85e4:	f7fe fbe6 	bl	6db4 <__aeabi_uidivmod>
    85e8:	464a      	mov	r2, r9
    85ea:	4342      	muls	r2, r0
    85ec:	040b      	lsls	r3, r1, #16
    85ee:	0c21      	lsrs	r1, r4, #16
    85f0:	0005      	movs	r5, r0
    85f2:	4319      	orrs	r1, r3
    85f4:	428a      	cmp	r2, r1
    85f6:	d907      	bls.n	8608 <__aeabi_ddiv+0x2f4>
    85f8:	1989      	adds	r1, r1, r6
    85fa:	3d01      	subs	r5, #1
    85fc:	428e      	cmp	r6, r1
    85fe:	d803      	bhi.n	8608 <__aeabi_ddiv+0x2f4>
    8600:	428a      	cmp	r2, r1
    8602:	d901      	bls.n	8608 <__aeabi_ddiv+0x2f4>
    8604:	1e85      	subs	r5, r0, #2
    8606:	1989      	adds	r1, r1, r6
    8608:	1a88      	subs	r0, r1, r2
    860a:	9901      	ldr	r1, [sp, #4]
    860c:	f7fe fbd2 	bl	6db4 <__aeabi_uidivmod>
    8610:	0409      	lsls	r1, r1, #16
    8612:	468c      	mov	ip, r1
    8614:	464a      	mov	r2, r9
    8616:	0421      	lsls	r1, r4, #16
    8618:	4664      	mov	r4, ip
    861a:	4342      	muls	r2, r0
    861c:	0c09      	lsrs	r1, r1, #16
    861e:	0003      	movs	r3, r0
    8620:	4321      	orrs	r1, r4
    8622:	428a      	cmp	r2, r1
    8624:	d904      	bls.n	8630 <__aeabi_ddiv+0x31c>
    8626:	1989      	adds	r1, r1, r6
    8628:	3b01      	subs	r3, #1
    862a:	428e      	cmp	r6, r1
    862c:	d800      	bhi.n	8630 <__aeabi_ddiv+0x31c>
    862e:	e0f1      	b.n	8814 <__aeabi_ddiv+0x500>
    8630:	042d      	lsls	r5, r5, #16
    8632:	431d      	orrs	r5, r3
    8634:	46ab      	mov	fp, r5
    8636:	4643      	mov	r3, r8
    8638:	1a89      	subs	r1, r1, r2
    863a:	4642      	mov	r2, r8
    863c:	0c28      	lsrs	r0, r5, #16
    863e:	0412      	lsls	r2, r2, #16
    8640:	0c1d      	lsrs	r5, r3, #16
    8642:	465b      	mov	r3, fp
    8644:	0c14      	lsrs	r4, r2, #16
    8646:	0022      	movs	r2, r4
    8648:	041b      	lsls	r3, r3, #16
    864a:	0c1b      	lsrs	r3, r3, #16
    864c:	435a      	muls	r2, r3
    864e:	9403      	str	r4, [sp, #12]
    8650:	436b      	muls	r3, r5
    8652:	4344      	muls	r4, r0
    8654:	9502      	str	r5, [sp, #8]
    8656:	4368      	muls	r0, r5
    8658:	191b      	adds	r3, r3, r4
    865a:	0c15      	lsrs	r5, r2, #16
    865c:	18eb      	adds	r3, r5, r3
    865e:	429c      	cmp	r4, r3
    8660:	d903      	bls.n	866a <__aeabi_ddiv+0x356>
    8662:	2480      	movs	r4, #128	; 0x80
    8664:	0264      	lsls	r4, r4, #9
    8666:	46a4      	mov	ip, r4
    8668:	4460      	add	r0, ip
    866a:	0c1c      	lsrs	r4, r3, #16
    866c:	0415      	lsls	r5, r2, #16
    866e:	041b      	lsls	r3, r3, #16
    8670:	0c2d      	lsrs	r5, r5, #16
    8672:	1820      	adds	r0, r4, r0
    8674:	195d      	adds	r5, r3, r5
    8676:	4281      	cmp	r1, r0
    8678:	d377      	bcc.n	876a <__aeabi_ddiv+0x456>
    867a:	d073      	beq.n	8764 <__aeabi_ddiv+0x450>
    867c:	1a0c      	subs	r4, r1, r0
    867e:	4aa2      	ldr	r2, [pc, #648]	; (8908 <__aeabi_ddiv+0x5f4>)
    8680:	1b7d      	subs	r5, r7, r5
    8682:	42af      	cmp	r7, r5
    8684:	41bf      	sbcs	r7, r7
    8686:	4694      	mov	ip, r2
    8688:	9b00      	ldr	r3, [sp, #0]
    868a:	427f      	negs	r7, r7
    868c:	4463      	add	r3, ip
    868e:	1be0      	subs	r0, r4, r7
    8690:	001c      	movs	r4, r3
    8692:	4286      	cmp	r6, r0
    8694:	d100      	bne.n	8698 <__aeabi_ddiv+0x384>
    8696:	e0db      	b.n	8850 <__aeabi_ddiv+0x53c>
    8698:	9901      	ldr	r1, [sp, #4]
    869a:	f7fe fb8b 	bl	6db4 <__aeabi_uidivmod>
    869e:	464a      	mov	r2, r9
    86a0:	4342      	muls	r2, r0
    86a2:	040b      	lsls	r3, r1, #16
    86a4:	0c29      	lsrs	r1, r5, #16
    86a6:	0007      	movs	r7, r0
    86a8:	4319      	orrs	r1, r3
    86aa:	428a      	cmp	r2, r1
    86ac:	d907      	bls.n	86be <__aeabi_ddiv+0x3aa>
    86ae:	1989      	adds	r1, r1, r6
    86b0:	3f01      	subs	r7, #1
    86b2:	428e      	cmp	r6, r1
    86b4:	d803      	bhi.n	86be <__aeabi_ddiv+0x3aa>
    86b6:	428a      	cmp	r2, r1
    86b8:	d901      	bls.n	86be <__aeabi_ddiv+0x3aa>
    86ba:	1e87      	subs	r7, r0, #2
    86bc:	1989      	adds	r1, r1, r6
    86be:	1a88      	subs	r0, r1, r2
    86c0:	9901      	ldr	r1, [sp, #4]
    86c2:	f7fe fb77 	bl	6db4 <__aeabi_uidivmod>
    86c6:	0409      	lsls	r1, r1, #16
    86c8:	464a      	mov	r2, r9
    86ca:	4689      	mov	r9, r1
    86cc:	0429      	lsls	r1, r5, #16
    86ce:	464d      	mov	r5, r9
    86d0:	4342      	muls	r2, r0
    86d2:	0c09      	lsrs	r1, r1, #16
    86d4:	0003      	movs	r3, r0
    86d6:	4329      	orrs	r1, r5
    86d8:	428a      	cmp	r2, r1
    86da:	d907      	bls.n	86ec <__aeabi_ddiv+0x3d8>
    86dc:	1989      	adds	r1, r1, r6
    86de:	3b01      	subs	r3, #1
    86e0:	428e      	cmp	r6, r1
    86e2:	d803      	bhi.n	86ec <__aeabi_ddiv+0x3d8>
    86e4:	428a      	cmp	r2, r1
    86e6:	d901      	bls.n	86ec <__aeabi_ddiv+0x3d8>
    86e8:	1e83      	subs	r3, r0, #2
    86ea:	1989      	adds	r1, r1, r6
    86ec:	043f      	lsls	r7, r7, #16
    86ee:	1a89      	subs	r1, r1, r2
    86f0:	003a      	movs	r2, r7
    86f2:	9f03      	ldr	r7, [sp, #12]
    86f4:	431a      	orrs	r2, r3
    86f6:	0038      	movs	r0, r7
    86f8:	0413      	lsls	r3, r2, #16
    86fa:	0c1b      	lsrs	r3, r3, #16
    86fc:	4358      	muls	r0, r3
    86fe:	4681      	mov	r9, r0
    8700:	9802      	ldr	r0, [sp, #8]
    8702:	0c15      	lsrs	r5, r2, #16
    8704:	436f      	muls	r7, r5
    8706:	4343      	muls	r3, r0
    8708:	4345      	muls	r5, r0
    870a:	4648      	mov	r0, r9
    870c:	0c00      	lsrs	r0, r0, #16
    870e:	4684      	mov	ip, r0
    8710:	19db      	adds	r3, r3, r7
    8712:	4463      	add	r3, ip
    8714:	429f      	cmp	r7, r3
    8716:	d903      	bls.n	8720 <__aeabi_ddiv+0x40c>
    8718:	2080      	movs	r0, #128	; 0x80
    871a:	0240      	lsls	r0, r0, #9
    871c:	4684      	mov	ip, r0
    871e:	4465      	add	r5, ip
    8720:	4648      	mov	r0, r9
    8722:	0c1f      	lsrs	r7, r3, #16
    8724:	0400      	lsls	r0, r0, #16
    8726:	041b      	lsls	r3, r3, #16
    8728:	0c00      	lsrs	r0, r0, #16
    872a:	197d      	adds	r5, r7, r5
    872c:	1818      	adds	r0, r3, r0
    872e:	42a9      	cmp	r1, r5
    8730:	d200      	bcs.n	8734 <__aeabi_ddiv+0x420>
    8732:	e084      	b.n	883e <__aeabi_ddiv+0x52a>
    8734:	d100      	bne.n	8738 <__aeabi_ddiv+0x424>
    8736:	e07f      	b.n	8838 <__aeabi_ddiv+0x524>
    8738:	2301      	movs	r3, #1
    873a:	431a      	orrs	r2, r3
    873c:	e657      	b.n	83ee <__aeabi_ddiv+0xda>
    873e:	2380      	movs	r3, #128	; 0x80
    8740:	464a      	mov	r2, r9
    8742:	031b      	lsls	r3, r3, #12
    8744:	4313      	orrs	r3, r2
    8746:	031b      	lsls	r3, r3, #12
    8748:	0b1b      	lsrs	r3, r3, #12
    874a:	46aa      	mov	sl, r5
    874c:	4a6f      	ldr	r2, [pc, #444]	; (890c <__aeabi_ddiv+0x5f8>)
    874e:	e66f      	b.n	8430 <__aeabi_ddiv+0x11c>
    8750:	42ba      	cmp	r2, r7
    8752:	d900      	bls.n	8756 <__aeabi_ddiv+0x442>
    8754:	e735      	b.n	85c2 <__aeabi_ddiv+0x2ae>
    8756:	464b      	mov	r3, r9
    8758:	07dc      	lsls	r4, r3, #31
    875a:	0858      	lsrs	r0, r3, #1
    875c:	087b      	lsrs	r3, r7, #1
    875e:	431c      	orrs	r4, r3
    8760:	07ff      	lsls	r7, r7, #31
    8762:	e734      	b.n	85ce <__aeabi_ddiv+0x2ba>
    8764:	2400      	movs	r4, #0
    8766:	42af      	cmp	r7, r5
    8768:	d289      	bcs.n	867e <__aeabi_ddiv+0x36a>
    876a:	4447      	add	r7, r8
    876c:	4547      	cmp	r7, r8
    876e:	41a4      	sbcs	r4, r4
    8770:	465b      	mov	r3, fp
    8772:	4264      	negs	r4, r4
    8774:	19a4      	adds	r4, r4, r6
    8776:	1864      	adds	r4, r4, r1
    8778:	3b01      	subs	r3, #1
    877a:	42a6      	cmp	r6, r4
    877c:	d21e      	bcs.n	87bc <__aeabi_ddiv+0x4a8>
    877e:	42a0      	cmp	r0, r4
    8780:	d86d      	bhi.n	885e <__aeabi_ddiv+0x54a>
    8782:	d100      	bne.n	8786 <__aeabi_ddiv+0x472>
    8784:	e0b6      	b.n	88f4 <__aeabi_ddiv+0x5e0>
    8786:	1a24      	subs	r4, r4, r0
    8788:	469b      	mov	fp, r3
    878a:	e778      	b.n	867e <__aeabi_ddiv+0x36a>
    878c:	0003      	movs	r3, r0
    878e:	465a      	mov	r2, fp
    8790:	3b28      	subs	r3, #40	; 0x28
    8792:	409a      	lsls	r2, r3
    8794:	2700      	movs	r7, #0
    8796:	4691      	mov	r9, r2
    8798:	e688      	b.n	84ac <__aeabi_ddiv+0x198>
    879a:	4658      	mov	r0, fp
    879c:	f001 f912 	bl	99c4 <__clzsi2>
    87a0:	3020      	adds	r0, #32
    87a2:	e672      	b.n	848a <__aeabi_ddiv+0x176>
    87a4:	0003      	movs	r3, r0
    87a6:	4652      	mov	r2, sl
    87a8:	3b28      	subs	r3, #40	; 0x28
    87aa:	409a      	lsls	r2, r3
    87ac:	4693      	mov	fp, r2
    87ae:	2200      	movs	r2, #0
    87b0:	e6b4      	b.n	851c <__aeabi_ddiv+0x208>
    87b2:	4650      	mov	r0, sl
    87b4:	f001 f906 	bl	99c4 <__clzsi2>
    87b8:	3020      	adds	r0, #32
    87ba:	e69a      	b.n	84f2 <__aeabi_ddiv+0x1de>
    87bc:	42a6      	cmp	r6, r4
    87be:	d1e2      	bne.n	8786 <__aeabi_ddiv+0x472>
    87c0:	45b8      	cmp	r8, r7
    87c2:	d9dc      	bls.n	877e <__aeabi_ddiv+0x46a>
    87c4:	1a34      	subs	r4, r6, r0
    87c6:	469b      	mov	fp, r3
    87c8:	e759      	b.n	867e <__aeabi_ddiv+0x36a>
    87ca:	2b1f      	cmp	r3, #31
    87cc:	dc65      	bgt.n	889a <__aeabi_ddiv+0x586>
    87ce:	4c50      	ldr	r4, [pc, #320]	; (8910 <__aeabi_ddiv+0x5fc>)
    87d0:	9900      	ldr	r1, [sp, #0]
    87d2:	46a4      	mov	ip, r4
    87d4:	465c      	mov	r4, fp
    87d6:	4461      	add	r1, ip
    87d8:	0008      	movs	r0, r1
    87da:	408c      	lsls	r4, r1
    87dc:	0011      	movs	r1, r2
    87de:	4082      	lsls	r2, r0
    87e0:	40d9      	lsrs	r1, r3
    87e2:	1e50      	subs	r0, r2, #1
    87e4:	4182      	sbcs	r2, r0
    87e6:	430c      	orrs	r4, r1
    87e8:	4314      	orrs	r4, r2
    87ea:	465a      	mov	r2, fp
    87ec:	40da      	lsrs	r2, r3
    87ee:	0013      	movs	r3, r2
    87f0:	0762      	lsls	r2, r4, #29
    87f2:	d009      	beq.n	8808 <__aeabi_ddiv+0x4f4>
    87f4:	220f      	movs	r2, #15
    87f6:	4022      	ands	r2, r4
    87f8:	2a04      	cmp	r2, #4
    87fa:	d005      	beq.n	8808 <__aeabi_ddiv+0x4f4>
    87fc:	0022      	movs	r2, r4
    87fe:	1d14      	adds	r4, r2, #4
    8800:	4294      	cmp	r4, r2
    8802:	4189      	sbcs	r1, r1
    8804:	4249      	negs	r1, r1
    8806:	185b      	adds	r3, r3, r1
    8808:	021a      	lsls	r2, r3, #8
    880a:	d562      	bpl.n	88d2 <__aeabi_ddiv+0x5be>
    880c:	2201      	movs	r2, #1
    880e:	2300      	movs	r3, #0
    8810:	2700      	movs	r7, #0
    8812:	e60d      	b.n	8430 <__aeabi_ddiv+0x11c>
    8814:	428a      	cmp	r2, r1
    8816:	d800      	bhi.n	881a <__aeabi_ddiv+0x506>
    8818:	e70a      	b.n	8630 <__aeabi_ddiv+0x31c>
    881a:	1e83      	subs	r3, r0, #2
    881c:	1989      	adds	r1, r1, r6
    881e:	e707      	b.n	8630 <__aeabi_ddiv+0x31c>
    8820:	230f      	movs	r3, #15
    8822:	4013      	ands	r3, r2
    8824:	2b04      	cmp	r3, #4
    8826:	d100      	bne.n	882a <__aeabi_ddiv+0x516>
    8828:	e5e6      	b.n	83f8 <__aeabi_ddiv+0xe4>
    882a:	1d17      	adds	r7, r2, #4
    882c:	4297      	cmp	r7, r2
    882e:	4192      	sbcs	r2, r2
    8830:	4253      	negs	r3, r2
    8832:	449b      	add	fp, r3
    8834:	08fa      	lsrs	r2, r7, #3
    8836:	e5e0      	b.n	83fa <__aeabi_ddiv+0xe6>
    8838:	2800      	cmp	r0, #0
    883a:	d100      	bne.n	883e <__aeabi_ddiv+0x52a>
    883c:	e5d7      	b.n	83ee <__aeabi_ddiv+0xda>
    883e:	1871      	adds	r1, r6, r1
    8840:	1e53      	subs	r3, r2, #1
    8842:	42b1      	cmp	r1, r6
    8844:	d327      	bcc.n	8896 <__aeabi_ddiv+0x582>
    8846:	42a9      	cmp	r1, r5
    8848:	d315      	bcc.n	8876 <__aeabi_ddiv+0x562>
    884a:	d058      	beq.n	88fe <__aeabi_ddiv+0x5ea>
    884c:	001a      	movs	r2, r3
    884e:	e773      	b.n	8738 <__aeabi_ddiv+0x424>
    8850:	2b00      	cmp	r3, #0
    8852:	dc00      	bgt.n	8856 <__aeabi_ddiv+0x542>
    8854:	e604      	b.n	8460 <__aeabi_ddiv+0x14c>
    8856:	2301      	movs	r3, #1
    8858:	2200      	movs	r2, #0
    885a:	449b      	add	fp, r3
    885c:	e5cd      	b.n	83fa <__aeabi_ddiv+0xe6>
    885e:	2302      	movs	r3, #2
    8860:	4447      	add	r7, r8
    8862:	4547      	cmp	r7, r8
    8864:	4189      	sbcs	r1, r1
    8866:	425b      	negs	r3, r3
    8868:	469c      	mov	ip, r3
    886a:	4249      	negs	r1, r1
    886c:	1989      	adds	r1, r1, r6
    886e:	190c      	adds	r4, r1, r4
    8870:	44e3      	add	fp, ip
    8872:	1a24      	subs	r4, r4, r0
    8874:	e703      	b.n	867e <__aeabi_ddiv+0x36a>
    8876:	4643      	mov	r3, r8
    8878:	005f      	lsls	r7, r3, #1
    887a:	4547      	cmp	r7, r8
    887c:	419b      	sbcs	r3, r3
    887e:	46b8      	mov	r8, r7
    8880:	425b      	negs	r3, r3
    8882:	199e      	adds	r6, r3, r6
    8884:	3a02      	subs	r2, #2
    8886:	1989      	adds	r1, r1, r6
    8888:	42a9      	cmp	r1, r5
    888a:	d000      	beq.n	888e <__aeabi_ddiv+0x57a>
    888c:	e754      	b.n	8738 <__aeabi_ddiv+0x424>
    888e:	4540      	cmp	r0, r8
    8890:	d000      	beq.n	8894 <__aeabi_ddiv+0x580>
    8892:	e751      	b.n	8738 <__aeabi_ddiv+0x424>
    8894:	e5ab      	b.n	83ee <__aeabi_ddiv+0xda>
    8896:	001a      	movs	r2, r3
    8898:	e7f6      	b.n	8888 <__aeabi_ddiv+0x574>
    889a:	211f      	movs	r1, #31
    889c:	465f      	mov	r7, fp
    889e:	4249      	negs	r1, r1
    88a0:	1b0c      	subs	r4, r1, r4
    88a2:	40e7      	lsrs	r7, r4
    88a4:	2b20      	cmp	r3, #32
    88a6:	d007      	beq.n	88b8 <__aeabi_ddiv+0x5a4>
    88a8:	491a      	ldr	r1, [pc, #104]	; (8914 <__aeabi_ddiv+0x600>)
    88aa:	9b00      	ldr	r3, [sp, #0]
    88ac:	468c      	mov	ip, r1
    88ae:	4463      	add	r3, ip
    88b0:	0018      	movs	r0, r3
    88b2:	465b      	mov	r3, fp
    88b4:	4083      	lsls	r3, r0
    88b6:	431a      	orrs	r2, r3
    88b8:	1e50      	subs	r0, r2, #1
    88ba:	4182      	sbcs	r2, r0
    88bc:	433a      	orrs	r2, r7
    88be:	2707      	movs	r7, #7
    88c0:	2300      	movs	r3, #0
    88c2:	4017      	ands	r7, r2
    88c4:	d009      	beq.n	88da <__aeabi_ddiv+0x5c6>
    88c6:	210f      	movs	r1, #15
    88c8:	2300      	movs	r3, #0
    88ca:	4011      	ands	r1, r2
    88cc:	0014      	movs	r4, r2
    88ce:	2904      	cmp	r1, #4
    88d0:	d195      	bne.n	87fe <__aeabi_ddiv+0x4ea>
    88d2:	0022      	movs	r2, r4
    88d4:	075f      	lsls	r7, r3, #29
    88d6:	025b      	lsls	r3, r3, #9
    88d8:	0b1b      	lsrs	r3, r3, #12
    88da:	08d2      	lsrs	r2, r2, #3
    88dc:	4317      	orrs	r7, r2
    88de:	2200      	movs	r2, #0
    88e0:	e5a6      	b.n	8430 <__aeabi_ddiv+0x11c>
    88e2:	2380      	movs	r3, #128	; 0x80
    88e4:	4659      	mov	r1, fp
    88e6:	031b      	lsls	r3, r3, #12
    88e8:	430b      	orrs	r3, r1
    88ea:	031b      	lsls	r3, r3, #12
    88ec:	0017      	movs	r7, r2
    88ee:	0b1b      	lsrs	r3, r3, #12
    88f0:	4a06      	ldr	r2, [pc, #24]	; (890c <__aeabi_ddiv+0x5f8>)
    88f2:	e59d      	b.n	8430 <__aeabi_ddiv+0x11c>
    88f4:	42bd      	cmp	r5, r7
    88f6:	d8b2      	bhi.n	885e <__aeabi_ddiv+0x54a>
    88f8:	469b      	mov	fp, r3
    88fa:	2400      	movs	r4, #0
    88fc:	e6bf      	b.n	867e <__aeabi_ddiv+0x36a>
    88fe:	4580      	cmp	r8, r0
    8900:	d3b9      	bcc.n	8876 <__aeabi_ddiv+0x562>
    8902:	001a      	movs	r2, r3
    8904:	e7c3      	b.n	888e <__aeabi_ddiv+0x57a>
    8906:	46c0      	nop			; (mov r8, r8)
    8908:	000003ff 	.word	0x000003ff
    890c:	000007ff 	.word	0x000007ff
    8910:	0000041e 	.word	0x0000041e
    8914:	0000043e 	.word	0x0000043e

00008918 <__eqdf2>:
__nedf2():
    8918:	b5f0      	push	{r4, r5, r6, r7, lr}
    891a:	464f      	mov	r7, r9
    891c:	4646      	mov	r6, r8
    891e:	46d6      	mov	lr, sl
    8920:	4684      	mov	ip, r0
    8922:	b5c0      	push	{r6, r7, lr}
    8924:	4680      	mov	r8, r0
    8926:	4e19      	ldr	r6, [pc, #100]	; (898c <__eqdf2+0x74>)
    8928:	0318      	lsls	r0, r3, #12
    892a:	030f      	lsls	r7, r1, #12
    892c:	004d      	lsls	r5, r1, #1
    892e:	0b00      	lsrs	r0, r0, #12
    8930:	005c      	lsls	r4, r3, #1
    8932:	4682      	mov	sl, r0
    8934:	0b3f      	lsrs	r7, r7, #12
    8936:	0d6d      	lsrs	r5, r5, #21
    8938:	0fc9      	lsrs	r1, r1, #31
    893a:	4691      	mov	r9, r2
    893c:	0d64      	lsrs	r4, r4, #21
    893e:	0fdb      	lsrs	r3, r3, #31
    8940:	2001      	movs	r0, #1
    8942:	42b5      	cmp	r5, r6
    8944:	d00a      	beq.n	895c <__eqdf2+0x44>
    8946:	42b4      	cmp	r4, r6
    8948:	d003      	beq.n	8952 <__eqdf2+0x3a>
    894a:	42a5      	cmp	r5, r4
    894c:	d101      	bne.n	8952 <__eqdf2+0x3a>
    894e:	4557      	cmp	r7, sl
    8950:	d00c      	beq.n	896c <__eqdf2+0x54>
    8952:	bc1c      	pop	{r2, r3, r4}
    8954:	4690      	mov	r8, r2
    8956:	4699      	mov	r9, r3
    8958:	46a2      	mov	sl, r4
    895a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    895c:	4666      	mov	r6, ip
    895e:	433e      	orrs	r6, r7
    8960:	d1f7      	bne.n	8952 <__eqdf2+0x3a>
    8962:	42ac      	cmp	r4, r5
    8964:	d1f5      	bne.n	8952 <__eqdf2+0x3a>
    8966:	4654      	mov	r4, sl
    8968:	4314      	orrs	r4, r2
    896a:	d1f2      	bne.n	8952 <__eqdf2+0x3a>
    896c:	2001      	movs	r0, #1
    896e:	45c8      	cmp	r8, r9
    8970:	d1ef      	bne.n	8952 <__eqdf2+0x3a>
    8972:	4299      	cmp	r1, r3
    8974:	d007      	beq.n	8986 <__eqdf2+0x6e>
    8976:	2d00      	cmp	r5, #0
    8978:	d1eb      	bne.n	8952 <__eqdf2+0x3a>
    897a:	4663      	mov	r3, ip
    897c:	431f      	orrs	r7, r3
    897e:	0038      	movs	r0, r7
    8980:	1e47      	subs	r7, r0, #1
    8982:	41b8      	sbcs	r0, r7
    8984:	e7e5      	b.n	8952 <__eqdf2+0x3a>
    8986:	2000      	movs	r0, #0
    8988:	e7e3      	b.n	8952 <__eqdf2+0x3a>
    898a:	46c0      	nop			; (mov r8, r8)
    898c:	000007ff 	.word	0x000007ff

00008990 <__gedf2>:
__gedf2():
    8990:	b5f0      	push	{r4, r5, r6, r7, lr}
    8992:	464f      	mov	r7, r9
    8994:	4646      	mov	r6, r8
    8996:	46d6      	mov	lr, sl
    8998:	004d      	lsls	r5, r1, #1
    899a:	b5c0      	push	{r6, r7, lr}
    899c:	030e      	lsls	r6, r1, #12
    899e:	0fc9      	lsrs	r1, r1, #31
    89a0:	468a      	mov	sl, r1
    89a2:	492c      	ldr	r1, [pc, #176]	; (8a54 <__gedf2+0xc4>)
    89a4:	031f      	lsls	r7, r3, #12
    89a6:	005c      	lsls	r4, r3, #1
    89a8:	4680      	mov	r8, r0
    89aa:	0b36      	lsrs	r6, r6, #12
    89ac:	0d6d      	lsrs	r5, r5, #21
    89ae:	4691      	mov	r9, r2
    89b0:	0b3f      	lsrs	r7, r7, #12
    89b2:	0d64      	lsrs	r4, r4, #21
    89b4:	0fdb      	lsrs	r3, r3, #31
    89b6:	428d      	cmp	r5, r1
    89b8:	d01e      	beq.n	89f8 <__gedf2+0x68>
    89ba:	428c      	cmp	r4, r1
    89bc:	d016      	beq.n	89ec <__gedf2+0x5c>
    89be:	2d00      	cmp	r5, #0
    89c0:	d11e      	bne.n	8a00 <__gedf2+0x70>
    89c2:	4330      	orrs	r0, r6
    89c4:	4684      	mov	ip, r0
    89c6:	2c00      	cmp	r4, #0
    89c8:	d101      	bne.n	89ce <__gedf2+0x3e>
    89ca:	433a      	orrs	r2, r7
    89cc:	d023      	beq.n	8a16 <__gedf2+0x86>
    89ce:	4662      	mov	r2, ip
    89d0:	2a00      	cmp	r2, #0
    89d2:	d01a      	beq.n	8a0a <__gedf2+0x7a>
    89d4:	459a      	cmp	sl, r3
    89d6:	d029      	beq.n	8a2c <__gedf2+0x9c>
    89d8:	4651      	mov	r1, sl
    89da:	2002      	movs	r0, #2
    89dc:	3901      	subs	r1, #1
    89de:	4008      	ands	r0, r1
    89e0:	3801      	subs	r0, #1
    89e2:	bc1c      	pop	{r2, r3, r4}
    89e4:	4690      	mov	r8, r2
    89e6:	4699      	mov	r9, r3
    89e8:	46a2      	mov	sl, r4
    89ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    89ec:	0039      	movs	r1, r7
    89ee:	4311      	orrs	r1, r2
    89f0:	d0e5      	beq.n	89be <__gedf2+0x2e>
    89f2:	2002      	movs	r0, #2
    89f4:	4240      	negs	r0, r0
    89f6:	e7f4      	b.n	89e2 <__gedf2+0x52>
    89f8:	4330      	orrs	r0, r6
    89fa:	d1fa      	bne.n	89f2 <__gedf2+0x62>
    89fc:	42ac      	cmp	r4, r5
    89fe:	d00f      	beq.n	8a20 <__gedf2+0x90>
    8a00:	2c00      	cmp	r4, #0
    8a02:	d10f      	bne.n	8a24 <__gedf2+0x94>
    8a04:	433a      	orrs	r2, r7
    8a06:	d0e7      	beq.n	89d8 <__gedf2+0x48>
    8a08:	e00c      	b.n	8a24 <__gedf2+0x94>
    8a0a:	2201      	movs	r2, #1
    8a0c:	3b01      	subs	r3, #1
    8a0e:	4393      	bics	r3, r2
    8a10:	0018      	movs	r0, r3
    8a12:	3001      	adds	r0, #1
    8a14:	e7e5      	b.n	89e2 <__gedf2+0x52>
    8a16:	4663      	mov	r3, ip
    8a18:	2000      	movs	r0, #0
    8a1a:	2b00      	cmp	r3, #0
    8a1c:	d0e1      	beq.n	89e2 <__gedf2+0x52>
    8a1e:	e7db      	b.n	89d8 <__gedf2+0x48>
    8a20:	433a      	orrs	r2, r7
    8a22:	d1e6      	bne.n	89f2 <__gedf2+0x62>
    8a24:	459a      	cmp	sl, r3
    8a26:	d1d7      	bne.n	89d8 <__gedf2+0x48>
    8a28:	42a5      	cmp	r5, r4
    8a2a:	dcd5      	bgt.n	89d8 <__gedf2+0x48>
    8a2c:	42a5      	cmp	r5, r4
    8a2e:	db05      	blt.n	8a3c <__gedf2+0xac>
    8a30:	42be      	cmp	r6, r7
    8a32:	d8d1      	bhi.n	89d8 <__gedf2+0x48>
    8a34:	d008      	beq.n	8a48 <__gedf2+0xb8>
    8a36:	2000      	movs	r0, #0
    8a38:	42be      	cmp	r6, r7
    8a3a:	d2d2      	bcs.n	89e2 <__gedf2+0x52>
    8a3c:	4650      	mov	r0, sl
    8a3e:	2301      	movs	r3, #1
    8a40:	3801      	subs	r0, #1
    8a42:	4398      	bics	r0, r3
    8a44:	3001      	adds	r0, #1
    8a46:	e7cc      	b.n	89e2 <__gedf2+0x52>
    8a48:	45c8      	cmp	r8, r9
    8a4a:	d8c5      	bhi.n	89d8 <__gedf2+0x48>
    8a4c:	2000      	movs	r0, #0
    8a4e:	45c8      	cmp	r8, r9
    8a50:	d3f4      	bcc.n	8a3c <__gedf2+0xac>
    8a52:	e7c6      	b.n	89e2 <__gedf2+0x52>
    8a54:	000007ff 	.word	0x000007ff

00008a58 <__ledf2>:
__ledf2():
    8a58:	b5f0      	push	{r4, r5, r6, r7, lr}
    8a5a:	464f      	mov	r7, r9
    8a5c:	4646      	mov	r6, r8
    8a5e:	46d6      	mov	lr, sl
    8a60:	004d      	lsls	r5, r1, #1
    8a62:	b5c0      	push	{r6, r7, lr}
    8a64:	030e      	lsls	r6, r1, #12
    8a66:	0fc9      	lsrs	r1, r1, #31
    8a68:	468a      	mov	sl, r1
    8a6a:	492e      	ldr	r1, [pc, #184]	; (8b24 <__ledf2+0xcc>)
    8a6c:	031f      	lsls	r7, r3, #12
    8a6e:	005c      	lsls	r4, r3, #1
    8a70:	4680      	mov	r8, r0
    8a72:	0b36      	lsrs	r6, r6, #12
    8a74:	0d6d      	lsrs	r5, r5, #21
    8a76:	4691      	mov	r9, r2
    8a78:	0b3f      	lsrs	r7, r7, #12
    8a7a:	0d64      	lsrs	r4, r4, #21
    8a7c:	0fdb      	lsrs	r3, r3, #31
    8a7e:	428d      	cmp	r5, r1
    8a80:	d018      	beq.n	8ab4 <__ledf2+0x5c>
    8a82:	428c      	cmp	r4, r1
    8a84:	d011      	beq.n	8aaa <__ledf2+0x52>
    8a86:	2d00      	cmp	r5, #0
    8a88:	d118      	bne.n	8abc <__ledf2+0x64>
    8a8a:	4330      	orrs	r0, r6
    8a8c:	4684      	mov	ip, r0
    8a8e:	2c00      	cmp	r4, #0
    8a90:	d11e      	bne.n	8ad0 <__ledf2+0x78>
    8a92:	433a      	orrs	r2, r7
    8a94:	d11c      	bne.n	8ad0 <__ledf2+0x78>
    8a96:	4663      	mov	r3, ip
    8a98:	2000      	movs	r0, #0
    8a9a:	2b00      	cmp	r3, #0
    8a9c:	d030      	beq.n	8b00 <__ledf2+0xa8>
    8a9e:	4651      	mov	r1, sl
    8aa0:	2002      	movs	r0, #2
    8aa2:	3901      	subs	r1, #1
    8aa4:	4008      	ands	r0, r1
    8aa6:	3801      	subs	r0, #1
    8aa8:	e02a      	b.n	8b00 <__ledf2+0xa8>
    8aaa:	0039      	movs	r1, r7
    8aac:	4311      	orrs	r1, r2
    8aae:	d0ea      	beq.n	8a86 <__ledf2+0x2e>
    8ab0:	2002      	movs	r0, #2
    8ab2:	e025      	b.n	8b00 <__ledf2+0xa8>
    8ab4:	4330      	orrs	r0, r6
    8ab6:	d1fb      	bne.n	8ab0 <__ledf2+0x58>
    8ab8:	42ac      	cmp	r4, r5
    8aba:	d026      	beq.n	8b0a <__ledf2+0xb2>
    8abc:	2c00      	cmp	r4, #0
    8abe:	d126      	bne.n	8b0e <__ledf2+0xb6>
    8ac0:	433a      	orrs	r2, r7
    8ac2:	d124      	bne.n	8b0e <__ledf2+0xb6>
    8ac4:	4651      	mov	r1, sl
    8ac6:	2002      	movs	r0, #2
    8ac8:	3901      	subs	r1, #1
    8aca:	4008      	ands	r0, r1
    8acc:	3801      	subs	r0, #1
    8ace:	e017      	b.n	8b00 <__ledf2+0xa8>
    8ad0:	4662      	mov	r2, ip
    8ad2:	2a00      	cmp	r2, #0
    8ad4:	d00f      	beq.n	8af6 <__ledf2+0x9e>
    8ad6:	459a      	cmp	sl, r3
    8ad8:	d1e1      	bne.n	8a9e <__ledf2+0x46>
    8ada:	42a5      	cmp	r5, r4
    8adc:	db05      	blt.n	8aea <__ledf2+0x92>
    8ade:	42be      	cmp	r6, r7
    8ae0:	d8dd      	bhi.n	8a9e <__ledf2+0x46>
    8ae2:	d019      	beq.n	8b18 <__ledf2+0xc0>
    8ae4:	2000      	movs	r0, #0
    8ae6:	42be      	cmp	r6, r7
    8ae8:	d20a      	bcs.n	8b00 <__ledf2+0xa8>
    8aea:	4650      	mov	r0, sl
    8aec:	2301      	movs	r3, #1
    8aee:	3801      	subs	r0, #1
    8af0:	4398      	bics	r0, r3
    8af2:	3001      	adds	r0, #1
    8af4:	e004      	b.n	8b00 <__ledf2+0xa8>
    8af6:	2201      	movs	r2, #1
    8af8:	3b01      	subs	r3, #1
    8afa:	4393      	bics	r3, r2
    8afc:	0018      	movs	r0, r3
    8afe:	3001      	adds	r0, #1
    8b00:	bc1c      	pop	{r2, r3, r4}
    8b02:	4690      	mov	r8, r2
    8b04:	4699      	mov	r9, r3
    8b06:	46a2      	mov	sl, r4
    8b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b0a:	433a      	orrs	r2, r7
    8b0c:	d1d0      	bne.n	8ab0 <__ledf2+0x58>
    8b0e:	459a      	cmp	sl, r3
    8b10:	d1c5      	bne.n	8a9e <__ledf2+0x46>
    8b12:	42a5      	cmp	r5, r4
    8b14:	dcc3      	bgt.n	8a9e <__ledf2+0x46>
    8b16:	e7e0      	b.n	8ada <__ledf2+0x82>
    8b18:	45c8      	cmp	r8, r9
    8b1a:	d8c0      	bhi.n	8a9e <__ledf2+0x46>
    8b1c:	2000      	movs	r0, #0
    8b1e:	45c8      	cmp	r8, r9
    8b20:	d3e3      	bcc.n	8aea <__ledf2+0x92>
    8b22:	e7ed      	b.n	8b00 <__ledf2+0xa8>
    8b24:	000007ff 	.word	0x000007ff

00008b28 <__aeabi_dmul>:
__aeabi_dmul():
    8b28:	b5f0      	push	{r4, r5, r6, r7, lr}
    8b2a:	4657      	mov	r7, sl
    8b2c:	46de      	mov	lr, fp
    8b2e:	464e      	mov	r6, r9
    8b30:	4645      	mov	r5, r8
    8b32:	b5e0      	push	{r5, r6, r7, lr}
    8b34:	4683      	mov	fp, r0
    8b36:	0006      	movs	r6, r0
    8b38:	030f      	lsls	r7, r1, #12
    8b3a:	0048      	lsls	r0, r1, #1
    8b3c:	b087      	sub	sp, #28
    8b3e:	4692      	mov	sl, r2
    8b40:	001d      	movs	r5, r3
    8b42:	0b3f      	lsrs	r7, r7, #12
    8b44:	0d40      	lsrs	r0, r0, #21
    8b46:	0fcc      	lsrs	r4, r1, #31
    8b48:	2800      	cmp	r0, #0
    8b4a:	d100      	bne.n	8b4e <__aeabi_dmul+0x26>
    8b4c:	e06f      	b.n	8c2e <__aeabi_dmul+0x106>
    8b4e:	4bde      	ldr	r3, [pc, #888]	; (8ec8 <__aeabi_dmul+0x3a0>)
    8b50:	4298      	cmp	r0, r3
    8b52:	d038      	beq.n	8bc6 <__aeabi_dmul+0x9e>
    8b54:	2380      	movs	r3, #128	; 0x80
    8b56:	00ff      	lsls	r7, r7, #3
    8b58:	041b      	lsls	r3, r3, #16
    8b5a:	431f      	orrs	r7, r3
    8b5c:	0f73      	lsrs	r3, r6, #29
    8b5e:	433b      	orrs	r3, r7
    8b60:	9301      	str	r3, [sp, #4]
    8b62:	4bda      	ldr	r3, [pc, #872]	; (8ecc <__aeabi_dmul+0x3a4>)
    8b64:	2700      	movs	r7, #0
    8b66:	4699      	mov	r9, r3
    8b68:	2300      	movs	r3, #0
    8b6a:	469b      	mov	fp, r3
    8b6c:	00f6      	lsls	r6, r6, #3
    8b6e:	4481      	add	r9, r0
    8b70:	032b      	lsls	r3, r5, #12
    8b72:	0069      	lsls	r1, r5, #1
    8b74:	0b1b      	lsrs	r3, r3, #12
    8b76:	4652      	mov	r2, sl
    8b78:	4698      	mov	r8, r3
    8b7a:	0d49      	lsrs	r1, r1, #21
    8b7c:	0fed      	lsrs	r5, r5, #31
    8b7e:	2900      	cmp	r1, #0
    8b80:	d100      	bne.n	8b84 <__aeabi_dmul+0x5c>
    8b82:	e085      	b.n	8c90 <__aeabi_dmul+0x168>
    8b84:	4bd0      	ldr	r3, [pc, #832]	; (8ec8 <__aeabi_dmul+0x3a0>)
    8b86:	4299      	cmp	r1, r3
    8b88:	d100      	bne.n	8b8c <__aeabi_dmul+0x64>
    8b8a:	e073      	b.n	8c74 <__aeabi_dmul+0x14c>
    8b8c:	4643      	mov	r3, r8
    8b8e:	00da      	lsls	r2, r3, #3
    8b90:	2380      	movs	r3, #128	; 0x80
    8b92:	041b      	lsls	r3, r3, #16
    8b94:	4313      	orrs	r3, r2
    8b96:	4652      	mov	r2, sl
    8b98:	48cc      	ldr	r0, [pc, #816]	; (8ecc <__aeabi_dmul+0x3a4>)
    8b9a:	0f52      	lsrs	r2, r2, #29
    8b9c:	4684      	mov	ip, r0
    8b9e:	4313      	orrs	r3, r2
    8ba0:	4652      	mov	r2, sl
    8ba2:	2000      	movs	r0, #0
    8ba4:	4461      	add	r1, ip
    8ba6:	00d2      	lsls	r2, r2, #3
    8ba8:	4489      	add	r9, r1
    8baa:	0021      	movs	r1, r4
    8bac:	4069      	eors	r1, r5
    8bae:	9100      	str	r1, [sp, #0]
    8bb0:	468c      	mov	ip, r1
    8bb2:	2101      	movs	r1, #1
    8bb4:	4449      	add	r1, r9
    8bb6:	468a      	mov	sl, r1
    8bb8:	2f0f      	cmp	r7, #15
    8bba:	d900      	bls.n	8bbe <__aeabi_dmul+0x96>
    8bbc:	e090      	b.n	8ce0 <__aeabi_dmul+0x1b8>
    8bbe:	49c4      	ldr	r1, [pc, #784]	; (8ed0 <__aeabi_dmul+0x3a8>)
    8bc0:	00bf      	lsls	r7, r7, #2
    8bc2:	59cf      	ldr	r7, [r1, r7]
    8bc4:	46bf      	mov	pc, r7
    8bc6:	465b      	mov	r3, fp
    8bc8:	433b      	orrs	r3, r7
    8bca:	9301      	str	r3, [sp, #4]
    8bcc:	d000      	beq.n	8bd0 <__aeabi_dmul+0xa8>
    8bce:	e16a      	b.n	8ea6 <__aeabi_dmul+0x37e>
    8bd0:	2302      	movs	r3, #2
    8bd2:	2708      	movs	r7, #8
    8bd4:	2600      	movs	r6, #0
    8bd6:	4681      	mov	r9, r0
    8bd8:	469b      	mov	fp, r3
    8bda:	e7c9      	b.n	8b70 <__aeabi_dmul+0x48>
    8bdc:	0032      	movs	r2, r6
    8bde:	4658      	mov	r0, fp
    8be0:	9b01      	ldr	r3, [sp, #4]
    8be2:	4661      	mov	r1, ip
    8be4:	9100      	str	r1, [sp, #0]
    8be6:	2802      	cmp	r0, #2
    8be8:	d100      	bne.n	8bec <__aeabi_dmul+0xc4>
    8bea:	e075      	b.n	8cd8 <__aeabi_dmul+0x1b0>
    8bec:	2803      	cmp	r0, #3
    8bee:	d100      	bne.n	8bf2 <__aeabi_dmul+0xca>
    8bf0:	e1fe      	b.n	8ff0 <__aeabi_dmul+0x4c8>
    8bf2:	2801      	cmp	r0, #1
    8bf4:	d000      	beq.n	8bf8 <__aeabi_dmul+0xd0>
    8bf6:	e12c      	b.n	8e52 <__aeabi_dmul+0x32a>
    8bf8:	2300      	movs	r3, #0
    8bfa:	2700      	movs	r7, #0
    8bfc:	2600      	movs	r6, #0
    8bfe:	2500      	movs	r5, #0
    8c00:	033f      	lsls	r7, r7, #12
    8c02:	0d2a      	lsrs	r2, r5, #20
    8c04:	0b3f      	lsrs	r7, r7, #12
    8c06:	48b3      	ldr	r0, [pc, #716]	; (8ed4 <__aeabi_dmul+0x3ac>)
    8c08:	0512      	lsls	r2, r2, #20
    8c0a:	433a      	orrs	r2, r7
    8c0c:	4002      	ands	r2, r0
    8c0e:	051b      	lsls	r3, r3, #20
    8c10:	4313      	orrs	r3, r2
    8c12:	9a00      	ldr	r2, [sp, #0]
    8c14:	005b      	lsls	r3, r3, #1
    8c16:	07d1      	lsls	r1, r2, #31
    8c18:	085b      	lsrs	r3, r3, #1
    8c1a:	430b      	orrs	r3, r1
    8c1c:	0030      	movs	r0, r6
    8c1e:	0019      	movs	r1, r3
    8c20:	b007      	add	sp, #28
    8c22:	bc3c      	pop	{r2, r3, r4, r5}
    8c24:	4690      	mov	r8, r2
    8c26:	4699      	mov	r9, r3
    8c28:	46a2      	mov	sl, r4
    8c2a:	46ab      	mov	fp, r5
    8c2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8c2e:	465b      	mov	r3, fp
    8c30:	433b      	orrs	r3, r7
    8c32:	9301      	str	r3, [sp, #4]
    8c34:	d100      	bne.n	8c38 <__aeabi_dmul+0x110>
    8c36:	e12f      	b.n	8e98 <__aeabi_dmul+0x370>
    8c38:	2f00      	cmp	r7, #0
    8c3a:	d100      	bne.n	8c3e <__aeabi_dmul+0x116>
    8c3c:	e1a5      	b.n	8f8a <__aeabi_dmul+0x462>
    8c3e:	0038      	movs	r0, r7
    8c40:	f000 fec0 	bl	99c4 <__clzsi2>
    8c44:	0003      	movs	r3, r0
    8c46:	3b0b      	subs	r3, #11
    8c48:	2b1c      	cmp	r3, #28
    8c4a:	dd00      	ble.n	8c4e <__aeabi_dmul+0x126>
    8c4c:	e196      	b.n	8f7c <__aeabi_dmul+0x454>
    8c4e:	221d      	movs	r2, #29
    8c50:	1ad3      	subs	r3, r2, r3
    8c52:	465a      	mov	r2, fp
    8c54:	0001      	movs	r1, r0
    8c56:	40da      	lsrs	r2, r3
    8c58:	465e      	mov	r6, fp
    8c5a:	3908      	subs	r1, #8
    8c5c:	408f      	lsls	r7, r1
    8c5e:	0013      	movs	r3, r2
    8c60:	408e      	lsls	r6, r1
    8c62:	433b      	orrs	r3, r7
    8c64:	9301      	str	r3, [sp, #4]
    8c66:	4b9c      	ldr	r3, [pc, #624]	; (8ed8 <__aeabi_dmul+0x3b0>)
    8c68:	2700      	movs	r7, #0
    8c6a:	1a1b      	subs	r3, r3, r0
    8c6c:	4699      	mov	r9, r3
    8c6e:	2300      	movs	r3, #0
    8c70:	469b      	mov	fp, r3
    8c72:	e77d      	b.n	8b70 <__aeabi_dmul+0x48>
    8c74:	4641      	mov	r1, r8
    8c76:	4653      	mov	r3, sl
    8c78:	430b      	orrs	r3, r1
    8c7a:	4993      	ldr	r1, [pc, #588]	; (8ec8 <__aeabi_dmul+0x3a0>)
    8c7c:	468c      	mov	ip, r1
    8c7e:	44e1      	add	r9, ip
    8c80:	2b00      	cmp	r3, #0
    8c82:	d000      	beq.n	8c86 <__aeabi_dmul+0x15e>
    8c84:	e11a      	b.n	8ebc <__aeabi_dmul+0x394>
    8c86:	2202      	movs	r2, #2
    8c88:	2002      	movs	r0, #2
    8c8a:	4317      	orrs	r7, r2
    8c8c:	2200      	movs	r2, #0
    8c8e:	e78c      	b.n	8baa <__aeabi_dmul+0x82>
    8c90:	4313      	orrs	r3, r2
    8c92:	d100      	bne.n	8c96 <__aeabi_dmul+0x16e>
    8c94:	e10d      	b.n	8eb2 <__aeabi_dmul+0x38a>
    8c96:	4643      	mov	r3, r8
    8c98:	2b00      	cmp	r3, #0
    8c9a:	d100      	bne.n	8c9e <__aeabi_dmul+0x176>
    8c9c:	e181      	b.n	8fa2 <__aeabi_dmul+0x47a>
    8c9e:	4640      	mov	r0, r8
    8ca0:	f000 fe90 	bl	99c4 <__clzsi2>
    8ca4:	0002      	movs	r2, r0
    8ca6:	3a0b      	subs	r2, #11
    8ca8:	2a1c      	cmp	r2, #28
    8caa:	dd00      	ble.n	8cae <__aeabi_dmul+0x186>
    8cac:	e172      	b.n	8f94 <__aeabi_dmul+0x46c>
    8cae:	0001      	movs	r1, r0
    8cb0:	4643      	mov	r3, r8
    8cb2:	3908      	subs	r1, #8
    8cb4:	408b      	lsls	r3, r1
    8cb6:	4698      	mov	r8, r3
    8cb8:	231d      	movs	r3, #29
    8cba:	1a9a      	subs	r2, r3, r2
    8cbc:	4653      	mov	r3, sl
    8cbe:	40d3      	lsrs	r3, r2
    8cc0:	001a      	movs	r2, r3
    8cc2:	4643      	mov	r3, r8
    8cc4:	4313      	orrs	r3, r2
    8cc6:	4652      	mov	r2, sl
    8cc8:	408a      	lsls	r2, r1
    8cca:	4649      	mov	r1, r9
    8ccc:	1a08      	subs	r0, r1, r0
    8cce:	4982      	ldr	r1, [pc, #520]	; (8ed8 <__aeabi_dmul+0x3b0>)
    8cd0:	4689      	mov	r9, r1
    8cd2:	4481      	add	r9, r0
    8cd4:	2000      	movs	r0, #0
    8cd6:	e768      	b.n	8baa <__aeabi_dmul+0x82>
    8cd8:	4b7b      	ldr	r3, [pc, #492]	; (8ec8 <__aeabi_dmul+0x3a0>)
    8cda:	2700      	movs	r7, #0
    8cdc:	2600      	movs	r6, #0
    8cde:	e78e      	b.n	8bfe <__aeabi_dmul+0xd6>
    8ce0:	0c14      	lsrs	r4, r2, #16
    8ce2:	0412      	lsls	r2, r2, #16
    8ce4:	0c12      	lsrs	r2, r2, #16
    8ce6:	0011      	movs	r1, r2
    8ce8:	0c37      	lsrs	r7, r6, #16
    8cea:	0436      	lsls	r6, r6, #16
    8cec:	0c35      	lsrs	r5, r6, #16
    8cee:	4379      	muls	r1, r7
    8cf0:	0028      	movs	r0, r5
    8cf2:	468c      	mov	ip, r1
    8cf4:	002e      	movs	r6, r5
    8cf6:	4360      	muls	r0, r4
    8cf8:	4460      	add	r0, ip
    8cfa:	4683      	mov	fp, r0
    8cfc:	4356      	muls	r6, r2
    8cfe:	0021      	movs	r1, r4
    8d00:	0c30      	lsrs	r0, r6, #16
    8d02:	4680      	mov	r8, r0
    8d04:	4658      	mov	r0, fp
    8d06:	4379      	muls	r1, r7
    8d08:	4440      	add	r0, r8
    8d0a:	9102      	str	r1, [sp, #8]
    8d0c:	4584      	cmp	ip, r0
    8d0e:	d906      	bls.n	8d1e <__aeabi_dmul+0x1f6>
    8d10:	4688      	mov	r8, r1
    8d12:	2180      	movs	r1, #128	; 0x80
    8d14:	0249      	lsls	r1, r1, #9
    8d16:	468c      	mov	ip, r1
    8d18:	44e0      	add	r8, ip
    8d1a:	4641      	mov	r1, r8
    8d1c:	9102      	str	r1, [sp, #8]
    8d1e:	0436      	lsls	r6, r6, #16
    8d20:	0c01      	lsrs	r1, r0, #16
    8d22:	0c36      	lsrs	r6, r6, #16
    8d24:	0400      	lsls	r0, r0, #16
    8d26:	468b      	mov	fp, r1
    8d28:	1981      	adds	r1, r0, r6
    8d2a:	0c1e      	lsrs	r6, r3, #16
    8d2c:	041b      	lsls	r3, r3, #16
    8d2e:	0c1b      	lsrs	r3, r3, #16
    8d30:	9103      	str	r1, [sp, #12]
    8d32:	0019      	movs	r1, r3
    8d34:	4379      	muls	r1, r7
    8d36:	468c      	mov	ip, r1
    8d38:	0028      	movs	r0, r5
    8d3a:	4375      	muls	r5, r6
    8d3c:	4465      	add	r5, ip
    8d3e:	46a8      	mov	r8, r5
    8d40:	4358      	muls	r0, r3
    8d42:	0c05      	lsrs	r5, r0, #16
    8d44:	4445      	add	r5, r8
    8d46:	4377      	muls	r7, r6
    8d48:	42a9      	cmp	r1, r5
    8d4a:	d903      	bls.n	8d54 <__aeabi_dmul+0x22c>
    8d4c:	2180      	movs	r1, #128	; 0x80
    8d4e:	0249      	lsls	r1, r1, #9
    8d50:	468c      	mov	ip, r1
    8d52:	4467      	add	r7, ip
    8d54:	0c29      	lsrs	r1, r5, #16
    8d56:	468c      	mov	ip, r1
    8d58:	0039      	movs	r1, r7
    8d5a:	0400      	lsls	r0, r0, #16
    8d5c:	0c00      	lsrs	r0, r0, #16
    8d5e:	042d      	lsls	r5, r5, #16
    8d60:	182d      	adds	r5, r5, r0
    8d62:	4461      	add	r1, ip
    8d64:	44ab      	add	fp, r5
    8d66:	9105      	str	r1, [sp, #20]
    8d68:	4659      	mov	r1, fp
    8d6a:	9104      	str	r1, [sp, #16]
    8d6c:	9901      	ldr	r1, [sp, #4]
    8d6e:	040f      	lsls	r7, r1, #16
    8d70:	0c3f      	lsrs	r7, r7, #16
    8d72:	0c08      	lsrs	r0, r1, #16
    8d74:	0039      	movs	r1, r7
    8d76:	4351      	muls	r1, r2
    8d78:	4342      	muls	r2, r0
    8d7a:	4690      	mov	r8, r2
    8d7c:	0002      	movs	r2, r0
    8d7e:	468c      	mov	ip, r1
    8d80:	0c09      	lsrs	r1, r1, #16
    8d82:	468b      	mov	fp, r1
    8d84:	4362      	muls	r2, r4
    8d86:	437c      	muls	r4, r7
    8d88:	4444      	add	r4, r8
    8d8a:	445c      	add	r4, fp
    8d8c:	45a0      	cmp	r8, r4
    8d8e:	d903      	bls.n	8d98 <__aeabi_dmul+0x270>
    8d90:	2180      	movs	r1, #128	; 0x80
    8d92:	0249      	lsls	r1, r1, #9
    8d94:	4688      	mov	r8, r1
    8d96:	4442      	add	r2, r8
    8d98:	0c21      	lsrs	r1, r4, #16
    8d9a:	4688      	mov	r8, r1
    8d9c:	4661      	mov	r1, ip
    8d9e:	0409      	lsls	r1, r1, #16
    8da0:	0c09      	lsrs	r1, r1, #16
    8da2:	468c      	mov	ip, r1
    8da4:	0039      	movs	r1, r7
    8da6:	4359      	muls	r1, r3
    8da8:	4343      	muls	r3, r0
    8daa:	4370      	muls	r0, r6
    8dac:	437e      	muls	r6, r7
    8dae:	0c0f      	lsrs	r7, r1, #16
    8db0:	18f6      	adds	r6, r6, r3
    8db2:	0424      	lsls	r4, r4, #16
    8db4:	19be      	adds	r6, r7, r6
    8db6:	4464      	add	r4, ip
    8db8:	4442      	add	r2, r8
    8dba:	468c      	mov	ip, r1
    8dbc:	42b3      	cmp	r3, r6
    8dbe:	d903      	bls.n	8dc8 <__aeabi_dmul+0x2a0>
    8dc0:	2380      	movs	r3, #128	; 0x80
    8dc2:	025b      	lsls	r3, r3, #9
    8dc4:	4698      	mov	r8, r3
    8dc6:	4440      	add	r0, r8
    8dc8:	9b02      	ldr	r3, [sp, #8]
    8dca:	4661      	mov	r1, ip
    8dcc:	4698      	mov	r8, r3
    8dce:	9b04      	ldr	r3, [sp, #16]
    8dd0:	0437      	lsls	r7, r6, #16
    8dd2:	4443      	add	r3, r8
    8dd4:	469b      	mov	fp, r3
    8dd6:	45ab      	cmp	fp, r5
    8dd8:	41ad      	sbcs	r5, r5
    8dda:	426b      	negs	r3, r5
    8ddc:	040d      	lsls	r5, r1, #16
    8dde:	9905      	ldr	r1, [sp, #20]
    8de0:	0c2d      	lsrs	r5, r5, #16
    8de2:	468c      	mov	ip, r1
    8de4:	197f      	adds	r7, r7, r5
    8de6:	4467      	add	r7, ip
    8de8:	18fd      	adds	r5, r7, r3
    8dea:	46a8      	mov	r8, r5
    8dec:	465d      	mov	r5, fp
    8dee:	192d      	adds	r5, r5, r4
    8df0:	42a5      	cmp	r5, r4
    8df2:	41a4      	sbcs	r4, r4
    8df4:	4693      	mov	fp, r2
    8df6:	4264      	negs	r4, r4
    8df8:	46a4      	mov	ip, r4
    8dfa:	44c3      	add	fp, r8
    8dfc:	44dc      	add	ip, fp
    8dfe:	428f      	cmp	r7, r1
    8e00:	41bf      	sbcs	r7, r7
    8e02:	4598      	cmp	r8, r3
    8e04:	419b      	sbcs	r3, r3
    8e06:	4593      	cmp	fp, r2
    8e08:	4192      	sbcs	r2, r2
    8e0a:	45a4      	cmp	ip, r4
    8e0c:	41a4      	sbcs	r4, r4
    8e0e:	425b      	negs	r3, r3
    8e10:	427f      	negs	r7, r7
    8e12:	431f      	orrs	r7, r3
    8e14:	0c36      	lsrs	r6, r6, #16
    8e16:	4252      	negs	r2, r2
    8e18:	4264      	negs	r4, r4
    8e1a:	19bf      	adds	r7, r7, r6
    8e1c:	4322      	orrs	r2, r4
    8e1e:	18bf      	adds	r7, r7, r2
    8e20:	4662      	mov	r2, ip
    8e22:	1838      	adds	r0, r7, r0
    8e24:	0243      	lsls	r3, r0, #9
    8e26:	0dd2      	lsrs	r2, r2, #23
    8e28:	9903      	ldr	r1, [sp, #12]
    8e2a:	4313      	orrs	r3, r2
    8e2c:	026a      	lsls	r2, r5, #9
    8e2e:	430a      	orrs	r2, r1
    8e30:	1e50      	subs	r0, r2, #1
    8e32:	4182      	sbcs	r2, r0
    8e34:	4661      	mov	r1, ip
    8e36:	0ded      	lsrs	r5, r5, #23
    8e38:	432a      	orrs	r2, r5
    8e3a:	024e      	lsls	r6, r1, #9
    8e3c:	4332      	orrs	r2, r6
    8e3e:	01d9      	lsls	r1, r3, #7
    8e40:	d400      	bmi.n	8e44 <__aeabi_dmul+0x31c>
    8e42:	e0b3      	b.n	8fac <__aeabi_dmul+0x484>
    8e44:	2601      	movs	r6, #1
    8e46:	0850      	lsrs	r0, r2, #1
    8e48:	4032      	ands	r2, r6
    8e4a:	4302      	orrs	r2, r0
    8e4c:	07de      	lsls	r6, r3, #31
    8e4e:	4332      	orrs	r2, r6
    8e50:	085b      	lsrs	r3, r3, #1
    8e52:	4c22      	ldr	r4, [pc, #136]	; (8edc <__aeabi_dmul+0x3b4>)
    8e54:	4454      	add	r4, sl
    8e56:	2c00      	cmp	r4, #0
    8e58:	dd62      	ble.n	8f20 <__aeabi_dmul+0x3f8>
    8e5a:	0751      	lsls	r1, r2, #29
    8e5c:	d009      	beq.n	8e72 <__aeabi_dmul+0x34a>
    8e5e:	200f      	movs	r0, #15
    8e60:	4010      	ands	r0, r2
    8e62:	2804      	cmp	r0, #4
    8e64:	d005      	beq.n	8e72 <__aeabi_dmul+0x34a>
    8e66:	1d10      	adds	r0, r2, #4
    8e68:	4290      	cmp	r0, r2
    8e6a:	4192      	sbcs	r2, r2
    8e6c:	4252      	negs	r2, r2
    8e6e:	189b      	adds	r3, r3, r2
    8e70:	0002      	movs	r2, r0
    8e72:	01d9      	lsls	r1, r3, #7
    8e74:	d504      	bpl.n	8e80 <__aeabi_dmul+0x358>
    8e76:	2480      	movs	r4, #128	; 0x80
    8e78:	4819      	ldr	r0, [pc, #100]	; (8ee0 <__aeabi_dmul+0x3b8>)
    8e7a:	00e4      	lsls	r4, r4, #3
    8e7c:	4003      	ands	r3, r0
    8e7e:	4454      	add	r4, sl
    8e80:	4818      	ldr	r0, [pc, #96]	; (8ee4 <__aeabi_dmul+0x3bc>)
    8e82:	4284      	cmp	r4, r0
    8e84:	dd00      	ble.n	8e88 <__aeabi_dmul+0x360>
    8e86:	e727      	b.n	8cd8 <__aeabi_dmul+0x1b0>
    8e88:	075e      	lsls	r6, r3, #29
    8e8a:	025b      	lsls	r3, r3, #9
    8e8c:	08d2      	lsrs	r2, r2, #3
    8e8e:	0b1f      	lsrs	r7, r3, #12
    8e90:	0563      	lsls	r3, r4, #21
    8e92:	4316      	orrs	r6, r2
    8e94:	0d5b      	lsrs	r3, r3, #21
    8e96:	e6b2      	b.n	8bfe <__aeabi_dmul+0xd6>
    8e98:	2300      	movs	r3, #0
    8e9a:	4699      	mov	r9, r3
    8e9c:	3301      	adds	r3, #1
    8e9e:	2704      	movs	r7, #4
    8ea0:	2600      	movs	r6, #0
    8ea2:	469b      	mov	fp, r3
    8ea4:	e664      	b.n	8b70 <__aeabi_dmul+0x48>
    8ea6:	2303      	movs	r3, #3
    8ea8:	9701      	str	r7, [sp, #4]
    8eaa:	4681      	mov	r9, r0
    8eac:	270c      	movs	r7, #12
    8eae:	469b      	mov	fp, r3
    8eb0:	e65e      	b.n	8b70 <__aeabi_dmul+0x48>
    8eb2:	2201      	movs	r2, #1
    8eb4:	2001      	movs	r0, #1
    8eb6:	4317      	orrs	r7, r2
    8eb8:	2200      	movs	r2, #0
    8eba:	e676      	b.n	8baa <__aeabi_dmul+0x82>
    8ebc:	2303      	movs	r3, #3
    8ebe:	2003      	movs	r0, #3
    8ec0:	431f      	orrs	r7, r3
    8ec2:	4643      	mov	r3, r8
    8ec4:	e671      	b.n	8baa <__aeabi_dmul+0x82>
    8ec6:	46c0      	nop			; (mov r8, r8)
    8ec8:	000007ff 	.word	0x000007ff
    8ecc:	fffffc01 	.word	0xfffffc01
    8ed0:	0000af6c 	.word	0x0000af6c
    8ed4:	800fffff 	.word	0x800fffff
    8ed8:	fffffc0d 	.word	0xfffffc0d
    8edc:	000003ff 	.word	0x000003ff
    8ee0:	feffffff 	.word	0xfeffffff
    8ee4:	000007fe 	.word	0x000007fe
    8ee8:	2300      	movs	r3, #0
    8eea:	2780      	movs	r7, #128	; 0x80
    8eec:	9300      	str	r3, [sp, #0]
    8eee:	033f      	lsls	r7, r7, #12
    8ef0:	2600      	movs	r6, #0
    8ef2:	4b43      	ldr	r3, [pc, #268]	; (9000 <__aeabi_dmul+0x4d8>)
    8ef4:	e683      	b.n	8bfe <__aeabi_dmul+0xd6>
    8ef6:	9b01      	ldr	r3, [sp, #4]
    8ef8:	0032      	movs	r2, r6
    8efa:	46a4      	mov	ip, r4
    8efc:	4658      	mov	r0, fp
    8efe:	e670      	b.n	8be2 <__aeabi_dmul+0xba>
    8f00:	46ac      	mov	ip, r5
    8f02:	e66e      	b.n	8be2 <__aeabi_dmul+0xba>
    8f04:	2780      	movs	r7, #128	; 0x80
    8f06:	9901      	ldr	r1, [sp, #4]
    8f08:	033f      	lsls	r7, r7, #12
    8f0a:	4239      	tst	r1, r7
    8f0c:	d02d      	beq.n	8f6a <__aeabi_dmul+0x442>
    8f0e:	423b      	tst	r3, r7
    8f10:	d12b      	bne.n	8f6a <__aeabi_dmul+0x442>
    8f12:	431f      	orrs	r7, r3
    8f14:	033f      	lsls	r7, r7, #12
    8f16:	0b3f      	lsrs	r7, r7, #12
    8f18:	9500      	str	r5, [sp, #0]
    8f1a:	0016      	movs	r6, r2
    8f1c:	4b38      	ldr	r3, [pc, #224]	; (9000 <__aeabi_dmul+0x4d8>)
    8f1e:	e66e      	b.n	8bfe <__aeabi_dmul+0xd6>
    8f20:	2501      	movs	r5, #1
    8f22:	1b2d      	subs	r5, r5, r4
    8f24:	2d38      	cmp	r5, #56	; 0x38
    8f26:	dd00      	ble.n	8f2a <__aeabi_dmul+0x402>
    8f28:	e666      	b.n	8bf8 <__aeabi_dmul+0xd0>
    8f2a:	2d1f      	cmp	r5, #31
    8f2c:	dc40      	bgt.n	8fb0 <__aeabi_dmul+0x488>
    8f2e:	4835      	ldr	r0, [pc, #212]	; (9004 <__aeabi_dmul+0x4dc>)
    8f30:	001c      	movs	r4, r3
    8f32:	4450      	add	r0, sl
    8f34:	0016      	movs	r6, r2
    8f36:	4082      	lsls	r2, r0
    8f38:	4084      	lsls	r4, r0
    8f3a:	40ee      	lsrs	r6, r5
    8f3c:	1e50      	subs	r0, r2, #1
    8f3e:	4182      	sbcs	r2, r0
    8f40:	4334      	orrs	r4, r6
    8f42:	4314      	orrs	r4, r2
    8f44:	40eb      	lsrs	r3, r5
    8f46:	0762      	lsls	r2, r4, #29
    8f48:	d009      	beq.n	8f5e <__aeabi_dmul+0x436>
    8f4a:	220f      	movs	r2, #15
    8f4c:	4022      	ands	r2, r4
    8f4e:	2a04      	cmp	r2, #4
    8f50:	d005      	beq.n	8f5e <__aeabi_dmul+0x436>
    8f52:	0022      	movs	r2, r4
    8f54:	1d14      	adds	r4, r2, #4
    8f56:	4294      	cmp	r4, r2
    8f58:	4180      	sbcs	r0, r0
    8f5a:	4240      	negs	r0, r0
    8f5c:	181b      	adds	r3, r3, r0
    8f5e:	021a      	lsls	r2, r3, #8
    8f60:	d53e      	bpl.n	8fe0 <__aeabi_dmul+0x4b8>
    8f62:	2301      	movs	r3, #1
    8f64:	2700      	movs	r7, #0
    8f66:	2600      	movs	r6, #0
    8f68:	e649      	b.n	8bfe <__aeabi_dmul+0xd6>
    8f6a:	2780      	movs	r7, #128	; 0x80
    8f6c:	9b01      	ldr	r3, [sp, #4]
    8f6e:	033f      	lsls	r7, r7, #12
    8f70:	431f      	orrs	r7, r3
    8f72:	033f      	lsls	r7, r7, #12
    8f74:	0b3f      	lsrs	r7, r7, #12
    8f76:	9400      	str	r4, [sp, #0]
    8f78:	4b21      	ldr	r3, [pc, #132]	; (9000 <__aeabi_dmul+0x4d8>)
    8f7a:	e640      	b.n	8bfe <__aeabi_dmul+0xd6>
    8f7c:	0003      	movs	r3, r0
    8f7e:	465a      	mov	r2, fp
    8f80:	3b28      	subs	r3, #40	; 0x28
    8f82:	409a      	lsls	r2, r3
    8f84:	2600      	movs	r6, #0
    8f86:	9201      	str	r2, [sp, #4]
    8f88:	e66d      	b.n	8c66 <__aeabi_dmul+0x13e>
    8f8a:	4658      	mov	r0, fp
    8f8c:	f000 fd1a 	bl	99c4 <__clzsi2>
    8f90:	3020      	adds	r0, #32
    8f92:	e657      	b.n	8c44 <__aeabi_dmul+0x11c>
    8f94:	0003      	movs	r3, r0
    8f96:	4652      	mov	r2, sl
    8f98:	3b28      	subs	r3, #40	; 0x28
    8f9a:	409a      	lsls	r2, r3
    8f9c:	0013      	movs	r3, r2
    8f9e:	2200      	movs	r2, #0
    8fa0:	e693      	b.n	8cca <__aeabi_dmul+0x1a2>
    8fa2:	4650      	mov	r0, sl
    8fa4:	f000 fd0e 	bl	99c4 <__clzsi2>
    8fa8:	3020      	adds	r0, #32
    8faa:	e67b      	b.n	8ca4 <__aeabi_dmul+0x17c>
    8fac:	46ca      	mov	sl, r9
    8fae:	e750      	b.n	8e52 <__aeabi_dmul+0x32a>
    8fb0:	201f      	movs	r0, #31
    8fb2:	001e      	movs	r6, r3
    8fb4:	4240      	negs	r0, r0
    8fb6:	1b04      	subs	r4, r0, r4
    8fb8:	40e6      	lsrs	r6, r4
    8fba:	2d20      	cmp	r5, #32
    8fbc:	d003      	beq.n	8fc6 <__aeabi_dmul+0x49e>
    8fbe:	4c12      	ldr	r4, [pc, #72]	; (9008 <__aeabi_dmul+0x4e0>)
    8fc0:	4454      	add	r4, sl
    8fc2:	40a3      	lsls	r3, r4
    8fc4:	431a      	orrs	r2, r3
    8fc6:	1e50      	subs	r0, r2, #1
    8fc8:	4182      	sbcs	r2, r0
    8fca:	4332      	orrs	r2, r6
    8fcc:	2607      	movs	r6, #7
    8fce:	2700      	movs	r7, #0
    8fd0:	4016      	ands	r6, r2
    8fd2:	d009      	beq.n	8fe8 <__aeabi_dmul+0x4c0>
    8fd4:	200f      	movs	r0, #15
    8fd6:	2300      	movs	r3, #0
    8fd8:	4010      	ands	r0, r2
    8fda:	0014      	movs	r4, r2
    8fdc:	2804      	cmp	r0, #4
    8fde:	d1b9      	bne.n	8f54 <__aeabi_dmul+0x42c>
    8fe0:	0022      	movs	r2, r4
    8fe2:	075e      	lsls	r6, r3, #29
    8fe4:	025b      	lsls	r3, r3, #9
    8fe6:	0b1f      	lsrs	r7, r3, #12
    8fe8:	08d2      	lsrs	r2, r2, #3
    8fea:	4316      	orrs	r6, r2
    8fec:	2300      	movs	r3, #0
    8fee:	e606      	b.n	8bfe <__aeabi_dmul+0xd6>
    8ff0:	2780      	movs	r7, #128	; 0x80
    8ff2:	033f      	lsls	r7, r7, #12
    8ff4:	431f      	orrs	r7, r3
    8ff6:	033f      	lsls	r7, r7, #12
    8ff8:	0b3f      	lsrs	r7, r7, #12
    8ffa:	0016      	movs	r6, r2
    8ffc:	4b00      	ldr	r3, [pc, #0]	; (9000 <__aeabi_dmul+0x4d8>)
    8ffe:	e5fe      	b.n	8bfe <__aeabi_dmul+0xd6>
    9000:	000007ff 	.word	0x000007ff
    9004:	0000041e 	.word	0x0000041e
    9008:	0000043e 	.word	0x0000043e

0000900c <__aeabi_dsub>:
__aeabi_dsub():
    900c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    900e:	4657      	mov	r7, sl
    9010:	464e      	mov	r6, r9
    9012:	4645      	mov	r5, r8
    9014:	46de      	mov	lr, fp
    9016:	000c      	movs	r4, r1
    9018:	0309      	lsls	r1, r1, #12
    901a:	b5e0      	push	{r5, r6, r7, lr}
    901c:	0a49      	lsrs	r1, r1, #9
    901e:	0f46      	lsrs	r6, r0, #29
    9020:	005f      	lsls	r7, r3, #1
    9022:	4331      	orrs	r1, r6
    9024:	031e      	lsls	r6, r3, #12
    9026:	0fdb      	lsrs	r3, r3, #31
    9028:	0a76      	lsrs	r6, r6, #9
    902a:	469b      	mov	fp, r3
    902c:	0f53      	lsrs	r3, r2, #29
    902e:	4333      	orrs	r3, r6
    9030:	4ec8      	ldr	r6, [pc, #800]	; (9354 <__aeabi_dsub+0x348>)
    9032:	0065      	lsls	r5, r4, #1
    9034:	00c0      	lsls	r0, r0, #3
    9036:	0fe4      	lsrs	r4, r4, #31
    9038:	00d2      	lsls	r2, r2, #3
    903a:	0d6d      	lsrs	r5, r5, #21
    903c:	46a2      	mov	sl, r4
    903e:	4681      	mov	r9, r0
    9040:	0d7f      	lsrs	r7, r7, #21
    9042:	469c      	mov	ip, r3
    9044:	4690      	mov	r8, r2
    9046:	42b7      	cmp	r7, r6
    9048:	d100      	bne.n	904c <__aeabi_dsub+0x40>
    904a:	e0b9      	b.n	91c0 <__aeabi_dsub+0x1b4>
    904c:	465b      	mov	r3, fp
    904e:	2601      	movs	r6, #1
    9050:	4073      	eors	r3, r6
    9052:	469b      	mov	fp, r3
    9054:	1bee      	subs	r6, r5, r7
    9056:	45a3      	cmp	fp, r4
    9058:	d100      	bne.n	905c <__aeabi_dsub+0x50>
    905a:	e083      	b.n	9164 <__aeabi_dsub+0x158>
    905c:	2e00      	cmp	r6, #0
    905e:	dd63      	ble.n	9128 <__aeabi_dsub+0x11c>
    9060:	2f00      	cmp	r7, #0
    9062:	d000      	beq.n	9066 <__aeabi_dsub+0x5a>
    9064:	e0b1      	b.n	91ca <__aeabi_dsub+0x1be>
    9066:	4663      	mov	r3, ip
    9068:	4313      	orrs	r3, r2
    906a:	d100      	bne.n	906e <__aeabi_dsub+0x62>
    906c:	e123      	b.n	92b6 <__aeabi_dsub+0x2aa>
    906e:	1e73      	subs	r3, r6, #1
    9070:	2b00      	cmp	r3, #0
    9072:	d000      	beq.n	9076 <__aeabi_dsub+0x6a>
    9074:	e1ba      	b.n	93ec <__aeabi_dsub+0x3e0>
    9076:	1a86      	subs	r6, r0, r2
    9078:	4663      	mov	r3, ip
    907a:	42b0      	cmp	r0, r6
    907c:	4180      	sbcs	r0, r0
    907e:	2501      	movs	r5, #1
    9080:	1ac9      	subs	r1, r1, r3
    9082:	4240      	negs	r0, r0
    9084:	1a09      	subs	r1, r1, r0
    9086:	020b      	lsls	r3, r1, #8
    9088:	d400      	bmi.n	908c <__aeabi_dsub+0x80>
    908a:	e147      	b.n	931c <__aeabi_dsub+0x310>
    908c:	0249      	lsls	r1, r1, #9
    908e:	0a4b      	lsrs	r3, r1, #9
    9090:	4698      	mov	r8, r3
    9092:	4643      	mov	r3, r8
    9094:	2b00      	cmp	r3, #0
    9096:	d100      	bne.n	909a <__aeabi_dsub+0x8e>
    9098:	e189      	b.n	93ae <__aeabi_dsub+0x3a2>
    909a:	4640      	mov	r0, r8
    909c:	f000 fc92 	bl	99c4 <__clzsi2>
    90a0:	0003      	movs	r3, r0
    90a2:	3b08      	subs	r3, #8
    90a4:	2b1f      	cmp	r3, #31
    90a6:	dd00      	ble.n	90aa <__aeabi_dsub+0x9e>
    90a8:	e17c      	b.n	93a4 <__aeabi_dsub+0x398>
    90aa:	2220      	movs	r2, #32
    90ac:	0030      	movs	r0, r6
    90ae:	1ad2      	subs	r2, r2, r3
    90b0:	4641      	mov	r1, r8
    90b2:	40d0      	lsrs	r0, r2
    90b4:	4099      	lsls	r1, r3
    90b6:	0002      	movs	r2, r0
    90b8:	409e      	lsls	r6, r3
    90ba:	430a      	orrs	r2, r1
    90bc:	429d      	cmp	r5, r3
    90be:	dd00      	ble.n	90c2 <__aeabi_dsub+0xb6>
    90c0:	e16a      	b.n	9398 <__aeabi_dsub+0x38c>
    90c2:	1b5d      	subs	r5, r3, r5
    90c4:	1c6b      	adds	r3, r5, #1
    90c6:	2b1f      	cmp	r3, #31
    90c8:	dd00      	ble.n	90cc <__aeabi_dsub+0xc0>
    90ca:	e194      	b.n	93f6 <__aeabi_dsub+0x3ea>
    90cc:	2120      	movs	r1, #32
    90ce:	0010      	movs	r0, r2
    90d0:	0035      	movs	r5, r6
    90d2:	1ac9      	subs	r1, r1, r3
    90d4:	408e      	lsls	r6, r1
    90d6:	40da      	lsrs	r2, r3
    90d8:	4088      	lsls	r0, r1
    90da:	40dd      	lsrs	r5, r3
    90dc:	1e71      	subs	r1, r6, #1
    90de:	418e      	sbcs	r6, r1
    90e0:	0011      	movs	r1, r2
    90e2:	2207      	movs	r2, #7
    90e4:	4328      	orrs	r0, r5
    90e6:	2500      	movs	r5, #0
    90e8:	4306      	orrs	r6, r0
    90ea:	4032      	ands	r2, r6
    90ec:	2a00      	cmp	r2, #0
    90ee:	d009      	beq.n	9104 <__aeabi_dsub+0xf8>
    90f0:	230f      	movs	r3, #15
    90f2:	4033      	ands	r3, r6
    90f4:	2b04      	cmp	r3, #4
    90f6:	d005      	beq.n	9104 <__aeabi_dsub+0xf8>
    90f8:	1d33      	adds	r3, r6, #4
    90fa:	42b3      	cmp	r3, r6
    90fc:	41b6      	sbcs	r6, r6
    90fe:	4276      	negs	r6, r6
    9100:	1989      	adds	r1, r1, r6
    9102:	001e      	movs	r6, r3
    9104:	020b      	lsls	r3, r1, #8
    9106:	d400      	bmi.n	910a <__aeabi_dsub+0xfe>
    9108:	e23d      	b.n	9586 <__aeabi_dsub+0x57a>
    910a:	1c6a      	adds	r2, r5, #1
    910c:	4b91      	ldr	r3, [pc, #580]	; (9354 <__aeabi_dsub+0x348>)
    910e:	0555      	lsls	r5, r2, #21
    9110:	0d6d      	lsrs	r5, r5, #21
    9112:	429a      	cmp	r2, r3
    9114:	d100      	bne.n	9118 <__aeabi_dsub+0x10c>
    9116:	e119      	b.n	934c <__aeabi_dsub+0x340>
    9118:	4a8f      	ldr	r2, [pc, #572]	; (9358 <__aeabi_dsub+0x34c>)
    911a:	08f6      	lsrs	r6, r6, #3
    911c:	400a      	ands	r2, r1
    911e:	0757      	lsls	r7, r2, #29
    9120:	0252      	lsls	r2, r2, #9
    9122:	4337      	orrs	r7, r6
    9124:	0b12      	lsrs	r2, r2, #12
    9126:	e09b      	b.n	9260 <__aeabi_dsub+0x254>
    9128:	2e00      	cmp	r6, #0
    912a:	d000      	beq.n	912e <__aeabi_dsub+0x122>
    912c:	e0c5      	b.n	92ba <__aeabi_dsub+0x2ae>
    912e:	1c6e      	adds	r6, r5, #1
    9130:	0576      	lsls	r6, r6, #21
    9132:	0d76      	lsrs	r6, r6, #21
    9134:	2e01      	cmp	r6, #1
    9136:	dc00      	bgt.n	913a <__aeabi_dsub+0x12e>
    9138:	e148      	b.n	93cc <__aeabi_dsub+0x3c0>
    913a:	4667      	mov	r7, ip
    913c:	1a86      	subs	r6, r0, r2
    913e:	1bcb      	subs	r3, r1, r7
    9140:	42b0      	cmp	r0, r6
    9142:	41bf      	sbcs	r7, r7
    9144:	427f      	negs	r7, r7
    9146:	46b8      	mov	r8, r7
    9148:	001f      	movs	r7, r3
    914a:	4643      	mov	r3, r8
    914c:	1aff      	subs	r7, r7, r3
    914e:	003b      	movs	r3, r7
    9150:	46b8      	mov	r8, r7
    9152:	021b      	lsls	r3, r3, #8
    9154:	d500      	bpl.n	9158 <__aeabi_dsub+0x14c>
    9156:	e15f      	b.n	9418 <__aeabi_dsub+0x40c>
    9158:	4337      	orrs	r7, r6
    915a:	d19a      	bne.n	9092 <__aeabi_dsub+0x86>
    915c:	2200      	movs	r2, #0
    915e:	2400      	movs	r4, #0
    9160:	2500      	movs	r5, #0
    9162:	e079      	b.n	9258 <__aeabi_dsub+0x24c>
    9164:	2e00      	cmp	r6, #0
    9166:	dc00      	bgt.n	916a <__aeabi_dsub+0x15e>
    9168:	e0fa      	b.n	9360 <__aeabi_dsub+0x354>
    916a:	2f00      	cmp	r7, #0
    916c:	d100      	bne.n	9170 <__aeabi_dsub+0x164>
    916e:	e08d      	b.n	928c <__aeabi_dsub+0x280>
    9170:	4b78      	ldr	r3, [pc, #480]	; (9354 <__aeabi_dsub+0x348>)
    9172:	429d      	cmp	r5, r3
    9174:	d067      	beq.n	9246 <__aeabi_dsub+0x23a>
    9176:	2380      	movs	r3, #128	; 0x80
    9178:	4667      	mov	r7, ip
    917a:	041b      	lsls	r3, r3, #16
    917c:	431f      	orrs	r7, r3
    917e:	46bc      	mov	ip, r7
    9180:	2e38      	cmp	r6, #56	; 0x38
    9182:	dc00      	bgt.n	9186 <__aeabi_dsub+0x17a>
    9184:	e152      	b.n	942c <__aeabi_dsub+0x420>
    9186:	4663      	mov	r3, ip
    9188:	4313      	orrs	r3, r2
    918a:	1e5a      	subs	r2, r3, #1
    918c:	4193      	sbcs	r3, r2
    918e:	181e      	adds	r6, r3, r0
    9190:	4286      	cmp	r6, r0
    9192:	4180      	sbcs	r0, r0
    9194:	4240      	negs	r0, r0
    9196:	1809      	adds	r1, r1, r0
    9198:	020b      	lsls	r3, r1, #8
    919a:	d400      	bmi.n	919e <__aeabi_dsub+0x192>
    919c:	e0be      	b.n	931c <__aeabi_dsub+0x310>
    919e:	4b6d      	ldr	r3, [pc, #436]	; (9354 <__aeabi_dsub+0x348>)
    91a0:	3501      	adds	r5, #1
    91a2:	429d      	cmp	r5, r3
    91a4:	d100      	bne.n	91a8 <__aeabi_dsub+0x19c>
    91a6:	e0d2      	b.n	934e <__aeabi_dsub+0x342>
    91a8:	4a6b      	ldr	r2, [pc, #428]	; (9358 <__aeabi_dsub+0x34c>)
    91aa:	0873      	lsrs	r3, r6, #1
    91ac:	400a      	ands	r2, r1
    91ae:	2101      	movs	r1, #1
    91b0:	400e      	ands	r6, r1
    91b2:	431e      	orrs	r6, r3
    91b4:	0851      	lsrs	r1, r2, #1
    91b6:	07d3      	lsls	r3, r2, #31
    91b8:	2207      	movs	r2, #7
    91ba:	431e      	orrs	r6, r3
    91bc:	4032      	ands	r2, r6
    91be:	e795      	b.n	90ec <__aeabi_dsub+0xe0>
    91c0:	001e      	movs	r6, r3
    91c2:	4316      	orrs	r6, r2
    91c4:	d000      	beq.n	91c8 <__aeabi_dsub+0x1bc>
    91c6:	e745      	b.n	9054 <__aeabi_dsub+0x48>
    91c8:	e740      	b.n	904c <__aeabi_dsub+0x40>
    91ca:	4b62      	ldr	r3, [pc, #392]	; (9354 <__aeabi_dsub+0x348>)
    91cc:	429d      	cmp	r5, r3
    91ce:	d03a      	beq.n	9246 <__aeabi_dsub+0x23a>
    91d0:	2380      	movs	r3, #128	; 0x80
    91d2:	4667      	mov	r7, ip
    91d4:	041b      	lsls	r3, r3, #16
    91d6:	431f      	orrs	r7, r3
    91d8:	46bc      	mov	ip, r7
    91da:	2e38      	cmp	r6, #56	; 0x38
    91dc:	dd00      	ble.n	91e0 <__aeabi_dsub+0x1d4>
    91de:	e0eb      	b.n	93b8 <__aeabi_dsub+0x3ac>
    91e0:	2e1f      	cmp	r6, #31
    91e2:	dc00      	bgt.n	91e6 <__aeabi_dsub+0x1da>
    91e4:	e13a      	b.n	945c <__aeabi_dsub+0x450>
    91e6:	0033      	movs	r3, r6
    91e8:	4667      	mov	r7, ip
    91ea:	3b20      	subs	r3, #32
    91ec:	40df      	lsrs	r7, r3
    91ee:	003b      	movs	r3, r7
    91f0:	2e20      	cmp	r6, #32
    91f2:	d005      	beq.n	9200 <__aeabi_dsub+0x1f4>
    91f4:	2740      	movs	r7, #64	; 0x40
    91f6:	1bbf      	subs	r7, r7, r6
    91f8:	4666      	mov	r6, ip
    91fa:	40be      	lsls	r6, r7
    91fc:	4332      	orrs	r2, r6
    91fe:	4690      	mov	r8, r2
    9200:	4646      	mov	r6, r8
    9202:	1e72      	subs	r2, r6, #1
    9204:	4196      	sbcs	r6, r2
    9206:	4333      	orrs	r3, r6
    9208:	e0da      	b.n	93c0 <__aeabi_dsub+0x3b4>
    920a:	2b00      	cmp	r3, #0
    920c:	d100      	bne.n	9210 <__aeabi_dsub+0x204>
    920e:	e214      	b.n	963a <__aeabi_dsub+0x62e>
    9210:	4663      	mov	r3, ip
    9212:	4313      	orrs	r3, r2
    9214:	d100      	bne.n	9218 <__aeabi_dsub+0x20c>
    9216:	e168      	b.n	94ea <__aeabi_dsub+0x4de>
    9218:	2380      	movs	r3, #128	; 0x80
    921a:	074e      	lsls	r6, r1, #29
    921c:	08c0      	lsrs	r0, r0, #3
    921e:	08c9      	lsrs	r1, r1, #3
    9220:	031b      	lsls	r3, r3, #12
    9222:	4306      	orrs	r6, r0
    9224:	4219      	tst	r1, r3
    9226:	d008      	beq.n	923a <__aeabi_dsub+0x22e>
    9228:	4660      	mov	r0, ip
    922a:	08c0      	lsrs	r0, r0, #3
    922c:	4218      	tst	r0, r3
    922e:	d104      	bne.n	923a <__aeabi_dsub+0x22e>
    9230:	4663      	mov	r3, ip
    9232:	0001      	movs	r1, r0
    9234:	08d2      	lsrs	r2, r2, #3
    9236:	075e      	lsls	r6, r3, #29
    9238:	4316      	orrs	r6, r2
    923a:	00f3      	lsls	r3, r6, #3
    923c:	4699      	mov	r9, r3
    923e:	00c9      	lsls	r1, r1, #3
    9240:	0f72      	lsrs	r2, r6, #29
    9242:	4d44      	ldr	r5, [pc, #272]	; (9354 <__aeabi_dsub+0x348>)
    9244:	4311      	orrs	r1, r2
    9246:	464b      	mov	r3, r9
    9248:	08de      	lsrs	r6, r3, #3
    924a:	4b42      	ldr	r3, [pc, #264]	; (9354 <__aeabi_dsub+0x348>)
    924c:	074f      	lsls	r7, r1, #29
    924e:	4337      	orrs	r7, r6
    9250:	08ca      	lsrs	r2, r1, #3
    9252:	429d      	cmp	r5, r3
    9254:	d100      	bne.n	9258 <__aeabi_dsub+0x24c>
    9256:	e06e      	b.n	9336 <__aeabi_dsub+0x32a>
    9258:	0312      	lsls	r2, r2, #12
    925a:	056d      	lsls	r5, r5, #21
    925c:	0b12      	lsrs	r2, r2, #12
    925e:	0d6d      	lsrs	r5, r5, #21
    9260:	2100      	movs	r1, #0
    9262:	0312      	lsls	r2, r2, #12
    9264:	0b13      	lsrs	r3, r2, #12
    9266:	0d0a      	lsrs	r2, r1, #20
    9268:	0512      	lsls	r2, r2, #20
    926a:	431a      	orrs	r2, r3
    926c:	4b3b      	ldr	r3, [pc, #236]	; (935c <__aeabi_dsub+0x350>)
    926e:	052d      	lsls	r5, r5, #20
    9270:	4013      	ands	r3, r2
    9272:	432b      	orrs	r3, r5
    9274:	005b      	lsls	r3, r3, #1
    9276:	07e4      	lsls	r4, r4, #31
    9278:	085b      	lsrs	r3, r3, #1
    927a:	4323      	orrs	r3, r4
    927c:	0038      	movs	r0, r7
    927e:	0019      	movs	r1, r3
    9280:	bc3c      	pop	{r2, r3, r4, r5}
    9282:	4690      	mov	r8, r2
    9284:	4699      	mov	r9, r3
    9286:	46a2      	mov	sl, r4
    9288:	46ab      	mov	fp, r5
    928a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    928c:	4663      	mov	r3, ip
    928e:	4313      	orrs	r3, r2
    9290:	d011      	beq.n	92b6 <__aeabi_dsub+0x2aa>
    9292:	1e73      	subs	r3, r6, #1
    9294:	2b00      	cmp	r3, #0
    9296:	d000      	beq.n	929a <__aeabi_dsub+0x28e>
    9298:	e107      	b.n	94aa <__aeabi_dsub+0x49e>
    929a:	1886      	adds	r6, r0, r2
    929c:	4286      	cmp	r6, r0
    929e:	4180      	sbcs	r0, r0
    92a0:	4461      	add	r1, ip
    92a2:	4240      	negs	r0, r0
    92a4:	1809      	adds	r1, r1, r0
    92a6:	2501      	movs	r5, #1
    92a8:	020b      	lsls	r3, r1, #8
    92aa:	d537      	bpl.n	931c <__aeabi_dsub+0x310>
    92ac:	2502      	movs	r5, #2
    92ae:	e77b      	b.n	91a8 <__aeabi_dsub+0x19c>
    92b0:	003e      	movs	r6, r7
    92b2:	4661      	mov	r1, ip
    92b4:	4691      	mov	r9, r2
    92b6:	0035      	movs	r5, r6
    92b8:	e7c5      	b.n	9246 <__aeabi_dsub+0x23a>
    92ba:	465c      	mov	r4, fp
    92bc:	2d00      	cmp	r5, #0
    92be:	d000      	beq.n	92c2 <__aeabi_dsub+0x2b6>
    92c0:	e0e1      	b.n	9486 <__aeabi_dsub+0x47a>
    92c2:	000b      	movs	r3, r1
    92c4:	4303      	orrs	r3, r0
    92c6:	d0f3      	beq.n	92b0 <__aeabi_dsub+0x2a4>
    92c8:	1c73      	adds	r3, r6, #1
    92ca:	d100      	bne.n	92ce <__aeabi_dsub+0x2c2>
    92cc:	e1ac      	b.n	9628 <__aeabi_dsub+0x61c>
    92ce:	4b21      	ldr	r3, [pc, #132]	; (9354 <__aeabi_dsub+0x348>)
    92d0:	429f      	cmp	r7, r3
    92d2:	d100      	bne.n	92d6 <__aeabi_dsub+0x2ca>
    92d4:	e13a      	b.n	954c <__aeabi_dsub+0x540>
    92d6:	43f3      	mvns	r3, r6
    92d8:	2b38      	cmp	r3, #56	; 0x38
    92da:	dd00      	ble.n	92de <__aeabi_dsub+0x2d2>
    92dc:	e16f      	b.n	95be <__aeabi_dsub+0x5b2>
    92de:	2b1f      	cmp	r3, #31
    92e0:	dd00      	ble.n	92e4 <__aeabi_dsub+0x2d8>
    92e2:	e18c      	b.n	95fe <__aeabi_dsub+0x5f2>
    92e4:	2520      	movs	r5, #32
    92e6:	000e      	movs	r6, r1
    92e8:	1aed      	subs	r5, r5, r3
    92ea:	40ae      	lsls	r6, r5
    92ec:	46b0      	mov	r8, r6
    92ee:	0006      	movs	r6, r0
    92f0:	46aa      	mov	sl, r5
    92f2:	40de      	lsrs	r6, r3
    92f4:	4645      	mov	r5, r8
    92f6:	4335      	orrs	r5, r6
    92f8:	002e      	movs	r6, r5
    92fa:	4655      	mov	r5, sl
    92fc:	40d9      	lsrs	r1, r3
    92fe:	40a8      	lsls	r0, r5
    9300:	4663      	mov	r3, ip
    9302:	1e45      	subs	r5, r0, #1
    9304:	41a8      	sbcs	r0, r5
    9306:	1a5b      	subs	r3, r3, r1
    9308:	469c      	mov	ip, r3
    930a:	4330      	orrs	r0, r6
    930c:	1a16      	subs	r6, r2, r0
    930e:	42b2      	cmp	r2, r6
    9310:	4192      	sbcs	r2, r2
    9312:	4663      	mov	r3, ip
    9314:	4252      	negs	r2, r2
    9316:	1a99      	subs	r1, r3, r2
    9318:	003d      	movs	r5, r7
    931a:	e6b4      	b.n	9086 <__aeabi_dsub+0x7a>
    931c:	2207      	movs	r2, #7
    931e:	4032      	ands	r2, r6
    9320:	2a00      	cmp	r2, #0
    9322:	d000      	beq.n	9326 <__aeabi_dsub+0x31a>
    9324:	e6e4      	b.n	90f0 <__aeabi_dsub+0xe4>
    9326:	4b0b      	ldr	r3, [pc, #44]	; (9354 <__aeabi_dsub+0x348>)
    9328:	08f6      	lsrs	r6, r6, #3
    932a:	074f      	lsls	r7, r1, #29
    932c:	4337      	orrs	r7, r6
    932e:	08ca      	lsrs	r2, r1, #3
    9330:	429d      	cmp	r5, r3
    9332:	d000      	beq.n	9336 <__aeabi_dsub+0x32a>
    9334:	e790      	b.n	9258 <__aeabi_dsub+0x24c>
    9336:	003b      	movs	r3, r7
    9338:	4313      	orrs	r3, r2
    933a:	d100      	bne.n	933e <__aeabi_dsub+0x332>
    933c:	e1a6      	b.n	968c <__aeabi_dsub+0x680>
    933e:	2380      	movs	r3, #128	; 0x80
    9340:	031b      	lsls	r3, r3, #12
    9342:	431a      	orrs	r2, r3
    9344:	0312      	lsls	r2, r2, #12
    9346:	0b12      	lsrs	r2, r2, #12
    9348:	4d02      	ldr	r5, [pc, #8]	; (9354 <__aeabi_dsub+0x348>)
    934a:	e789      	b.n	9260 <__aeabi_dsub+0x254>
    934c:	0015      	movs	r5, r2
    934e:	2200      	movs	r2, #0
    9350:	2700      	movs	r7, #0
    9352:	e785      	b.n	9260 <__aeabi_dsub+0x254>
    9354:	000007ff 	.word	0x000007ff
    9358:	ff7fffff 	.word	0xff7fffff
    935c:	800fffff 	.word	0x800fffff
    9360:	2e00      	cmp	r6, #0
    9362:	d000      	beq.n	9366 <__aeabi_dsub+0x35a>
    9364:	e0c7      	b.n	94f6 <__aeabi_dsub+0x4ea>
    9366:	1c6b      	adds	r3, r5, #1
    9368:	055e      	lsls	r6, r3, #21
    936a:	0d76      	lsrs	r6, r6, #21
    936c:	2e01      	cmp	r6, #1
    936e:	dc00      	bgt.n	9372 <__aeabi_dsub+0x366>
    9370:	e0f0      	b.n	9554 <__aeabi_dsub+0x548>
    9372:	4dc8      	ldr	r5, [pc, #800]	; (9694 <__aeabi_dsub+0x688>)
    9374:	42ab      	cmp	r3, r5
    9376:	d100      	bne.n	937a <__aeabi_dsub+0x36e>
    9378:	e0b9      	b.n	94ee <__aeabi_dsub+0x4e2>
    937a:	1885      	adds	r5, r0, r2
    937c:	000a      	movs	r2, r1
    937e:	4285      	cmp	r5, r0
    9380:	4189      	sbcs	r1, r1
    9382:	4462      	add	r2, ip
    9384:	4249      	negs	r1, r1
    9386:	1851      	adds	r1, r2, r1
    9388:	2207      	movs	r2, #7
    938a:	07ce      	lsls	r6, r1, #31
    938c:	086d      	lsrs	r5, r5, #1
    938e:	432e      	orrs	r6, r5
    9390:	0849      	lsrs	r1, r1, #1
    9392:	4032      	ands	r2, r6
    9394:	001d      	movs	r5, r3
    9396:	e6a9      	b.n	90ec <__aeabi_dsub+0xe0>
    9398:	49bf      	ldr	r1, [pc, #764]	; (9698 <__aeabi_dsub+0x68c>)
    939a:	1aed      	subs	r5, r5, r3
    939c:	4011      	ands	r1, r2
    939e:	2207      	movs	r2, #7
    93a0:	4032      	ands	r2, r6
    93a2:	e6a3      	b.n	90ec <__aeabi_dsub+0xe0>
    93a4:	0032      	movs	r2, r6
    93a6:	3828      	subs	r0, #40	; 0x28
    93a8:	4082      	lsls	r2, r0
    93aa:	2600      	movs	r6, #0
    93ac:	e686      	b.n	90bc <__aeabi_dsub+0xb0>
    93ae:	0030      	movs	r0, r6
    93b0:	f000 fb08 	bl	99c4 <__clzsi2>
    93b4:	3020      	adds	r0, #32
    93b6:	e673      	b.n	90a0 <__aeabi_dsub+0x94>
    93b8:	4663      	mov	r3, ip
    93ba:	4313      	orrs	r3, r2
    93bc:	1e5a      	subs	r2, r3, #1
    93be:	4193      	sbcs	r3, r2
    93c0:	1ac6      	subs	r6, r0, r3
    93c2:	42b0      	cmp	r0, r6
    93c4:	4180      	sbcs	r0, r0
    93c6:	4240      	negs	r0, r0
    93c8:	1a09      	subs	r1, r1, r0
    93ca:	e65c      	b.n	9086 <__aeabi_dsub+0x7a>
    93cc:	000e      	movs	r6, r1
    93ce:	4667      	mov	r7, ip
    93d0:	4306      	orrs	r6, r0
    93d2:	4317      	orrs	r7, r2
    93d4:	2d00      	cmp	r5, #0
    93d6:	d15e      	bne.n	9496 <__aeabi_dsub+0x48a>
    93d8:	2e00      	cmp	r6, #0
    93da:	d000      	beq.n	93de <__aeabi_dsub+0x3d2>
    93dc:	e0f3      	b.n	95c6 <__aeabi_dsub+0x5ba>
    93de:	2f00      	cmp	r7, #0
    93e0:	d100      	bne.n	93e4 <__aeabi_dsub+0x3d8>
    93e2:	e11e      	b.n	9622 <__aeabi_dsub+0x616>
    93e4:	465c      	mov	r4, fp
    93e6:	4661      	mov	r1, ip
    93e8:	4691      	mov	r9, r2
    93ea:	e72c      	b.n	9246 <__aeabi_dsub+0x23a>
    93ec:	4fa9      	ldr	r7, [pc, #676]	; (9694 <__aeabi_dsub+0x688>)
    93ee:	42be      	cmp	r6, r7
    93f0:	d07b      	beq.n	94ea <__aeabi_dsub+0x4de>
    93f2:	001e      	movs	r6, r3
    93f4:	e6f1      	b.n	91da <__aeabi_dsub+0x1ce>
    93f6:	0010      	movs	r0, r2
    93f8:	3d1f      	subs	r5, #31
    93fa:	40e8      	lsrs	r0, r5
    93fc:	2b20      	cmp	r3, #32
    93fe:	d003      	beq.n	9408 <__aeabi_dsub+0x3fc>
    9400:	2140      	movs	r1, #64	; 0x40
    9402:	1acb      	subs	r3, r1, r3
    9404:	409a      	lsls	r2, r3
    9406:	4316      	orrs	r6, r2
    9408:	1e73      	subs	r3, r6, #1
    940a:	419e      	sbcs	r6, r3
    940c:	2207      	movs	r2, #7
    940e:	4306      	orrs	r6, r0
    9410:	4032      	ands	r2, r6
    9412:	2100      	movs	r1, #0
    9414:	2500      	movs	r5, #0
    9416:	e783      	b.n	9320 <__aeabi_dsub+0x314>
    9418:	1a16      	subs	r6, r2, r0
    941a:	4663      	mov	r3, ip
    941c:	42b2      	cmp	r2, r6
    941e:	4180      	sbcs	r0, r0
    9420:	1a59      	subs	r1, r3, r1
    9422:	4240      	negs	r0, r0
    9424:	1a0b      	subs	r3, r1, r0
    9426:	4698      	mov	r8, r3
    9428:	465c      	mov	r4, fp
    942a:	e632      	b.n	9092 <__aeabi_dsub+0x86>
    942c:	2e1f      	cmp	r6, #31
    942e:	dd00      	ble.n	9432 <__aeabi_dsub+0x426>
    9430:	e0ab      	b.n	958a <__aeabi_dsub+0x57e>
    9432:	2720      	movs	r7, #32
    9434:	1bbb      	subs	r3, r7, r6
    9436:	469a      	mov	sl, r3
    9438:	4663      	mov	r3, ip
    943a:	4657      	mov	r7, sl
    943c:	40bb      	lsls	r3, r7
    943e:	4699      	mov	r9, r3
    9440:	0013      	movs	r3, r2
    9442:	464f      	mov	r7, r9
    9444:	40f3      	lsrs	r3, r6
    9446:	431f      	orrs	r7, r3
    9448:	003b      	movs	r3, r7
    944a:	4657      	mov	r7, sl
    944c:	40ba      	lsls	r2, r7
    944e:	1e57      	subs	r7, r2, #1
    9450:	41ba      	sbcs	r2, r7
    9452:	4313      	orrs	r3, r2
    9454:	4662      	mov	r2, ip
    9456:	40f2      	lsrs	r2, r6
    9458:	1889      	adds	r1, r1, r2
    945a:	e698      	b.n	918e <__aeabi_dsub+0x182>
    945c:	2720      	movs	r7, #32
    945e:	1bbb      	subs	r3, r7, r6
    9460:	469a      	mov	sl, r3
    9462:	4663      	mov	r3, ip
    9464:	4657      	mov	r7, sl
    9466:	40bb      	lsls	r3, r7
    9468:	4699      	mov	r9, r3
    946a:	0013      	movs	r3, r2
    946c:	464f      	mov	r7, r9
    946e:	40f3      	lsrs	r3, r6
    9470:	431f      	orrs	r7, r3
    9472:	003b      	movs	r3, r7
    9474:	4657      	mov	r7, sl
    9476:	40ba      	lsls	r2, r7
    9478:	1e57      	subs	r7, r2, #1
    947a:	41ba      	sbcs	r2, r7
    947c:	4313      	orrs	r3, r2
    947e:	4662      	mov	r2, ip
    9480:	40f2      	lsrs	r2, r6
    9482:	1a89      	subs	r1, r1, r2
    9484:	e79c      	b.n	93c0 <__aeabi_dsub+0x3b4>
    9486:	4b83      	ldr	r3, [pc, #524]	; (9694 <__aeabi_dsub+0x688>)
    9488:	429f      	cmp	r7, r3
    948a:	d05f      	beq.n	954c <__aeabi_dsub+0x540>
    948c:	2580      	movs	r5, #128	; 0x80
    948e:	042d      	lsls	r5, r5, #16
    9490:	4273      	negs	r3, r6
    9492:	4329      	orrs	r1, r5
    9494:	e720      	b.n	92d8 <__aeabi_dsub+0x2cc>
    9496:	2e00      	cmp	r6, #0
    9498:	d10c      	bne.n	94b4 <__aeabi_dsub+0x4a8>
    949a:	2f00      	cmp	r7, #0
    949c:	d100      	bne.n	94a0 <__aeabi_dsub+0x494>
    949e:	e0d0      	b.n	9642 <__aeabi_dsub+0x636>
    94a0:	465c      	mov	r4, fp
    94a2:	4661      	mov	r1, ip
    94a4:	4691      	mov	r9, r2
    94a6:	4d7b      	ldr	r5, [pc, #492]	; (9694 <__aeabi_dsub+0x688>)
    94a8:	e6cd      	b.n	9246 <__aeabi_dsub+0x23a>
    94aa:	4f7a      	ldr	r7, [pc, #488]	; (9694 <__aeabi_dsub+0x688>)
    94ac:	42be      	cmp	r6, r7
    94ae:	d01c      	beq.n	94ea <__aeabi_dsub+0x4de>
    94b0:	001e      	movs	r6, r3
    94b2:	e665      	b.n	9180 <__aeabi_dsub+0x174>
    94b4:	2f00      	cmp	r7, #0
    94b6:	d018      	beq.n	94ea <__aeabi_dsub+0x4de>
    94b8:	08c0      	lsrs	r0, r0, #3
    94ba:	074e      	lsls	r6, r1, #29
    94bc:	4306      	orrs	r6, r0
    94be:	2080      	movs	r0, #128	; 0x80
    94c0:	08c9      	lsrs	r1, r1, #3
    94c2:	0300      	lsls	r0, r0, #12
    94c4:	4201      	tst	r1, r0
    94c6:	d008      	beq.n	94da <__aeabi_dsub+0x4ce>
    94c8:	4663      	mov	r3, ip
    94ca:	08dc      	lsrs	r4, r3, #3
    94cc:	4204      	tst	r4, r0
    94ce:	d104      	bne.n	94da <__aeabi_dsub+0x4ce>
    94d0:	0021      	movs	r1, r4
    94d2:	46da      	mov	sl, fp
    94d4:	08d2      	lsrs	r2, r2, #3
    94d6:	075e      	lsls	r6, r3, #29
    94d8:	4316      	orrs	r6, r2
    94da:	00f3      	lsls	r3, r6, #3
    94dc:	4699      	mov	r9, r3
    94de:	2401      	movs	r4, #1
    94e0:	4653      	mov	r3, sl
    94e2:	00c9      	lsls	r1, r1, #3
    94e4:	0f72      	lsrs	r2, r6, #29
    94e6:	4311      	orrs	r1, r2
    94e8:	401c      	ands	r4, r3
    94ea:	4d6a      	ldr	r5, [pc, #424]	; (9694 <__aeabi_dsub+0x688>)
    94ec:	e6ab      	b.n	9246 <__aeabi_dsub+0x23a>
    94ee:	001d      	movs	r5, r3
    94f0:	2200      	movs	r2, #0
    94f2:	2700      	movs	r7, #0
    94f4:	e6b4      	b.n	9260 <__aeabi_dsub+0x254>
    94f6:	2d00      	cmp	r5, #0
    94f8:	d159      	bne.n	95ae <__aeabi_dsub+0x5a2>
    94fa:	000b      	movs	r3, r1
    94fc:	4303      	orrs	r3, r0
    94fe:	d100      	bne.n	9502 <__aeabi_dsub+0x4f6>
    9500:	e6d6      	b.n	92b0 <__aeabi_dsub+0x2a4>
    9502:	1c73      	adds	r3, r6, #1
    9504:	d100      	bne.n	9508 <__aeabi_dsub+0x4fc>
    9506:	e0b2      	b.n	966e <__aeabi_dsub+0x662>
    9508:	4b62      	ldr	r3, [pc, #392]	; (9694 <__aeabi_dsub+0x688>)
    950a:	429f      	cmp	r7, r3
    950c:	d01e      	beq.n	954c <__aeabi_dsub+0x540>
    950e:	43f3      	mvns	r3, r6
    9510:	2b38      	cmp	r3, #56	; 0x38
    9512:	dc6f      	bgt.n	95f4 <__aeabi_dsub+0x5e8>
    9514:	2b1f      	cmp	r3, #31
    9516:	dd00      	ble.n	951a <__aeabi_dsub+0x50e>
    9518:	e097      	b.n	964a <__aeabi_dsub+0x63e>
    951a:	2520      	movs	r5, #32
    951c:	000e      	movs	r6, r1
    951e:	1aed      	subs	r5, r5, r3
    9520:	40ae      	lsls	r6, r5
    9522:	46b0      	mov	r8, r6
    9524:	0006      	movs	r6, r0
    9526:	46aa      	mov	sl, r5
    9528:	40de      	lsrs	r6, r3
    952a:	4645      	mov	r5, r8
    952c:	4335      	orrs	r5, r6
    952e:	002e      	movs	r6, r5
    9530:	4655      	mov	r5, sl
    9532:	40a8      	lsls	r0, r5
    9534:	40d9      	lsrs	r1, r3
    9536:	1e45      	subs	r5, r0, #1
    9538:	41a8      	sbcs	r0, r5
    953a:	448c      	add	ip, r1
    953c:	4306      	orrs	r6, r0
    953e:	18b6      	adds	r6, r6, r2
    9540:	4296      	cmp	r6, r2
    9542:	4192      	sbcs	r2, r2
    9544:	4251      	negs	r1, r2
    9546:	4461      	add	r1, ip
    9548:	003d      	movs	r5, r7
    954a:	e625      	b.n	9198 <__aeabi_dsub+0x18c>
    954c:	003d      	movs	r5, r7
    954e:	4661      	mov	r1, ip
    9550:	4691      	mov	r9, r2
    9552:	e678      	b.n	9246 <__aeabi_dsub+0x23a>
    9554:	000b      	movs	r3, r1
    9556:	4303      	orrs	r3, r0
    9558:	2d00      	cmp	r5, #0
    955a:	d000      	beq.n	955e <__aeabi_dsub+0x552>
    955c:	e655      	b.n	920a <__aeabi_dsub+0x1fe>
    955e:	2b00      	cmp	r3, #0
    9560:	d0f5      	beq.n	954e <__aeabi_dsub+0x542>
    9562:	4663      	mov	r3, ip
    9564:	4313      	orrs	r3, r2
    9566:	d100      	bne.n	956a <__aeabi_dsub+0x55e>
    9568:	e66d      	b.n	9246 <__aeabi_dsub+0x23a>
    956a:	1886      	adds	r6, r0, r2
    956c:	4286      	cmp	r6, r0
    956e:	4180      	sbcs	r0, r0
    9570:	4461      	add	r1, ip
    9572:	4240      	negs	r0, r0
    9574:	1809      	adds	r1, r1, r0
    9576:	2200      	movs	r2, #0
    9578:	020b      	lsls	r3, r1, #8
    957a:	d400      	bmi.n	957e <__aeabi_dsub+0x572>
    957c:	e6d0      	b.n	9320 <__aeabi_dsub+0x314>
    957e:	4b46      	ldr	r3, [pc, #280]	; (9698 <__aeabi_dsub+0x68c>)
    9580:	3501      	adds	r5, #1
    9582:	4019      	ands	r1, r3
    9584:	e5b2      	b.n	90ec <__aeabi_dsub+0xe0>
    9586:	46b1      	mov	r9, r6
    9588:	e65d      	b.n	9246 <__aeabi_dsub+0x23a>
    958a:	0033      	movs	r3, r6
    958c:	4667      	mov	r7, ip
    958e:	3b20      	subs	r3, #32
    9590:	40df      	lsrs	r7, r3
    9592:	003b      	movs	r3, r7
    9594:	2e20      	cmp	r6, #32
    9596:	d005      	beq.n	95a4 <__aeabi_dsub+0x598>
    9598:	2740      	movs	r7, #64	; 0x40
    959a:	1bbf      	subs	r7, r7, r6
    959c:	4666      	mov	r6, ip
    959e:	40be      	lsls	r6, r7
    95a0:	4332      	orrs	r2, r6
    95a2:	4690      	mov	r8, r2
    95a4:	4646      	mov	r6, r8
    95a6:	1e72      	subs	r2, r6, #1
    95a8:	4196      	sbcs	r6, r2
    95aa:	4333      	orrs	r3, r6
    95ac:	e5ef      	b.n	918e <__aeabi_dsub+0x182>
    95ae:	4b39      	ldr	r3, [pc, #228]	; (9694 <__aeabi_dsub+0x688>)
    95b0:	429f      	cmp	r7, r3
    95b2:	d0cb      	beq.n	954c <__aeabi_dsub+0x540>
    95b4:	2580      	movs	r5, #128	; 0x80
    95b6:	042d      	lsls	r5, r5, #16
    95b8:	4273      	negs	r3, r6
    95ba:	4329      	orrs	r1, r5
    95bc:	e7a8      	b.n	9510 <__aeabi_dsub+0x504>
    95be:	4308      	orrs	r0, r1
    95c0:	1e41      	subs	r1, r0, #1
    95c2:	4188      	sbcs	r0, r1
    95c4:	e6a2      	b.n	930c <__aeabi_dsub+0x300>
    95c6:	2f00      	cmp	r7, #0
    95c8:	d100      	bne.n	95cc <__aeabi_dsub+0x5c0>
    95ca:	e63c      	b.n	9246 <__aeabi_dsub+0x23a>
    95cc:	4663      	mov	r3, ip
    95ce:	1a86      	subs	r6, r0, r2
    95d0:	1acf      	subs	r7, r1, r3
    95d2:	42b0      	cmp	r0, r6
    95d4:	419b      	sbcs	r3, r3
    95d6:	425b      	negs	r3, r3
    95d8:	1afb      	subs	r3, r7, r3
    95da:	4698      	mov	r8, r3
    95dc:	021b      	lsls	r3, r3, #8
    95de:	d54e      	bpl.n	967e <__aeabi_dsub+0x672>
    95e0:	1a16      	subs	r6, r2, r0
    95e2:	4663      	mov	r3, ip
    95e4:	42b2      	cmp	r2, r6
    95e6:	4192      	sbcs	r2, r2
    95e8:	1a59      	subs	r1, r3, r1
    95ea:	4252      	negs	r2, r2
    95ec:	1a89      	subs	r1, r1, r2
    95ee:	465c      	mov	r4, fp
    95f0:	2200      	movs	r2, #0
    95f2:	e57b      	b.n	90ec <__aeabi_dsub+0xe0>
    95f4:	4301      	orrs	r1, r0
    95f6:	000e      	movs	r6, r1
    95f8:	1e71      	subs	r1, r6, #1
    95fa:	418e      	sbcs	r6, r1
    95fc:	e79f      	b.n	953e <__aeabi_dsub+0x532>
    95fe:	001d      	movs	r5, r3
    9600:	000e      	movs	r6, r1
    9602:	3d20      	subs	r5, #32
    9604:	40ee      	lsrs	r6, r5
    9606:	46b0      	mov	r8, r6
    9608:	2b20      	cmp	r3, #32
    960a:	d004      	beq.n	9616 <__aeabi_dsub+0x60a>
    960c:	2540      	movs	r5, #64	; 0x40
    960e:	1aeb      	subs	r3, r5, r3
    9610:	4099      	lsls	r1, r3
    9612:	4308      	orrs	r0, r1
    9614:	4681      	mov	r9, r0
    9616:	4648      	mov	r0, r9
    9618:	4643      	mov	r3, r8
    961a:	1e41      	subs	r1, r0, #1
    961c:	4188      	sbcs	r0, r1
    961e:	4318      	orrs	r0, r3
    9620:	e674      	b.n	930c <__aeabi_dsub+0x300>
    9622:	2200      	movs	r2, #0
    9624:	2400      	movs	r4, #0
    9626:	e617      	b.n	9258 <__aeabi_dsub+0x24c>
    9628:	1a16      	subs	r6, r2, r0
    962a:	4663      	mov	r3, ip
    962c:	42b2      	cmp	r2, r6
    962e:	4192      	sbcs	r2, r2
    9630:	1a59      	subs	r1, r3, r1
    9632:	4252      	negs	r2, r2
    9634:	1a89      	subs	r1, r1, r2
    9636:	003d      	movs	r5, r7
    9638:	e525      	b.n	9086 <__aeabi_dsub+0x7a>
    963a:	4661      	mov	r1, ip
    963c:	4691      	mov	r9, r2
    963e:	4d15      	ldr	r5, [pc, #84]	; (9694 <__aeabi_dsub+0x688>)
    9640:	e601      	b.n	9246 <__aeabi_dsub+0x23a>
    9642:	2280      	movs	r2, #128	; 0x80
    9644:	2400      	movs	r4, #0
    9646:	0312      	lsls	r2, r2, #12
    9648:	e679      	b.n	933e <__aeabi_dsub+0x332>
    964a:	001d      	movs	r5, r3
    964c:	000e      	movs	r6, r1
    964e:	3d20      	subs	r5, #32
    9650:	40ee      	lsrs	r6, r5
    9652:	46b0      	mov	r8, r6
    9654:	2b20      	cmp	r3, #32
    9656:	d004      	beq.n	9662 <__aeabi_dsub+0x656>
    9658:	2540      	movs	r5, #64	; 0x40
    965a:	1aeb      	subs	r3, r5, r3
    965c:	4099      	lsls	r1, r3
    965e:	4308      	orrs	r0, r1
    9660:	4681      	mov	r9, r0
    9662:	464e      	mov	r6, r9
    9664:	4643      	mov	r3, r8
    9666:	1e71      	subs	r1, r6, #1
    9668:	418e      	sbcs	r6, r1
    966a:	431e      	orrs	r6, r3
    966c:	e767      	b.n	953e <__aeabi_dsub+0x532>
    966e:	1886      	adds	r6, r0, r2
    9670:	4296      	cmp	r6, r2
    9672:	419b      	sbcs	r3, r3
    9674:	4461      	add	r1, ip
    9676:	425b      	negs	r3, r3
    9678:	18c9      	adds	r1, r1, r3
    967a:	003d      	movs	r5, r7
    967c:	e58c      	b.n	9198 <__aeabi_dsub+0x18c>
    967e:	4647      	mov	r7, r8
    9680:	4337      	orrs	r7, r6
    9682:	d0ce      	beq.n	9622 <__aeabi_dsub+0x616>
    9684:	2207      	movs	r2, #7
    9686:	4641      	mov	r1, r8
    9688:	4032      	ands	r2, r6
    968a:	e649      	b.n	9320 <__aeabi_dsub+0x314>
    968c:	2700      	movs	r7, #0
    968e:	003a      	movs	r2, r7
    9690:	e5e6      	b.n	9260 <__aeabi_dsub+0x254>
    9692:	46c0      	nop			; (mov r8, r8)
    9694:	000007ff 	.word	0x000007ff
    9698:	ff7fffff 	.word	0xff7fffff

0000969c <__aeabi_dcmpun>:
__aeabi_dcmpun():
    969c:	b570      	push	{r4, r5, r6, lr}
    969e:	4e0c      	ldr	r6, [pc, #48]	; (96d0 <__aeabi_dcmpun+0x34>)
    96a0:	030d      	lsls	r5, r1, #12
    96a2:	031c      	lsls	r4, r3, #12
    96a4:	0049      	lsls	r1, r1, #1
    96a6:	005b      	lsls	r3, r3, #1
    96a8:	0b2d      	lsrs	r5, r5, #12
    96aa:	0d49      	lsrs	r1, r1, #21
    96ac:	0b24      	lsrs	r4, r4, #12
    96ae:	0d5b      	lsrs	r3, r3, #21
    96b0:	42b1      	cmp	r1, r6
    96b2:	d008      	beq.n	96c6 <__aeabi_dcmpun+0x2a>
    96b4:	4906      	ldr	r1, [pc, #24]	; (96d0 <__aeabi_dcmpun+0x34>)
    96b6:	2000      	movs	r0, #0
    96b8:	428b      	cmp	r3, r1
    96ba:	d103      	bne.n	96c4 <__aeabi_dcmpun+0x28>
    96bc:	4314      	orrs	r4, r2
    96be:	0020      	movs	r0, r4
    96c0:	1e44      	subs	r4, r0, #1
    96c2:	41a0      	sbcs	r0, r4
    96c4:	bd70      	pop	{r4, r5, r6, pc}
    96c6:	4305      	orrs	r5, r0
    96c8:	2001      	movs	r0, #1
    96ca:	2d00      	cmp	r5, #0
    96cc:	d1fa      	bne.n	96c4 <__aeabi_dcmpun+0x28>
    96ce:	e7f1      	b.n	96b4 <__aeabi_dcmpun+0x18>
    96d0:	000007ff 	.word	0x000007ff

000096d4 <__aeabi_d2iz>:
__aeabi_d2iz():
    96d4:	b530      	push	{r4, r5, lr}
    96d6:	4d14      	ldr	r5, [pc, #80]	; (9728 <__aeabi_d2iz+0x54>)
    96d8:	030a      	lsls	r2, r1, #12
    96da:	004b      	lsls	r3, r1, #1
    96dc:	0b12      	lsrs	r2, r2, #12
    96de:	0d5b      	lsrs	r3, r3, #21
    96e0:	0fc9      	lsrs	r1, r1, #31
    96e2:	2400      	movs	r4, #0
    96e4:	42ab      	cmp	r3, r5
    96e6:	dd11      	ble.n	970c <__aeabi_d2iz+0x38>
    96e8:	4c10      	ldr	r4, [pc, #64]	; (972c <__aeabi_d2iz+0x58>)
    96ea:	42a3      	cmp	r3, r4
    96ec:	dc10      	bgt.n	9710 <__aeabi_d2iz+0x3c>
    96ee:	2480      	movs	r4, #128	; 0x80
    96f0:	0364      	lsls	r4, r4, #13
    96f2:	4322      	orrs	r2, r4
    96f4:	4c0e      	ldr	r4, [pc, #56]	; (9730 <__aeabi_d2iz+0x5c>)
    96f6:	1ae4      	subs	r4, r4, r3
    96f8:	2c1f      	cmp	r4, #31
    96fa:	dd0c      	ble.n	9716 <__aeabi_d2iz+0x42>
    96fc:	480d      	ldr	r0, [pc, #52]	; (9734 <__aeabi_d2iz+0x60>)
    96fe:	1ac3      	subs	r3, r0, r3
    9700:	40da      	lsrs	r2, r3
    9702:	0013      	movs	r3, r2
    9704:	425c      	negs	r4, r3
    9706:	2900      	cmp	r1, #0
    9708:	d100      	bne.n	970c <__aeabi_d2iz+0x38>
    970a:	001c      	movs	r4, r3
    970c:	0020      	movs	r0, r4
    970e:	bd30      	pop	{r4, r5, pc}
    9710:	4b09      	ldr	r3, [pc, #36]	; (9738 <__aeabi_d2iz+0x64>)
    9712:	18cc      	adds	r4, r1, r3
    9714:	e7fa      	b.n	970c <__aeabi_d2iz+0x38>
    9716:	4d09      	ldr	r5, [pc, #36]	; (973c <__aeabi_d2iz+0x68>)
    9718:	40e0      	lsrs	r0, r4
    971a:	46ac      	mov	ip, r5
    971c:	4463      	add	r3, ip
    971e:	409a      	lsls	r2, r3
    9720:	0013      	movs	r3, r2
    9722:	4303      	orrs	r3, r0
    9724:	e7ee      	b.n	9704 <__aeabi_d2iz+0x30>
    9726:	46c0      	nop			; (mov r8, r8)
    9728:	000003fe 	.word	0x000003fe
    972c:	0000041d 	.word	0x0000041d
    9730:	00000433 	.word	0x00000433
    9734:	00000413 	.word	0x00000413
    9738:	7fffffff 	.word	0x7fffffff
    973c:	fffffbed 	.word	0xfffffbed

00009740 <__aeabi_i2d>:
__aeabi_i2d():
    9740:	b570      	push	{r4, r5, r6, lr}
    9742:	2800      	cmp	r0, #0
    9744:	d02d      	beq.n	97a2 <__aeabi_i2d+0x62>
    9746:	17c3      	asrs	r3, r0, #31
    9748:	18c5      	adds	r5, r0, r3
    974a:	405d      	eors	r5, r3
    974c:	0fc4      	lsrs	r4, r0, #31
    974e:	0028      	movs	r0, r5
    9750:	f000 f938 	bl	99c4 <__clzsi2>
    9754:	4b15      	ldr	r3, [pc, #84]	; (97ac <__aeabi_i2d+0x6c>)
    9756:	1a1b      	subs	r3, r3, r0
    9758:	055b      	lsls	r3, r3, #21
    975a:	0d5b      	lsrs	r3, r3, #21
    975c:	280a      	cmp	r0, #10
    975e:	dd15      	ble.n	978c <__aeabi_i2d+0x4c>
    9760:	380b      	subs	r0, #11
    9762:	4085      	lsls	r5, r0
    9764:	2200      	movs	r2, #0
    9766:	032d      	lsls	r5, r5, #12
    9768:	0b2d      	lsrs	r5, r5, #12
    976a:	2100      	movs	r1, #0
    976c:	0010      	movs	r0, r2
    976e:	032d      	lsls	r5, r5, #12
    9770:	0d0a      	lsrs	r2, r1, #20
    9772:	0b2d      	lsrs	r5, r5, #12
    9774:	0512      	lsls	r2, r2, #20
    9776:	432a      	orrs	r2, r5
    9778:	4d0d      	ldr	r5, [pc, #52]	; (97b0 <__aeabi_i2d+0x70>)
    977a:	051b      	lsls	r3, r3, #20
    977c:	402a      	ands	r2, r5
    977e:	4313      	orrs	r3, r2
    9780:	005b      	lsls	r3, r3, #1
    9782:	07e4      	lsls	r4, r4, #31
    9784:	085b      	lsrs	r3, r3, #1
    9786:	4323      	orrs	r3, r4
    9788:	0019      	movs	r1, r3
    978a:	bd70      	pop	{r4, r5, r6, pc}
    978c:	0002      	movs	r2, r0
    978e:	0029      	movs	r1, r5
    9790:	3215      	adds	r2, #21
    9792:	4091      	lsls	r1, r2
    9794:	000a      	movs	r2, r1
    9796:	210b      	movs	r1, #11
    9798:	1a08      	subs	r0, r1, r0
    979a:	40c5      	lsrs	r5, r0
    979c:	032d      	lsls	r5, r5, #12
    979e:	0b2d      	lsrs	r5, r5, #12
    97a0:	e7e3      	b.n	976a <__aeabi_i2d+0x2a>
    97a2:	2400      	movs	r4, #0
    97a4:	2300      	movs	r3, #0
    97a6:	2500      	movs	r5, #0
    97a8:	2200      	movs	r2, #0
    97aa:	e7de      	b.n	976a <__aeabi_i2d+0x2a>
    97ac:	0000041e 	.word	0x0000041e
    97b0:	800fffff 	.word	0x800fffff

000097b4 <__aeabi_ui2d>:
__aeabi_ui2d():
    97b4:	b510      	push	{r4, lr}
    97b6:	1e04      	subs	r4, r0, #0
    97b8:	d025      	beq.n	9806 <__aeabi_ui2d+0x52>
    97ba:	f000 f903 	bl	99c4 <__clzsi2>
    97be:	4b14      	ldr	r3, [pc, #80]	; (9810 <__aeabi_ui2d+0x5c>)
    97c0:	1a1b      	subs	r3, r3, r0
    97c2:	055b      	lsls	r3, r3, #21
    97c4:	0d5b      	lsrs	r3, r3, #21
    97c6:	280a      	cmp	r0, #10
    97c8:	dd12      	ble.n	97f0 <__aeabi_ui2d+0x3c>
    97ca:	380b      	subs	r0, #11
    97cc:	4084      	lsls	r4, r0
    97ce:	2200      	movs	r2, #0
    97d0:	0324      	lsls	r4, r4, #12
    97d2:	0b24      	lsrs	r4, r4, #12
    97d4:	2100      	movs	r1, #0
    97d6:	0010      	movs	r0, r2
    97d8:	0324      	lsls	r4, r4, #12
    97da:	0d0a      	lsrs	r2, r1, #20
    97dc:	0b24      	lsrs	r4, r4, #12
    97de:	0512      	lsls	r2, r2, #20
    97e0:	4322      	orrs	r2, r4
    97e2:	4c0c      	ldr	r4, [pc, #48]	; (9814 <__aeabi_ui2d+0x60>)
    97e4:	051b      	lsls	r3, r3, #20
    97e6:	4022      	ands	r2, r4
    97e8:	4313      	orrs	r3, r2
    97ea:	005b      	lsls	r3, r3, #1
    97ec:	0859      	lsrs	r1, r3, #1
    97ee:	bd10      	pop	{r4, pc}
    97f0:	0002      	movs	r2, r0
    97f2:	0021      	movs	r1, r4
    97f4:	3215      	adds	r2, #21
    97f6:	4091      	lsls	r1, r2
    97f8:	000a      	movs	r2, r1
    97fa:	210b      	movs	r1, #11
    97fc:	1a08      	subs	r0, r1, r0
    97fe:	40c4      	lsrs	r4, r0
    9800:	0324      	lsls	r4, r4, #12
    9802:	0b24      	lsrs	r4, r4, #12
    9804:	e7e6      	b.n	97d4 <__aeabi_ui2d+0x20>
    9806:	2300      	movs	r3, #0
    9808:	2400      	movs	r4, #0
    980a:	2200      	movs	r2, #0
    980c:	e7e2      	b.n	97d4 <__aeabi_ui2d+0x20>
    980e:	46c0      	nop			; (mov r8, r8)
    9810:	0000041e 	.word	0x0000041e
    9814:	800fffff 	.word	0x800fffff

00009818 <__aeabi_f2d>:
__aeabi_f2d():
    9818:	0041      	lsls	r1, r0, #1
    981a:	0e09      	lsrs	r1, r1, #24
    981c:	1c4b      	adds	r3, r1, #1
    981e:	b570      	push	{r4, r5, r6, lr}
    9820:	b2db      	uxtb	r3, r3
    9822:	0246      	lsls	r6, r0, #9
    9824:	0a75      	lsrs	r5, r6, #9
    9826:	0fc4      	lsrs	r4, r0, #31
    9828:	2b01      	cmp	r3, #1
    982a:	dd14      	ble.n	9856 <__aeabi_f2d+0x3e>
    982c:	23e0      	movs	r3, #224	; 0xe0
    982e:	009b      	lsls	r3, r3, #2
    9830:	076d      	lsls	r5, r5, #29
    9832:	0b36      	lsrs	r6, r6, #12
    9834:	18cb      	adds	r3, r1, r3
    9836:	2100      	movs	r1, #0
    9838:	0d0a      	lsrs	r2, r1, #20
    983a:	0028      	movs	r0, r5
    983c:	0512      	lsls	r2, r2, #20
    983e:	4d1c      	ldr	r5, [pc, #112]	; (98b0 <__aeabi_f2d+0x98>)
    9840:	4332      	orrs	r2, r6
    9842:	055b      	lsls	r3, r3, #21
    9844:	402a      	ands	r2, r5
    9846:	085b      	lsrs	r3, r3, #1
    9848:	4313      	orrs	r3, r2
    984a:	005b      	lsls	r3, r3, #1
    984c:	07e4      	lsls	r4, r4, #31
    984e:	085b      	lsrs	r3, r3, #1
    9850:	4323      	orrs	r3, r4
    9852:	0019      	movs	r1, r3
    9854:	bd70      	pop	{r4, r5, r6, pc}
    9856:	2900      	cmp	r1, #0
    9858:	d114      	bne.n	9884 <__aeabi_f2d+0x6c>
    985a:	2d00      	cmp	r5, #0
    985c:	d01e      	beq.n	989c <__aeabi_f2d+0x84>
    985e:	0028      	movs	r0, r5
    9860:	f000 f8b0 	bl	99c4 <__clzsi2>
    9864:	280a      	cmp	r0, #10
    9866:	dc1c      	bgt.n	98a2 <__aeabi_f2d+0x8a>
    9868:	230b      	movs	r3, #11
    986a:	002a      	movs	r2, r5
    986c:	1a1b      	subs	r3, r3, r0
    986e:	40da      	lsrs	r2, r3
    9870:	0003      	movs	r3, r0
    9872:	3315      	adds	r3, #21
    9874:	409d      	lsls	r5, r3
    9876:	4b0f      	ldr	r3, [pc, #60]	; (98b4 <__aeabi_f2d+0x9c>)
    9878:	0312      	lsls	r2, r2, #12
    987a:	1a1b      	subs	r3, r3, r0
    987c:	055b      	lsls	r3, r3, #21
    987e:	0b16      	lsrs	r6, r2, #12
    9880:	0d5b      	lsrs	r3, r3, #21
    9882:	e7d8      	b.n	9836 <__aeabi_f2d+0x1e>
    9884:	2d00      	cmp	r5, #0
    9886:	d006      	beq.n	9896 <__aeabi_f2d+0x7e>
    9888:	0b32      	lsrs	r2, r6, #12
    988a:	2680      	movs	r6, #128	; 0x80
    988c:	0336      	lsls	r6, r6, #12
    988e:	076d      	lsls	r5, r5, #29
    9890:	4316      	orrs	r6, r2
    9892:	4b09      	ldr	r3, [pc, #36]	; (98b8 <__aeabi_f2d+0xa0>)
    9894:	e7cf      	b.n	9836 <__aeabi_f2d+0x1e>
    9896:	4b08      	ldr	r3, [pc, #32]	; (98b8 <__aeabi_f2d+0xa0>)
    9898:	2600      	movs	r6, #0
    989a:	e7cc      	b.n	9836 <__aeabi_f2d+0x1e>
    989c:	2300      	movs	r3, #0
    989e:	2600      	movs	r6, #0
    98a0:	e7c9      	b.n	9836 <__aeabi_f2d+0x1e>
    98a2:	0003      	movs	r3, r0
    98a4:	002a      	movs	r2, r5
    98a6:	3b0b      	subs	r3, #11
    98a8:	409a      	lsls	r2, r3
    98aa:	2500      	movs	r5, #0
    98ac:	e7e3      	b.n	9876 <__aeabi_f2d+0x5e>
    98ae:	46c0      	nop			; (mov r8, r8)
    98b0:	800fffff 	.word	0x800fffff
    98b4:	00000389 	.word	0x00000389
    98b8:	000007ff 	.word	0x000007ff

000098bc <__aeabi_d2f>:
__aeabi_d2f():
    98bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    98be:	004c      	lsls	r4, r1, #1
    98c0:	0d64      	lsrs	r4, r4, #21
    98c2:	030b      	lsls	r3, r1, #12
    98c4:	1c62      	adds	r2, r4, #1
    98c6:	0a5b      	lsrs	r3, r3, #9
    98c8:	0f46      	lsrs	r6, r0, #29
    98ca:	0552      	lsls	r2, r2, #21
    98cc:	0fc9      	lsrs	r1, r1, #31
    98ce:	431e      	orrs	r6, r3
    98d0:	00c5      	lsls	r5, r0, #3
    98d2:	0d52      	lsrs	r2, r2, #21
    98d4:	2a01      	cmp	r2, #1
    98d6:	dd29      	ble.n	992c <__aeabi_d2f+0x70>
    98d8:	4b37      	ldr	r3, [pc, #220]	; (99b8 <__aeabi_d2f+0xfc>)
    98da:	18e7      	adds	r7, r4, r3
    98dc:	2ffe      	cmp	r7, #254	; 0xfe
    98de:	dc1c      	bgt.n	991a <__aeabi_d2f+0x5e>
    98e0:	2f00      	cmp	r7, #0
    98e2:	dd3b      	ble.n	995c <__aeabi_d2f+0xa0>
    98e4:	0180      	lsls	r0, r0, #6
    98e6:	1e43      	subs	r3, r0, #1
    98e8:	4198      	sbcs	r0, r3
    98ea:	2207      	movs	r2, #7
    98ec:	00f3      	lsls	r3, r6, #3
    98ee:	0f6d      	lsrs	r5, r5, #29
    98f0:	4303      	orrs	r3, r0
    98f2:	432b      	orrs	r3, r5
    98f4:	401a      	ands	r2, r3
    98f6:	2a00      	cmp	r2, #0
    98f8:	d004      	beq.n	9904 <__aeabi_d2f+0x48>
    98fa:	220f      	movs	r2, #15
    98fc:	401a      	ands	r2, r3
    98fe:	2a04      	cmp	r2, #4
    9900:	d000      	beq.n	9904 <__aeabi_d2f+0x48>
    9902:	3304      	adds	r3, #4
    9904:	2280      	movs	r2, #128	; 0x80
    9906:	04d2      	lsls	r2, r2, #19
    9908:	401a      	ands	r2, r3
    990a:	d024      	beq.n	9956 <__aeabi_d2f+0x9a>
    990c:	3701      	adds	r7, #1
    990e:	b2fa      	uxtb	r2, r7
    9910:	2fff      	cmp	r7, #255	; 0xff
    9912:	d002      	beq.n	991a <__aeabi_d2f+0x5e>
    9914:	019b      	lsls	r3, r3, #6
    9916:	0a58      	lsrs	r0, r3, #9
    9918:	e001      	b.n	991e <__aeabi_d2f+0x62>
    991a:	22ff      	movs	r2, #255	; 0xff
    991c:	2000      	movs	r0, #0
    991e:	0240      	lsls	r0, r0, #9
    9920:	05d2      	lsls	r2, r2, #23
    9922:	0a40      	lsrs	r0, r0, #9
    9924:	07c9      	lsls	r1, r1, #31
    9926:	4310      	orrs	r0, r2
    9928:	4308      	orrs	r0, r1
    992a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    992c:	4335      	orrs	r5, r6
    992e:	2c00      	cmp	r4, #0
    9930:	d104      	bne.n	993c <__aeabi_d2f+0x80>
    9932:	2d00      	cmp	r5, #0
    9934:	d10a      	bne.n	994c <__aeabi_d2f+0x90>
    9936:	2200      	movs	r2, #0
    9938:	2000      	movs	r0, #0
    993a:	e7f0      	b.n	991e <__aeabi_d2f+0x62>
    993c:	2d00      	cmp	r5, #0
    993e:	d0ec      	beq.n	991a <__aeabi_d2f+0x5e>
    9940:	2080      	movs	r0, #128	; 0x80
    9942:	03c0      	lsls	r0, r0, #15
    9944:	4330      	orrs	r0, r6
    9946:	22ff      	movs	r2, #255	; 0xff
    9948:	e7e9      	b.n	991e <__aeabi_d2f+0x62>
    994a:	2400      	movs	r4, #0
    994c:	2300      	movs	r3, #0
    994e:	025b      	lsls	r3, r3, #9
    9950:	0a58      	lsrs	r0, r3, #9
    9952:	b2e2      	uxtb	r2, r4
    9954:	e7e3      	b.n	991e <__aeabi_d2f+0x62>
    9956:	08db      	lsrs	r3, r3, #3
    9958:	003c      	movs	r4, r7
    995a:	e7f8      	b.n	994e <__aeabi_d2f+0x92>
    995c:	003b      	movs	r3, r7
    995e:	3317      	adds	r3, #23
    9960:	dbf3      	blt.n	994a <__aeabi_d2f+0x8e>
    9962:	2380      	movs	r3, #128	; 0x80
    9964:	041b      	lsls	r3, r3, #16
    9966:	4333      	orrs	r3, r6
    9968:	261e      	movs	r6, #30
    996a:	1bf6      	subs	r6, r6, r7
    996c:	2e1f      	cmp	r6, #31
    996e:	dd14      	ble.n	999a <__aeabi_d2f+0xde>
    9970:	2202      	movs	r2, #2
    9972:	4252      	negs	r2, r2
    9974:	1bd7      	subs	r7, r2, r7
    9976:	001a      	movs	r2, r3
    9978:	40fa      	lsrs	r2, r7
    997a:	0017      	movs	r7, r2
    997c:	2e20      	cmp	r6, #32
    997e:	d004      	beq.n	998a <__aeabi_d2f+0xce>
    9980:	4a0e      	ldr	r2, [pc, #56]	; (99bc <__aeabi_d2f+0x100>)
    9982:	4694      	mov	ip, r2
    9984:	4464      	add	r4, ip
    9986:	40a3      	lsls	r3, r4
    9988:	431d      	orrs	r5, r3
    998a:	002b      	movs	r3, r5
    998c:	1e5d      	subs	r5, r3, #1
    998e:	41ab      	sbcs	r3, r5
    9990:	2207      	movs	r2, #7
    9992:	433b      	orrs	r3, r7
    9994:	401a      	ands	r2, r3
    9996:	2700      	movs	r7, #0
    9998:	e7ad      	b.n	98f6 <__aeabi_d2f+0x3a>
    999a:	4a09      	ldr	r2, [pc, #36]	; (99c0 <__aeabi_d2f+0x104>)
    999c:	0028      	movs	r0, r5
    999e:	18a2      	adds	r2, r4, r2
    99a0:	4095      	lsls	r5, r2
    99a2:	4093      	lsls	r3, r2
    99a4:	1e6c      	subs	r4, r5, #1
    99a6:	41a5      	sbcs	r5, r4
    99a8:	40f0      	lsrs	r0, r6
    99aa:	2207      	movs	r2, #7
    99ac:	432b      	orrs	r3, r5
    99ae:	4303      	orrs	r3, r0
    99b0:	401a      	ands	r2, r3
    99b2:	2700      	movs	r7, #0
    99b4:	e79f      	b.n	98f6 <__aeabi_d2f+0x3a>
    99b6:	46c0      	nop			; (mov r8, r8)
    99b8:	fffffc80 	.word	0xfffffc80
    99bc:	fffffca2 	.word	0xfffffca2
    99c0:	fffffc82 	.word	0xfffffc82

000099c4 <__clzsi2>:
__clzsi2():
    99c4:	211c      	movs	r1, #28
    99c6:	2301      	movs	r3, #1
    99c8:	041b      	lsls	r3, r3, #16
    99ca:	4298      	cmp	r0, r3
    99cc:	d301      	bcc.n	99d2 <__clzsi2+0xe>
    99ce:	0c00      	lsrs	r0, r0, #16
    99d0:	3910      	subs	r1, #16
    99d2:	0a1b      	lsrs	r3, r3, #8
    99d4:	4298      	cmp	r0, r3
    99d6:	d301      	bcc.n	99dc <__clzsi2+0x18>
    99d8:	0a00      	lsrs	r0, r0, #8
    99da:	3908      	subs	r1, #8
    99dc:	091b      	lsrs	r3, r3, #4
    99de:	4298      	cmp	r0, r3
    99e0:	d301      	bcc.n	99e6 <__clzsi2+0x22>
    99e2:	0900      	lsrs	r0, r0, #4
    99e4:	3904      	subs	r1, #4
    99e6:	a202      	add	r2, pc, #8	; (adr r2, 99f0 <__clzsi2+0x2c>)
    99e8:	5c10      	ldrb	r0, [r2, r0]
    99ea:	1840      	adds	r0, r0, r1
    99ec:	4770      	bx	lr
    99ee:	46c0      	nop			; (mov r8, r8)
    99f0:	02020304 	.word	0x02020304
    99f4:	01010101 	.word	0x01010101
	...

00009a00 <__clzdi2>:
__clzdi2():
    9a00:	b510      	push	{r4, lr}
    9a02:	2900      	cmp	r1, #0
    9a04:	d103      	bne.n	9a0e <__clzdi2+0xe>
    9a06:	f7ff ffdd 	bl	99c4 <__clzsi2>
    9a0a:	3020      	adds	r0, #32
    9a0c:	e002      	b.n	9a14 <__clzdi2+0x14>
    9a0e:	1c08      	adds	r0, r1, #0
    9a10:	f7ff ffd8 	bl	99c4 <__clzsi2>
    9a14:	bd10      	pop	{r4, pc}
    9a16:	46c0      	nop			; (mov r8, r8)

00009a18 <strlen>:
strlen():
    9a18:	2300      	movs	r3, #0
    9a1a:	5cc2      	ldrb	r2, [r0, r3]
    9a1c:	3301      	adds	r3, #1
    9a1e:	2a00      	cmp	r2, #0
    9a20:	d1fb      	bne.n	9a1a <strlen+0x2>
    9a22:	1e58      	subs	r0, r3, #1
    9a24:	4770      	bx	lr
	...

00009a28 <adc_read_inner>:
adc_read_inner():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:117
//============================================================================
uint16_t adc_read_inner(uint8_t channel)
{
    uint16_t ADCResult = 0;
    //设置SC1A寄存器通道号
    ADC0_SC1A = ADC_SC1_ADCH(channel);        
    9a28:	231f      	movs	r3, #31
    9a2a:	4018      	ands	r0, r3
    9a2c:	4b06      	ldr	r3, [pc, #24]	; (9a48 <adc_read_inner+0x20>)
    9a2e:	6018      	str	r0, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:119 (discriminator 1)
    //等待转换完成
    while(!(ADC0_SC1A & ADC_SC1_COCO_MASK));
    9a30:	4b05      	ldr	r3, [pc, #20]	; (9a48 <adc_read_inner+0x20>)
    9a32:	681b      	ldr	r3, [r3, #0]
    9a34:	061b      	lsls	r3, r3, #24
    9a36:	d5fb      	bpl.n	9a30 <adc_read_inner+0x8>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:121
    //读取转换结果
    ADCResult = (uint16_t)ADC0_RA;
    9a38:	4b03      	ldr	r3, [pc, #12]	; (9a48 <adc_read_inner+0x20>)
    9a3a:	6918      	ldr	r0, [r3, #16]
    9a3c:	b280      	uxth	r0, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:123
    //清ADC转换完成标志
    ADC0_SC1A &= ~ADC_SC1_COCO_MASK;
    9a3e:	681a      	ldr	r2, [r3, #0]
    9a40:	2180      	movs	r1, #128	; 0x80
    9a42:	438a      	bics	r2, r1
    9a44:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:126
    //返回读取结果
    return ADCResult;
}
    9a46:	4770      	bx	lr
    9a48:	4003b000 	.word	0x4003b000

00009a4c <adc_read>:
adc_read():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:42
{
    9a4c:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:44
	channel = (uint8_t)A_SENSOR_No;
    9a4e:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:45
	return adc_read_inner(channel);
    9a50:	f7ff ffea 	bl	9a28 <adc_read_inner>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:46
}
    9a54:	bd10      	pop	{r4, pc}
	...

00009a58 <adc_cal>:
adc_cal():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:138
//============================================================================
void adc_cal(void)
{
    uint8_t cal_var;

    ADC0_SC2 &=  ~ADC_SC2_ADTRG_MASK ; // 使能软件触发
    9a58:	4b22      	ldr	r3, [pc, #136]	; (9ae4 <adc_cal+0x8c>)
    9a5a:	6a1a      	ldr	r2, [r3, #32]
    9a5c:	2140      	movs	r1, #64	; 0x40
    9a5e:	438a      	bics	r2, r1
    9a60:	621a      	str	r2, [r3, #32]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:139
    ADC0_SC3 &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); //单次转换
    9a62:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    9a64:	3935      	subs	r1, #53	; 0x35
    9a66:	438a      	bics	r2, r1
    9a68:	625a      	str	r2, [r3, #36]	; 0x24
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:140
    ADC0_SC3 |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(3) );  //硬件平均滤波32次
    9a6a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    9a6c:	3904      	subs	r1, #4
    9a6e:	430a      	orrs	r2, r1
    9a70:	625a      	str	r2, [r3, #36]	; 0x24
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:141
    ADC0_SC3 |= ADC_SC3_CAL_MASK ;      //开始校验
    9a72:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    9a74:	3179      	adds	r1, #121	; 0x79
    9a76:	430a      	orrs	r2, r1
    9a78:	625a      	str	r2, [r3, #36]	; 0x24
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:142 (discriminator 1)
    while (!(ADC0_SC1A & ADC_SC1_COCO_MASK)); // 等待转换完成
    9a7a:	4b1a      	ldr	r3, [pc, #104]	; (9ae4 <adc_cal+0x8c>)
    9a7c:	681b      	ldr	r3, [r3, #0]
    9a7e:	061b      	lsls	r3, r3, #24
    9a80:	d5fb      	bpl.n	9a7a <adc_cal+0x22>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:144

    if (ADC0_SC3& ADC_SC3_CALF_MASK) goto adc_cal_exit; // 校正失败
    9a82:	4b18      	ldr	r3, [pc, #96]	; (9ae4 <adc_cal+0x8c>)
    9a84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9a86:	065b      	lsls	r3, r3, #25
    9a88:	d42a      	bmi.n	9ae0 <adc_cal+0x88>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:148
    // 校正正确，继续执行
    // 计算正向输入校正
    cal_var = 0x00;
    cal_var =  ADC0_CLP0;
    9a8a:	4a16      	ldr	r2, [pc, #88]	; (9ae4 <adc_cal+0x8c>)
    9a8c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
    9a8e:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:149
    cal_var += ADC0_CLP1;
    9a90:	6c91      	ldr	r1, [r2, #72]	; 0x48
    9a92:	185b      	adds	r3, r3, r1
    9a94:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:150
    cal_var += ADC0_CLP2;
    9a96:	6c51      	ldr	r1, [r2, #68]	; 0x44
    9a98:	185b      	adds	r3, r3, r1
    9a9a:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:151
    cal_var += ADC0_CLP3;
    9a9c:	6c11      	ldr	r1, [r2, #64]	; 0x40
    9a9e:	185b      	adds	r3, r3, r1
    9aa0:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:152
    cal_var += ADC0_CLP4;
    9aa2:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
    9aa4:	185b      	adds	r3, r3, r1
    9aa6:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:153
    cal_var += ADC0_CLPS;
    9aa8:	6b91      	ldr	r1, [r2, #56]	; 0x38
    9aaa:	185b      	adds	r3, r3, r1
    9aac:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:155

    cal_var = cal_var/2;
    9aae:	085b      	lsrs	r3, r3, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:157
    cal_var |= 0x8000;   //Set MSB
    ADC0_PG = ADC_PG_PG(cal_var);
    9ab0:	62d3      	str	r3, [r2, #44]	; 0x2c
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:161

    // 计算负向输入校正
    cal_var = 0x00;
    cal_var =  ADC0_CLM0;
    9ab2:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
    9ab4:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:162
    cal_var += ADC0_CLM1;
    9ab6:	6e91      	ldr	r1, [r2, #104]	; 0x68
    9ab8:	185b      	adds	r3, r3, r1
    9aba:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:163
    cal_var += ADC0_CLM2;
    9abc:	6e51      	ldr	r1, [r2, #100]	; 0x64
    9abe:	185b      	adds	r3, r3, r1
    9ac0:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:164
    cal_var += ADC0_CLM3;
    9ac2:	6e11      	ldr	r1, [r2, #96]	; 0x60
    9ac4:	185b      	adds	r3, r3, r1
    9ac6:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:165
    cal_var += ADC0_CLM4;
    9ac8:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
    9aca:	185b      	adds	r3, r3, r1
    9acc:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:166
    cal_var += ADC0_CLMS;
    9ace:	6d91      	ldr	r1, [r2, #88]	; 0x58
    9ad0:	185b      	adds	r3, r3, r1
    9ad2:	b2db      	uxtb	r3, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:168

    cal_var = cal_var/2;
    9ad4:	085b      	lsrs	r3, r3, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:170
    cal_var |= 0x8000; // Set MSB
    ADC0_MG = ADC_MG_MG(cal_var);
    9ad6:	6313      	str	r3, [r2, #48]	; 0x30
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:171
    ADC0_SC3 &= ~ADC_SC3_CAL_MASK ; //清CAL
    9ad8:	6a53      	ldr	r3, [r2, #36]	; 0x24
    9ada:	2180      	movs	r1, #128	; 0x80
    9adc:	438b      	bics	r3, r1
    9ade:	6253      	str	r3, [r2, #36]	; 0x24
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:173
adc_cal_exit:
    __asm("NOP");
    9ae0:	46c0      	nop			; (mov r8, r8)
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:174
}
    9ae2:	4770      	bx	lr
    9ae4:	4003b000 	.word	0x4003b000

00009ae8 <adc_init_inner>:
adc_init_inner():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:57
{
    9ae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9aea:	001d      	movs	r5, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:61
    SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    9aec:	4e23      	ldr	r6, [pc, #140]	; (9b7c <adc_init_inner+0x94>)
    9aee:	4c24      	ldr	r4, [pc, #144]	; (9b80 <adc_init_inner+0x98>)
    9af0:	5937      	ldr	r7, [r6, r4]
    9af2:	2380      	movs	r3, #128	; 0x80
    9af4:	051b      	lsls	r3, r3, #20
    9af6:	433b      	orrs	r3, r7
    9af8:	5133      	str	r3, [r6, r4]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:64
    switch(accurary)
    9afa:	3a08      	subs	r2, #8
    9afc:	b2d3      	uxtb	r3, r2
    9afe:	2b05      	cmp	r3, #5
    9b00:	d807      	bhi.n	9b12 <adc_init_inner+0x2a>
    9b02:	009a      	lsls	r2, r3, #2
    9b04:	4b1f      	ldr	r3, [pc, #124]	; (9b84 <adc_init_inner+0x9c>)
    9b06:	589b      	ldr	r3, [r3, r2]
    9b08:	469f      	mov	pc, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:67
        ADCCfg1 = ADC_CFG1_MODE(0);
    9b0a:	2200      	movs	r2, #0
    9b0c:	e004      	b.n	9b18 <adc_init_inner+0x30>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:73
        ADCCfg1 = ADC_CFG1_MODE(2);
    9b0e:	2208      	movs	r2, #8
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:74
        break;
    9b10:	e002      	b.n	9b18 <adc_init_inner+0x30>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:76
        ADCCfg1 = ADC_CFG1_MODE(3);
    9b12:	220c      	movs	r2, #12
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:77
        break;
    9b14:	e000      	b.n	9b18 <adc_init_inner+0x30>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:70
        ADCCfg1 = ADC_CFG1_MODE(1);
    9b16:	2204      	movs	r2, #4
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:80
    ADCCfg1 |=  (ADC_CFG1_ADIV(2) | ADC_CFG1_ADICLK(1) | ADC_CFG1_ADLSMP_MASK);
    9b18:	2351      	movs	r3, #81	; 0x51
    9b1a:	431a      	orrs	r2, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:82
    ADC0_CFG1 = ADCCfg1;
    9b1c:	4c1a      	ldr	r4, [pc, #104]	; (9b88 <adc_init_inner+0xa0>)
    9b1e:	60a2      	str	r2, [r4, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:85
    ADC0_CFG2&=~(ADC_CFG2_ADACKEN_MASK     //异步时钟输出禁止
    9b20:	68e3      	ldr	r3, [r4, #12]
    9b22:	220f      	movs	r2, #15
    9b24:	4393      	bics	r3, r2
    9b26:	60e3      	str	r3, [r4, #12]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:89
    (chnGroup==1)?(ADC0_CFG2 |=(ADC_CFG2_MUXSEL(1))):(ADC0_CFG2 &=~(ADC_CFG2_MUXSEL(1)));
    9b28:	2801      	cmp	r0, #1
    9b2a:	d01b      	beq.n	9b64 <adc_init_inner+0x7c>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:89 (discriminator 2)
    9b2c:	4a16      	ldr	r2, [pc, #88]	; (9b88 <adc_init_inner+0xa0>)
    9b2e:	68d3      	ldr	r3, [r2, #12]
    9b30:	2010      	movs	r0, #16
    9b32:	4383      	bics	r3, r0
    9b34:	60d3      	str	r3, [r2, #12]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:91
    ADC0_SC2 = 0;
    9b36:	4814      	ldr	r0, [pc, #80]	; (9b88 <adc_init_inner+0xa0>)
    9b38:	2300      	movs	r3, #0
    9b3a:	6203      	str	r3, [r0, #32]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:93
    ADC0_SC3 |= (ADC_SC3_ADCO_MASK | ADC_SC3_AVGE_MASK | ADC_SC3_AVGS((uint8_t)HDAve));
    9b3c:	6a42      	ldr	r2, [r0, #36]	; 0x24
    9b3e:	3303      	adds	r3, #3
    9b40:	402b      	ands	r3, r5
    9b42:	4313      	orrs	r3, r2
    9b44:	220c      	movs	r2, #12
    9b46:	4313      	orrs	r3, r2
    9b48:	6243      	str	r3, [r0, #36]	; 0x24
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:96
    if (1 == diff)     //选择差分输入
    9b4a:	2901      	cmp	r1, #1
    9b4c:	d00f      	beq.n	9b6e <adc_init_inner+0x86>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:103
        ADC0_SC1A &= ~(ADC_SC1_DIFF_MASK );
    9b4e:	4a0e      	ldr	r2, [pc, #56]	; (9b88 <adc_init_inner+0xa0>)
    9b50:	6813      	ldr	r3, [r2, #0]
    9b52:	2120      	movs	r1, #32
    9b54:	438b      	bics	r3, r1
    9b56:	6013      	str	r3, [r2, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:106
    ADC0_SC1A &= ~(ADC_SC1_AIEN_MASK);
    9b58:	4a0b      	ldr	r2, [pc, #44]	; (9b88 <adc_init_inner+0xa0>)
    9b5a:	6813      	ldr	r3, [r2, #0]
    9b5c:	2140      	movs	r1, #64	; 0x40
    9b5e:	438b      	bics	r3, r1
    9b60:	6013      	str	r3, [r2, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:107
}
    9b62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:89 (discriminator 1)
    (chnGroup==1)?(ADC0_CFG2 |=(ADC_CFG2_MUXSEL(1))):(ADC0_CFG2 &=~(ADC_CFG2_MUXSEL(1)));
    9b64:	68e3      	ldr	r3, [r4, #12]
    9b66:	300f      	adds	r0, #15
    9b68:	4303      	orrs	r3, r0
    9b6a:	60e3      	str	r3, [r4, #12]
    9b6c:	e7e3      	b.n	9b36 <adc_init_inner+0x4e>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:98
        ADC0_SC1A |= (ADC_SC1_DIFF_MASK);
    9b6e:	6803      	ldr	r3, [r0, #0]
    9b70:	311f      	adds	r1, #31
    9b72:	430b      	orrs	r3, r1
    9b74:	6003      	str	r3, [r0, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:99
        adc_cal();    //差分情况，需校验
    9b76:	f7ff ff6f 	bl	9a58 <adc_cal>
    9b7a:	e7ed      	b.n	9b58 <adc_init_inner+0x70>
    9b7c:	40047000 	.word	0x40047000
    9b80:	0000103c 	.word	0x0000103c
    9b84:	0000afac 	.word	0x0000afac
    9b88:	4003b000 	.word	0x4003b000

00009b8c <adc_init>:
adc_init():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:24
{
    9b8c:	b510      	push	{r4, lr}
    9b8e:	0003      	movs	r3, r0
    9b90:	000a      	movs	r2, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:26
	chnGroup = (uint8_t)(A_SENSOR_No>>8);
    9b92:	0a00      	lsrs	r0, r0, #8
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:29
	if(A_SENSOR_No ==  (0|0<<8))  //MUXSEL_A（A通道）
    9b94:	2b00      	cmp	r3, #0
    9b96:	d005      	beq.n	9ba4 <adc_init+0x18>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:32
	else if(A_SENSOR_No == (1|1<<8))
    9b98:	2102      	movs	r1, #2
    9b9a:	31ff      	adds	r1, #255	; 0xff
    9b9c:	428b      	cmp	r3, r1
    9b9e:	d006      	beq.n	9bae <adc_init+0x22>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:27
	diff = 0;
    9ba0:	2100      	movs	r1, #0
    9ba2:	e000      	b.n	9ba6 <adc_init+0x1a>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:30
		diff = 1;  //差分选择：=1，差分
    9ba4:	2101      	movs	r1, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:34
	adc_init_inner(chnGroup,diff,acc,SAMPLE32);
    9ba6:	2303      	movs	r3, #3
    9ba8:	f7ff ff9e 	bl	9ae8 <adc_init_inner>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:35
}
    9bac:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:33
		diff = 1;//差分选择：=1，差分
    9bae:	2101      	movs	r1, #1
    9bb0:	e7f9      	b.n	9ba6 <adc_init+0x1a>
	...

00009bb4 <TempRegression>:
TempRegression():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:178


float TempRegression(uint16_t tmpAD)
{
    9bb4:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:180
    float v1,v2,S,T;
    v1 = ((float)tmpAD*3300)/65535;   //AD值变为采样点电压(mV)
    9bb6:	f7fe f851 	bl	7c5c <__aeabi_ui2f>
    9bba:	4916      	ldr	r1, [pc, #88]	; (9c14 <TempRegression+0x60>)
    9bbc:	f7fd fd58 	bl	7670 <__aeabi_fmul>
    9bc0:	4915      	ldr	r1, [pc, #84]	; (9c18 <TempRegression+0x64>)
    9bc2:	f7fd fb7d 	bl	72c0 <__aeabi_fdiv>
    9bc6:	1c04      	adds	r4, r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:181
    v2=3300 - v1;                    //分压电阻两端电压(mV)
    9bc8:	1c01      	adds	r1, r0, #0
    9bca:	4812      	ldr	r0, [pc, #72]	; (9c14 <TempRegression+0x60>)
    9bcc:	f7fd fe82 	bl	78d4 <__aeabi_fsub>
    9bd0:	1c01      	adds	r1, r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:182
    S = v1/v2;                       //分压比
    9bd2:	1c20      	adds	r0, r4, #0
    9bd4:	f7fd fb74 	bl	72c0 <__aeabi_fdiv>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:183
    T = (1/(log(S)/3950.0 + (1/(273.15 + 25)))) - 273.15 + 0.5;
    9bd8:	f7ff fe1e 	bl	9818 <__aeabi_f2d>
    9bdc:	f000 fec8 	bl	a970 <log>
    9be0:	2200      	movs	r2, #0
    9be2:	4b0e      	ldr	r3, [pc, #56]	; (9c1c <TempRegression+0x68>)
    9be4:	f7fe fb96 	bl	8314 <__aeabi_ddiv>
    9be8:	4a0d      	ldr	r2, [pc, #52]	; (9c20 <TempRegression+0x6c>)
    9bea:	4b0e      	ldr	r3, [pc, #56]	; (9c24 <TempRegression+0x70>)
    9bec:	f7fe f876 	bl	7cdc <__aeabi_dadd>
    9bf0:	0002      	movs	r2, r0
    9bf2:	000b      	movs	r3, r1
    9bf4:	2000      	movs	r0, #0
    9bf6:	490c      	ldr	r1, [pc, #48]	; (9c28 <TempRegression+0x74>)
    9bf8:	f7fe fb8c 	bl	8314 <__aeabi_ddiv>
    9bfc:	4a0b      	ldr	r2, [pc, #44]	; (9c2c <TempRegression+0x78>)
    9bfe:	4b0c      	ldr	r3, [pc, #48]	; (9c30 <TempRegression+0x7c>)
    9c00:	f7ff fa04 	bl	900c <__aeabi_dsub>
    9c04:	2200      	movs	r2, #0
    9c06:	4b0b      	ldr	r3, [pc, #44]	; (9c34 <TempRegression+0x80>)
    9c08:	f7fe f868 	bl	7cdc <__aeabi_dadd>
    9c0c:	f7ff fe56 	bl	98bc <__aeabi_d2f>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:185
    return T;
}
    9c10:	bd10      	pop	{r4, pc}
    9c12:	46c0      	nop			; (mov r8, r8)
    9c14:	454e4000 	.word	0x454e4000
    9c18:	477fff00 	.word	0x477fff00
    9c1c:	40aedc00 	.word	0x40aedc00
    9c20:	dcb5db83 	.word	0xdcb5db83
    9c24:	3f6b79e1 	.word	0x3f6b79e1
    9c28:	3ff00000 	.word	0x3ff00000
    9c2c:	66666666 	.word	0x66666666
    9c30:	40711266 	.word	0x40711266
    9c34:	3fe00000 	.word	0x3fe00000

00009c38 <TempTrans>:
TempTrans():
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:193
//功能概要：将读到的mcu温度AD值转换为实际温度
//参数说明：mcu_temp_AD：通过adc_read函数得到的AD值
//函数返回：实际温度值
//============================================================================
float TempTrans(uint16_t mcu_temp_AD)
{
    9c38:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:195
	float mcu_temp_result;
	mcu_temp_result=(float)(25.0-(mcu_temp_AD*0.05-719)/1.715);
    9c3a:	f7ff fd81 	bl	9740 <__aeabi_i2d>
    9c3e:	4a0a      	ldr	r2, [pc, #40]	; (9c68 <TempTrans+0x30>)
    9c40:	4b0a      	ldr	r3, [pc, #40]	; (9c6c <TempTrans+0x34>)
    9c42:	f7fe ff71 	bl	8b28 <__aeabi_dmul>
    9c46:	2200      	movs	r2, #0
    9c48:	4b09      	ldr	r3, [pc, #36]	; (9c70 <TempTrans+0x38>)
    9c4a:	f7ff f9df 	bl	900c <__aeabi_dsub>
    9c4e:	4a09      	ldr	r2, [pc, #36]	; (9c74 <TempTrans+0x3c>)
    9c50:	4b09      	ldr	r3, [pc, #36]	; (9c78 <TempTrans+0x40>)
    9c52:	f7fe fb5f 	bl	8314 <__aeabi_ddiv>
    9c56:	0002      	movs	r2, r0
    9c58:	000b      	movs	r3, r1
    9c5a:	2000      	movs	r0, #0
    9c5c:	4907      	ldr	r1, [pc, #28]	; (9c7c <TempTrans+0x44>)
    9c5e:	f7ff f9d5 	bl	900c <__aeabi_dsub>
    9c62:	f7ff fe2b 	bl	98bc <__aeabi_d2f>
D:\app_for_qianrushi\exam\19\Debug/srcc/adc.c:197
	return mcu_temp_result;
    9c66:	bd10      	pop	{r4, pc}
    9c68:	9999999a 	.word	0x9999999a
    9c6c:	3fa99999 	.word	0x3fa99999
    9c70:	40867800 	.word	0x40867800
    9c74:	d70a3d71 	.word	0xd70a3d71
    9c78:	3ffb70a3 	.word	0x3ffb70a3
    9c7c:	40390000 	.word	0x40390000

00009c80 <SystemInit>:
SystemInit():
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:112
    //看门狗默认为开启，而且复位之后只能开启或关闭看门狗一次
    //SIM_COPC &= ~SIM_COPC_COPT_MASK;    //DISABLE_WDOG 

    /* System clock initialization */
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
    9c80:	4b26      	ldr	r3, [pc, #152]	; (9d1c <SystemInit+0x9c>)
    9c82:	4a27      	ldr	r2, [pc, #156]	; (9d20 <SystemInit+0xa0>)
    9c84:	21c0      	movs	r1, #192	; 0xc0
    9c86:	0289      	lsls	r1, r1, #10
    9c88:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:114
    /* SIM_SCGC5: PORTA=1 */
    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
    9c8a:	4926      	ldr	r1, [pc, #152]	; (9d24 <SystemInit+0xa4>)
    9c8c:	5858      	ldr	r0, [r3, r1]
    9c8e:	2280      	movs	r2, #128	; 0x80
    9c90:	0092      	lsls	r2, r2, #2
    9c92:	4302      	orrs	r2, r0
    9c94:	505a      	str	r2, [r3, r1]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:115
    if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
    9c96:	4b24      	ldr	r3, [pc, #144]	; (9d28 <SystemInit+0xa8>)
    9c98:	789b      	ldrb	r3, [r3, #2]
    9c9a:	071b      	lsls	r3, r3, #28
    9c9c:	d504      	bpl.n	9ca8 <SystemInit+0x28>
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:117
        /* PMC_REGSC: ACKISO=1 */
        PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
    9c9e:	4a22      	ldr	r2, [pc, #136]	; (9d28 <SystemInit+0xa8>)
    9ca0:	7893      	ldrb	r3, [r2, #2]
    9ca2:	2108      	movs	r1, #8
    9ca4:	430b      	orrs	r3, r1
    9ca6:	7093      	strb	r3, [r2, #2]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:120
    }
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=1,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x01)); /* Update system prescalers */
    9ca8:	4b1c      	ldr	r3, [pc, #112]	; (9d1c <SystemInit+0x9c>)
    9caa:	4a1d      	ldr	r2, [pc, #116]	; (9d20 <SystemInit+0xa0>)
    9cac:	2180      	movs	r1, #128	; 0x80
    9cae:	0249      	lsls	r1, r1, #9
    9cb0:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:122
    /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
    SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
    9cb2:	4a1e      	ldr	r2, [pc, #120]	; (9d2c <SystemInit+0xac>)
    9cb4:	5899      	ldr	r1, [r3, r2]
    9cb6:	481e      	ldr	r0, [pc, #120]	; (9d30 <SystemInit+0xb0>)
    9cb8:	4001      	ands	r1, r0
    9cba:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:124
    /* SIM_SOPT1: OSC32KSEL=0 */
    SIM_SOPT1 &= (uint32_t)~(uint32_t)(SIM_SOPT1_OSC32KSEL(0x03)); /* System oscillator drives 32 kHz clock for various peripherals */
    9cbc:	6819      	ldr	r1, [r3, #0]
    9cbe:	481d      	ldr	r0, [pc, #116]	; (9d34 <SystemInit+0xb4>)
    9cc0:	4001      	ands	r1, r0
    9cc2:	6019      	str	r1, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:126
    /* SIM_SOPT2: TPMSRC=1 */
    SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
    9cc4:	5899      	ldr	r1, [r3, r2]
    9cc6:	481c      	ldr	r0, [pc, #112]	; (9d38 <SystemInit+0xb8>)
    9cc8:	4008      	ands	r0, r1
    9cca:	2180      	movs	r1, #128	; 0x80
    9ccc:	0449      	lsls	r1, r1, #17
    9cce:	4301      	orrs	r1, r0
    9cd0:	5099      	str	r1, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:133
    )) | (uint32_t)(
            SIM_SOPT2_TPMSRC(0x01)
    ));                      /* Set the TPM clock */
    /* Switch to FEI Mode */
    /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
    MCG_C1 = MCG_C1_CLKS(0x00) |
    9cd2:	4b1a      	ldr	r3, [pc, #104]	; (9d3c <SystemInit+0xbc>)
    9cd4:	2206      	movs	r2, #6
    9cd6:	701a      	strb	r2, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:138
            MCG_C1_FRDIV(0x00) |
            MCG_C1_IREFS_MASK |
            MCG_C1_IRCLKEN_MASK;
    /* MCG_C2: LOCRE0=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
    MCG_C2 &= (uint8_t)~(uint8_t)(
    9cd8:	785a      	ldrb	r2, [r3, #1]
    9cda:	2140      	movs	r1, #64	; 0x40
    9cdc:	400a      	ands	r2, r1
    9cde:	705a      	strb	r2, [r3, #1]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:147
            MCG_C2_EREFS0_MASK |
            MCG_C2_LP_MASK |
            MCG_C2_IRCS_MASK
    );
    /* MCG_C4: DMX32=1,DRST_DRS=1 */
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    9ce0:	78d9      	ldrb	r1, [r3, #3]
    9ce2:	b249      	sxtb	r1, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:149
            MCG_C4_DRST_DRS(0x02)
    )) | (uint8_t)(
    9ce4:	221f      	movs	r2, #31
    9ce6:	4011      	ands	r1, r2
    9ce8:	3a7f      	subs	r2, #127	; 0x7f
    9cea:	430a      	orrs	r2, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:147
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    9cec:	b2d2      	uxtb	r2, r2
    9cee:	70da      	strb	r2, [r3, #3]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:154
            MCG_C4_DMX32_MASK |
            MCG_C4_DRST_DRS(0x01)
    ));
    /* OSC0_CR: ERCLKEN=0,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
    OSC0_CR = 0x00U;
    9cf0:	2200      	movs	r2, #0
    9cf2:	4913      	ldr	r1, [pc, #76]	; (9d40 <SystemInit+0xc0>)
    9cf4:	700a      	strb	r2, [r1, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:156
    /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
    MCG_C5 = MCG_C5_PRDIV0(0x00);
    9cf6:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:158
    /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
    MCG_C6 = MCG_C6_VDIV0(0x00);
    9cf8:	715a      	strb	r2, [r3, #5]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:159 (discriminator 1)
    while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    9cfa:	4b10      	ldr	r3, [pc, #64]	; (9d3c <SystemInit+0xbc>)
    9cfc:	799b      	ldrb	r3, [r3, #6]
    9cfe:	06db      	lsls	r3, r3, #27
    9d00:	d5fb      	bpl.n	9cfa <SystemInit+0x7a>
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:161 (discriminator 1)
    }
    while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    9d02:	4b0e      	ldr	r3, [pc, #56]	; (9d3c <SystemInit+0xbc>)
    9d04:	799a      	ldrb	r2, [r3, #6]
    9d06:	230c      	movs	r3, #12
    9d08:	421a      	tst	r2, r3
    9d0a:	d1fa      	bne.n	9d02 <SystemInit+0x82>
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:234
    //        if (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x3) break;
    //    }
    //    //4.现在处于PEE模式

    //开启PORT模块时钟
    SIM->SCGC5 |= SIM_SCGC5_PORTA_MASK
    9d0c:	4903      	ldr	r1, [pc, #12]	; (9d1c <SystemInit+0x9c>)
    9d0e:	4a05      	ldr	r2, [pc, #20]	; (9d24 <SystemInit+0xa4>)
    9d10:	5888      	ldr	r0, [r1, r2]
    9d12:	23f8      	movs	r3, #248	; 0xf8
    9d14:	019b      	lsls	r3, r3, #6
    9d16:	4303      	orrs	r3, r0
    9d18:	508b      	str	r3, [r1, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/system_MKL36Z4.c:239
            | SIM_SCGC5_PORTB_MASK
            | SIM_SCGC5_PORTC_MASK
            | SIM_SCGC5_PORTD_MASK
            | SIM_SCGC5_PORTE_MASK;
}
    9d1a:	4770      	bx	lr
    9d1c:	40047000 	.word	0x40047000
    9d20:	00001044 	.word	0x00001044
    9d24:	00001038 	.word	0x00001038
    9d28:	4007d000 	.word	0x4007d000
    9d2c:	00001004 	.word	0x00001004
    9d30:	fffcffff 	.word	0xfffcffff
    9d34:	fff3ffff 	.word	0xfff3ffff
    9d38:	fcffffff 	.word	0xfcffffff
    9d3c:	40064000 	.word	0x40064000
    9d40:	40065000 	.word	0x40065000

00009d44 <main>:
main():
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:18
//main.c使用的内部函数声明处

void main_Dly_ms(uint32_t ms);
uint8_t ans[4];
int main(void)
{
    9d44:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:25
    //（1.1）声明main函数使用的局部变量
    uint32_t mMainLoopCount;  //主循环使用的记录主循环次数变量
    uint8_t  mFlag;            //主循环使用的临时变量
    
    //（1.2）【不变】关总中断
    DISABLE_INTERRUPTS;
    9d46:	b672      	cpsid	i
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:33
	uint16_t mcu_temp_AD;	
	float temperature;
	float mcu_temp;
    mMainLoopCount = 0;    
    mFlag='A';             
    gpio_init(LIGHT_BLUE,GPIO_OUTPUT,LIGHT_OFF);   
    9d48:	2201      	movs	r2, #1
    9d4a:	2101      	movs	r1, #1
    9d4c:	200d      	movs	r0, #13
    9d4e:	f000 f90f 	bl	9f70 <gpio_init>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:34
	adc_init(AD_MCU_TEMP,0);
    9d52:	2100      	movs	r1, #0
    9d54:	201a      	movs	r0, #26
    9d56:	f7ff ff19 	bl	9b8c <adc_init>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:35
	adc_init(AD_BOARD_TEMP,0);
    9d5a:	2100      	movs	r1, #0
    9d5c:	2002      	movs	r0, #2
    9d5e:	f7ff ff15 	bl	9b8c <adc_init>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:36
    ENABLE_INTERRUPTS;
    9d62:	b662      	cpsie	i
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:38
    
    printf("-----------------------------------------------------\r\n"); 
    9d64:	481d      	ldr	r0, [pc, #116]	; (9ddc <main+0x98>)
    9d66:	f000 fdf1 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:39
    printf("金葫芦提示：数码管测试实例 \r\n");
    9d6a:	481d      	ldr	r0, [pc, #116]	; (9de0 <main+0x9c>)
    9d6c:	f000 fdee 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:40
    printf("  ① 蓝灯闪烁\n");
    9d70:	481c      	ldr	r0, [pc, #112]	; (9de4 <main+0xa0>)
    9d72:	f000 fdeb 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:41
    printf("  ② UART_Debug串口（波特率115200），输出数码管提示信息 \r\n");
    9d76:	481c      	ldr	r0, [pc, #112]	; (9de8 <main+0xa4>)
    9d78:	f000 fde8 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:42
    printf("----------------------------------------------------\r\n"); 
    9d7c:	481b      	ldr	r0, [pc, #108]	; (9dec <main+0xa8>)
    9d7e:	f000 fde5 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:31
    mMainLoopCount = 0;    
    9d82:	2300      	movs	r3, #0
    9d84:	e006      	b.n	9d94 <main+0x50>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:55
		mcu_temp_AD = adc_read(AD_MCU_TEMP);
        mcu_temp=TempTrans(mcu_temp_AD);
        temperature = TempRegression(adc_read(AD_BOARD_TEMP));
        printf("%.2f\n",temperature);
        if(temperature>=25.00)gpio_init(BEEF,GPIO_OUTPUT,1);
        else gpio_init(BEEF,GPIO_OUTPUT,0);
    9d86:	2081      	movs	r0, #129	; 0x81
    9d88:	2200      	movs	r2, #0
    9d8a:	2101      	movs	r1, #1
    9d8c:	0080      	lsls	r0, r0, #2
    9d8e:	f000 f8ef 	bl	9f70 <gpio_init>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:56
        mMainLoopCount=0;     
    9d92:	2300      	movs	r3, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:48
        mMainLoopCount++;                        
    9d94:	3301      	adds	r3, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:49
        if (mMainLoopCount<=16556677)  continue;  
    9d96:	4a16      	ldr	r2, [pc, #88]	; (9df0 <main+0xac>)
    9d98:	4293      	cmp	r3, r2
    9d9a:	d9fb      	bls.n	9d94 <main+0x50>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:50
		mcu_temp_AD = adc_read(AD_MCU_TEMP);
    9d9c:	201a      	movs	r0, #26
    9d9e:	f7ff fe55 	bl	9a4c <adc_read>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:51
        mcu_temp=TempTrans(mcu_temp_AD);
    9da2:	f7ff ff49 	bl	9c38 <TempTrans>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:52
        temperature = TempRegression(adc_read(AD_BOARD_TEMP));
    9da6:	2002      	movs	r0, #2
    9da8:	f7ff fe50 	bl	9a4c <adc_read>
    9dac:	f7ff ff02 	bl	9bb4 <TempRegression>
    9db0:	1c04      	adds	r4, r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:53
        printf("%.2f\n",temperature);
    9db2:	f7ff fd31 	bl	9818 <__aeabi_f2d>
    9db6:	0002      	movs	r2, r0
    9db8:	000b      	movs	r3, r1
    9dba:	480e      	ldr	r0, [pc, #56]	; (9df4 <main+0xb0>)
    9dbc:	f000 fdc6 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:54
        if(temperature>=25.00)gpio_init(BEEF,GPIO_OUTPUT,1);
    9dc0:	490d      	ldr	r1, [pc, #52]	; (9df8 <main+0xb4>)
    9dc2:	1c20      	adds	r0, r4, #0
    9dc4:	f7fd f954 	bl	7070 <__aeabi_fcmpge>
    9dc8:	2800      	cmp	r0, #0
    9dca:	d0dc      	beq.n	9d86 <main+0x42>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:54 (discriminator 1)
    9dcc:	2081      	movs	r0, #129	; 0x81
    9dce:	2201      	movs	r2, #1
    9dd0:	2101      	movs	r1, #1
    9dd2:	0080      	lsls	r0, r0, #2
    9dd4:	f000 f8cc 	bl	9f70 <gpio_init>
D:\app_for_qianrushi\exam\19\Debug/srcc/main.c:56 (discriminator 1)
        mMainLoopCount=0;     
    9dd8:	2300      	movs	r3, #0
    9dda:	e7db      	b.n	9d94 <main+0x50>
    9ddc:	0000afc4 	.word	0x0000afc4
    9de0:	0000affc 	.word	0x0000affc
    9de4:	0000b01c 	.word	0x0000b01c
    9de8:	0000b02c 	.word	0x0000b02c
    9dec:	0000b068 	.word	0x0000b068
    9df0:	00fca285 	.word	0x00fca285
    9df4:	0000b0a0 	.word	0x0000b0a0
    9df8:	41c80000 	.word	0x41c80000

00009dfc <flash_read_physical>:
flash_read_physical():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:203
//       addr：目标地址，要求为4的倍数（例如：0x00000004）
//       N：读字节数目（0~1020,要求为4，8,12,......）
//功能概要：读取flash指定地址的内容
//======================================================================
void flash_read_physical(uint8_t *dest,uint32_t addr,uint16_t N)
{
    9dfc:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:206
	uint8_t *src;
	src=(uint8_t *)addr;
	memcpy(dest,src,N);
    9dfe:	f001 f823 	bl	ae48 <memcpy>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:207
}
    9e02:	bd10      	pop	{r4, pc}

00009e04 <flash_isempty>:
flash_isempty():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:254
{
   uint16_t i,flag;
   uint8_t* buff;
   i = 0;
   flag = 1;
   for(i = 0; i<N; i++)   //遍历区域内字节
    9e04:	2300      	movs	r3, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:254 (discriminator 1)
    9e06:	428b      	cmp	r3, r1
    9e08:	d206      	bcs.n	9e18 <flash_isempty+0x14>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:256
   {
	  buff=(uint8_t*)(sect*0x400);
    9e0a:	0282      	lsls	r2, r0, #10
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:257
      if(buff[i]!=0xff)   //非空
    9e0c:	5cd2      	ldrb	r2, [r2, r3]
    9e0e:	2aff      	cmp	r2, #255	; 0xff
    9e10:	d105      	bne.n	9e1e <flash_isempty+0x1a>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:254 (discriminator 2)
   for(i = 0; i<N; i++)   //遍历区域内字节
    9e12:	3301      	adds	r3, #1
    9e14:	b29b      	uxth	r3, r3
    9e16:	e7f6      	b.n	9e06 <flash_isempty+0x2>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:253
   flag = 1;
    9e18:	2001      	movs	r0, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:263
      {
      	  flag=0;
          break;
       }
   }
   return flag;
    9e1a:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:264
}
    9e1c:	4770      	bx	lr
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:259
      	  flag=0;
    9e1e:	2000      	movs	r0, #0
    9e20:	e7fb      	b.n	9e1a <flash_isempty+0x16>
	...

00009e24 <flash_cmd_launch>:
flash_cmd_launch():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:342
//======================================================================
uint32_t flash_cmd_launch(void)
{
	uint8_t irq_flag=0;
    // 清除访问错误标志位和非法访问标志位
    FTFA_FSTAT = ACCERR | FPVIOL;
    9e24:	4b0f      	ldr	r3, [pc, #60]	; (9e64 <flash_cmd_launch+0x40>)
    9e26:	2230      	movs	r2, #48	; 0x30
    9e28:	701a      	strb	r2, [r3, #0]
__get_PRIMASK():
D:\app_for_qianrushi\exam\19\02_CPU/core_cmFunc.h:484
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    9e2a:	f3ef 8310 	mrs	r3, PRIMASK
flash_cmd_launch():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:343
    if(__get_PRIMASK() == 0U)
    9e2e:	2b00      	cmp	r3, #0
    9e30:	d112      	bne.n	9e58 <flash_cmd_launch+0x34>
__disable_irq():
D:\app_for_qianrushi\exam\19\02_CPU/core_cmFunc.h:344
  __ASM volatile ("cpsid i" : : : "memory");
    9e32:	b672      	cpsid	i
flash_cmd_launch():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:346
    {
    	__disable_irq();  //关总中断
    	irq_flag = 1;
    9e34:	3a2f      	subs	r2, #47	; 0x2f
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:349
    }
    // 启动命令
    FTFA_FSTAT = CCIF;
    9e36:	4b0b      	ldr	r3, [pc, #44]	; (9e64 <flash_cmd_launch+0x40>)
    9e38:	2180      	movs	r1, #128	; 0x80
    9e3a:	7019      	strb	r1, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:351 (discriminator 1)
    // 等待命令结束
    while(!(FTFA_FSTAT & CCIF));
    9e3c:	4b09      	ldr	r3, [pc, #36]	; (9e64 <flash_cmd_launch+0x40>)
    9e3e:	781b      	ldrb	r3, [r3, #0]
    9e40:	b25b      	sxtb	r3, r3
    9e42:	2b00      	cmp	r3, #0
    9e44:	dafa      	bge.n	9e3c <flash_cmd_launch+0x18>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:352
    if(irq_flag == 1)
    9e46:	2a01      	cmp	r2, #1
    9e48:	d008      	beq.n	9e5c <flash_cmd_launch+0x38>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:357
    {
    	__enable_irq();  //开总中断
    }
    // 检查错误标志
    if(FTFA_FSTAT & (ACCERR | FPVIOL | MGSTAT0))
    9e4a:	4b06      	ldr	r3, [pc, #24]	; (9e64 <flash_cmd_launch+0x40>)
    9e4c:	781a      	ldrb	r2, [r3, #0]
    9e4e:	2331      	movs	r3, #49	; 0x31
    9e50:	421a      	tst	r2, r3
    9e52:	d105      	bne.n	9e60 <flash_cmd_launch+0x3c>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:359
        return 1 ; //执行命令出错
    return 0; //执行命令成功
    9e54:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:360
}
    9e56:	4770      	bx	lr
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:340
	uint8_t irq_flag=0;
    9e58:	2200      	movs	r2, #0
    9e5a:	e7ec      	b.n	9e36 <flash_cmd_launch+0x12>
__enable_irq():
D:\app_for_qianrushi\exam\19\02_CPU/core_cmFunc.h:333
  __ASM volatile ("cpsie i" : : : "memory");
    9e5c:	b662      	cpsie	i
    9e5e:	e7f4      	b.n	9e4a <flash_cmd_launch+0x26>
flash_cmd_launch():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:358
        return 1 ; //执行命令出错
    9e60:	2001      	movs	r0, #1
    9e62:	e7f8      	b.n	9e56 <flash_cmd_launch+0x32>
    9e64:	40020000 	.word	0x40020000

00009e68 <flash_erase>:
flash_erase():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:50
{
    9e68:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:57
    dest.word    = (uint32_t)(sect*(1<<10));
    9e6a:	0284      	lsls	r4, r0, #10
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:60
    FTFA_FCCOB0 = ERSSCR; // 擦除扇区命令
    9e6c:	4b16      	ldr	r3, [pc, #88]	; (9ec8 <flash_erase+0x60>)
    9e6e:	2209      	movs	r2, #9
    9e70:	71da      	strb	r2, [r3, #7]
    9e72:	0482      	lsls	r2, r0, #18
    9e74:	0e12      	lsrs	r2, r2, #24
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:63
    FTFA_FCCOB1 = dest.byte[2];
    9e76:	719a      	strb	r2, [r3, #6]
    9e78:	0680      	lsls	r0, r0, #26
    9e7a:	0e00      	lsrs	r0, r0, #24
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:64
    FTFA_FCCOB2 = dest.byte[1];
    9e7c:	7158      	strb	r0, [r3, #5]
    9e7e:	b2e2      	uxtb	r2, r4
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:65
    FTFA_FCCOB3 = dest.byte[0];
    9e80:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:68
    if(1 == flash_cmd_launch())    //若执行命令出现错误
    9e82:	f7ff ffcf 	bl	9e24 <flash_cmd_launch>
    9e86:	2801      	cmp	r0, #1
    9e88:	d01b      	beq.n	9ec2 <flash_erase+0x5a>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:73
    if(dest.word < 0x400)
    9e8a:	4b10      	ldr	r3, [pc, #64]	; (9ecc <flash_erase+0x64>)
    9e8c:	429c      	cmp	r4, r3
    9e8e:	d901      	bls.n	9e94 <flash_erase+0x2c>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:91
    return 0;  //成功返回
    9e90:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:92
}
    9e92:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:76
        FTFA_FCCOB0 = PGM4; 
    9e94:	4b0c      	ldr	r3, [pc, #48]	; (9ec8 <flash_erase+0x60>)
    9e96:	2206      	movs	r2, #6
    9e98:	71da      	strb	r2, [r3, #7]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:78
        FTFA_FCCOB1 = 0x00;
    9e9a:	2200      	movs	r2, #0
    9e9c:	719a      	strb	r2, [r3, #6]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:79
        FTFA_FCCOB2 = 0x04;
    9e9e:	3204      	adds	r2, #4
    9ea0:	715a      	strb	r2, [r3, #5]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:80
        FTFA_FCCOB3 = 0x0C;
    9ea2:	3208      	adds	r2, #8
    9ea4:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:82
        FTFA_FCCOB4 = 0xFF;
    9ea6:	32f3      	adds	r2, #243	; 0xf3
    9ea8:	72da      	strb	r2, [r3, #11]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:83
        FTFA_FCCOB5 = 0xFF;
    9eaa:	729a      	strb	r2, [r3, #10]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:84
        FTFA_FCCOB6 = 0xFF;
    9eac:	725a      	strb	r2, [r3, #9]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:85
        FTFA_FCCOB7 = 0xFE;
    9eae:	3a01      	subs	r2, #1
    9eb0:	721a      	strb	r2, [r3, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:87
        if(1 == flash_cmd_launch())  //若执行命令出现错误
    9eb2:	f7ff ffb7 	bl	9e24 <flash_cmd_launch>
    9eb6:	2801      	cmp	r0, #1
    9eb8:	d001      	beq.n	9ebe <flash_erase+0x56>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:91
    return 0;  //成功返回
    9eba:	2000      	movs	r0, #0
    9ebc:	e7e9      	b.n	9e92 <flash_erase+0x2a>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:88
            return 2;   //解锁命令错误
    9ebe:	3001      	adds	r0, #1
    9ec0:	e7e7      	b.n	9e92 <flash_erase+0x2a>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:69
        return 1;     //擦除命令错误
    9ec2:	2001      	movs	r0, #1
    9ec4:	e7e5      	b.n	9e92 <flash_erase+0x2a>
    9ec6:	46c0      	nop			; (mov r8, r8)
    9ec8:	40020000 	.word	0x40020000
    9ecc:	000003ff 	.word	0x000003ff

00009ed0 <flash_write_physical>:
flash_write_physical():
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:147
{
    9ed0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9ed2:	000f      	movs	r7, r1
    9ed4:	0014      	movs	r4, r2
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:156
    FTFA_FCCOB0 = PGM4;
    9ed6:	4b12      	ldr	r3, [pc, #72]	; (9f20 <flash_write_physical+0x50>)
    9ed8:	2206      	movs	r2, #6
    9eda:	71da      	strb	r2, [r3, #7]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:157
    dest.word = destaddr;
    9edc:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:158
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    9ede:	2600      	movs	r6, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:158 (discriminator 1)
    9ee0:	42b7      	cmp	r7, r6
    9ee2:	d918      	bls.n	9f16 <flash_write_physical+0x46>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:161
        FTFA_FCCOB1 = dest.byte[2];
    9ee4:	022a      	lsls	r2, r5, #8
    9ee6:	0e12      	lsrs	r2, r2, #24
    9ee8:	4b0d      	ldr	r3, [pc, #52]	; (9f20 <flash_write_physical+0x50>)
    9eea:	719a      	strb	r2, [r3, #6]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:162
        FTFA_FCCOB2 = dest.byte[1];
    9eec:	042a      	lsls	r2, r5, #16
    9eee:	0e12      	lsrs	r2, r2, #24
    9ef0:	715a      	strb	r2, [r3, #5]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:163
        FTFA_FCCOB3 = dest.byte[0];
    9ef2:	b2ea      	uxtb	r2, r5
    9ef4:	711a      	strb	r2, [r3, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:166
        FTFA_FCCOB4 = buf[3];//大端寻址
    9ef6:	78e2      	ldrb	r2, [r4, #3]
    9ef8:	72da      	strb	r2, [r3, #11]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:167
        FTFA_FCCOB5 = buf[2];
    9efa:	78a2      	ldrb	r2, [r4, #2]
    9efc:	729a      	strb	r2, [r3, #10]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:168
        FTFA_FCCOB6 = buf[1];
    9efe:	7862      	ldrb	r2, [r4, #1]
    9f00:	725a      	strb	r2, [r3, #9]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:169
        FTFA_FCCOB7 = buf[0];
    9f02:	7822      	ldrb	r2, [r4, #0]
    9f04:	721a      	strb	r2, [r3, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:171
        if(1 == flash_cmd_launch())
    9f06:	f7ff ff8d 	bl	9e24 <flash_cmd_launch>
    9f0a:	2801      	cmp	r0, #1
    9f0c:	d005      	beq.n	9f1a <flash_write_physical+0x4a>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:158 (discriminator 2)
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    9f0e:	3604      	adds	r6, #4
    9f10:	3504      	adds	r5, #4
    9f12:	3404      	adds	r4, #4
    9f14:	e7e4      	b.n	9ee0 <flash_write_physical+0x10>
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:175
    return 0;  //成功执行
    9f16:	2000      	movs	r0, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:176
}
    9f18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/flash.c:172
            return 2;  //写入命令错误
    9f1a:	2002      	movs	r0, #2
    9f1c:	e7fc      	b.n	9f18 <flash_write_physical+0x48>
    9f1e:	46c0      	nop			; (mov r8, r8)
    9f20:	40020000 	.word	0x40020000

00009f24 <gpio_get_port_pin>:
gpio_get_port_pin():
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:348
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
	*port = (port_pin>>8);
    9f24:	0a03      	lsrs	r3, r0, #8
    9f26:	700b      	strb	r3, [r1, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:349
	*pin = port_pin;
    9f28:	7010      	strb	r0, [r2, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:350
}
    9f2a:	4770      	bx	lr

00009f2c <gpio_set>:
gpio_set():
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:67
{
    9f2c:	b530      	push	{r4, r5, lr}
    9f2e:	b083      	sub	sp, #12
    9f30:	000d      	movs	r5, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:72
	gpio_get_port_pin(port_pin,&port,&pin);
    9f32:	466b      	mov	r3, sp
    9f34:	1ddc      	adds	r4, r3, #7
    9f36:	1d9a      	adds	r2, r3, #6
    9f38:	0021      	movs	r1, r4
    9f3a:	f7ff fff3 	bl	9f24 <gpio_get_port_pin>
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:75
	gpio_ptr = GPIO_ARR[port];
    9f3e:	7823      	ldrb	r3, [r4, #0]
    9f40:	009b      	lsls	r3, r3, #2
    9f42:	4a0a      	ldr	r2, [pc, #40]	; (9f6c <gpio_set+0x40>)
    9f44:	589b      	ldr	r3, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:78
	if(state == 1)
    9f46:	2d01      	cmp	r5, #1
    9f48:	d008      	beq.n	9f5c <gpio_set+0x30>
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:84
		BCLR(pin,GPIO_PDOR_REG(gpio_ptr));
    9f4a:	681a      	ldr	r2, [r3, #0]
    9f4c:	4669      	mov	r1, sp
    9f4e:	7988      	ldrb	r0, [r1, #6]
    9f50:	2101      	movs	r1, #1
    9f52:	4081      	lsls	r1, r0
    9f54:	438a      	bics	r2, r1
    9f56:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:86
}
    9f58:	b003      	add	sp, #12
    9f5a:	bd30      	pop	{r4, r5, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:80
		BSET(pin,GPIO_PDOR_REG(gpio_ptr));
    9f5c:	681a      	ldr	r2, [r3, #0]
    9f5e:	4669      	mov	r1, sp
    9f60:	7988      	ldrb	r0, [r1, #6]
    9f62:	2101      	movs	r1, #1
    9f64:	4081      	lsls	r1, r0
    9f66:	430a      	orrs	r2, r1
    9f68:	601a      	str	r2, [r3, #0]
    9f6a:	e7f5      	b.n	9f58 <gpio_set+0x2c>
    9f6c:	0000b0a8 	.word	0x0000b0a8

00009f70 <gpio_init>:
gpio_init():
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:31
{
    9f70:	b5f0      	push	{r4, r5, r6, r7, lr}
    9f72:	b085      	sub	sp, #20
    9f74:	0004      	movs	r4, r0
    9f76:	000f      	movs	r7, r1
    9f78:	9201      	str	r2, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:37
	gpio_get_port_pin(port_pin,&port,&pin);
    9f7a:	ab02      	add	r3, sp, #8
    9f7c:	1d9e      	adds	r6, r3, #6
    9f7e:	1ddd      	adds	r5, r3, #7
    9f80:	0032      	movs	r2, r6
    9f82:	0029      	movs	r1, r5
    9f84:	f7ff ffce 	bl	9f24 <gpio_get_port_pin>
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:39
	port_ptr = PORT_ARR[port];        //获得PORT模块相应口基地址
    9f88:	782a      	ldrb	r2, [r5, #0]
    9f8a:	0092      	lsls	r2, r2, #2
    9f8c:	4b13      	ldr	r3, [pc, #76]	; (9fdc <gpio_init+0x6c>)
    9f8e:	58d3      	ldr	r3, [r2, r3]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:40
	gpio_ptr = GPIO_ARR[port];        //获得GPIO模块相应口基地址
    9f90:	4913      	ldr	r1, [pc, #76]	; (9fe0 <gpio_init+0x70>)
    9f92:	5850      	ldr	r0, [r2, r1]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:43
	PORT_PCR_REG(port_ptr,pin) &= ~PORT_PCR_MUX_MASK;//置D10-D8=000
    9f94:	7832      	ldrb	r2, [r6, #0]
    9f96:	0092      	lsls	r2, r2, #2
    9f98:	58d1      	ldr	r1, [r2, r3]
    9f9a:	4d12      	ldr	r5, [pc, #72]	; (9fe4 <gpio_init+0x74>)
    9f9c:	4029      	ands	r1, r5
    9f9e:	50d1      	str	r1, [r2, r3]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:44
	PORT_PCR_REG(port_ptr,pin) |= PORT_PCR_MUX(1);//置D10-D8=001
    9fa0:	7832      	ldrb	r2, [r6, #0]
    9fa2:	0092      	lsls	r2, r2, #2
    9fa4:	58d6      	ldr	r6, [r2, r3]
    9fa6:	2180      	movs	r1, #128	; 0x80
    9fa8:	0049      	lsls	r1, r1, #1
    9faa:	4331      	orrs	r1, r6
    9fac:	50d1      	str	r1, [r2, r3]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:47
	if(dir == 1)  //输出引脚
    9fae:	2f01      	cmp	r7, #1
    9fb0:	d008      	beq.n	9fc4 <gpio_init+0x54>
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:56
		BCLR(pin,GPIO_PDDR_REG(gpio_ptr));//数据方向寄存器的pin位=0，定义为输入
    9fb2:	6943      	ldr	r3, [r0, #20]
    9fb4:	aa02      	add	r2, sp, #8
    9fb6:	7991      	ldrb	r1, [r2, #6]
    9fb8:	2201      	movs	r2, #1
    9fba:	408a      	lsls	r2, r1
    9fbc:	4393      	bics	r3, r2
    9fbe:	6143      	str	r3, [r0, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:58
}
    9fc0:	b005      	add	sp, #20
    9fc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:50
		BSET(pin,GPIO_PDDR_REG(gpio_ptr));
    9fc4:	6943      	ldr	r3, [r0, #20]
    9fc6:	aa02      	add	r2, sp, #8
    9fc8:	7991      	ldrb	r1, [r2, #6]
    9fca:	2201      	movs	r2, #1
    9fcc:	408a      	lsls	r2, r1
    9fce:	4313      	orrs	r3, r2
    9fd0:	6143      	str	r3, [r0, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/gpio.c:52
		gpio_set(port_pin,state);   
    9fd2:	9901      	ldr	r1, [sp, #4]
    9fd4:	0020      	movs	r0, r4
    9fd6:	f7ff ffa9 	bl	9f2c <gpio_set>
    9fda:	e7f1      	b.n	9fc0 <gpio_init+0x50>
    9fdc:	0000b0bc 	.word	0x0000b0bc
    9fe0:	0000b0a8 	.word	0x0000b0a8
    9fe4:	fffff8ff 	.word	0xfffff8ff

00009fe8 <Vectors_Init>:
Vectors_Init():
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:15
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
    9fe8:	b580      	push	{r7, lr}
    9fea:	4f1d      	ldr	r7, [pc, #116]	; (a060 <Vectors_Init+0x78>)
    9fec:	44bd      	add	sp, r7
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:19
    //有用户程序，编译本段代码
    #if (GEC_USER_SECTOR_START!=0)   
    //（1）若Flash倒数2扇区的前24字节为空，则写入设备序列号及软件版本号初值
    if(flash_isempty(MCU_SECTOR_NUM-1,24))
    9fee:	2118      	movs	r1, #24
    9ff0:	203f      	movs	r0, #63	; 0x3f
    9ff2:	f7ff ff07 	bl	9e04 <flash_isempty>
    9ff6:	2800      	cmp	r0, #0
    9ff8:	d12b      	bne.n	a052 <Vectors_Init+0x6a>
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:28
    }
    //（2）继承BIOS的串口中断              
    void ** bios=MCU_FLASH_ADDR_START;   //向量表起始地址  
    uint32_t user[MCU_SECTORSIZE/4];     //向量表变量数组
    //读取USER中断向量表各中断处理程序地址赋给user数组
    flash_read_physical((uint8_t *)user,GEC_USER_SECTOR_START*
    9ffa:	2280      	movs	r2, #128	; 0x80
    9ffc:	21d0      	movs	r1, #208	; 0xd0
    9ffe:	00d2      	lsls	r2, r2, #3
    a000:	01c9      	lsls	r1, r1, #7
    a002:	a802      	add	r0, sp, #8
    a004:	f7ff fefa 	bl	9dfc <flash_read_physical>
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:32
    MCU_SECTORSIZE+MCU_FLASH_ADDR_START,MCU_SECTORSIZE);
    //判断USER中串口更新中断是否为BIOS对应中断地址。若是，则不作操作；否则修改
    //为BIOS对应中断地址
    if(user[BIOS_UART_UPDATE_IRQn] != (uint32_t)bios[BIOS_UART_UPDATE_IRQn])
    a008:	2378      	movs	r3, #120	; 0x78
    a00a:	681b      	ldr	r3, [r3, #0]
    a00c:	9a20      	ldr	r2, [sp, #128]	; 0x80
    a00e:	429a      	cmp	r2, r3
    a010:	d010      	beq.n	a034 <Vectors_Init+0x4c>
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:35
    {
        //改变User中断向量表中BIOS_UART中断向量
        flash_erase(GEC_USER_SECTOR_START);
    a012:	201a      	movs	r0, #26
    a014:	f7ff ff28 	bl	9e68 <flash_erase>
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:37
        //改USER中断向量表的BIOS程序写入串口的中断处理程序地址
        user[2]=(uint32_t)bios[2];     //【20200903】
    a018:	2308      	movs	r3, #8
    a01a:	681b      	ldr	r3, [r3, #0]
    a01c:	9304      	str	r3, [sp, #16]
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:38
        user[BIOS_UART_UPDATE_IRQn]=(uint32_t)bios[BIOS_UART_UPDATE_IRQn];
    a01e:	2378      	movs	r3, #120	; 0x78
    a020:	681b      	ldr	r3, [r3, #0]
    a022:	9301      	str	r3, [sp, #4]
    a024:	9320      	str	r3, [sp, #128]	; 0x80
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:39
        flash_write_physical(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    a026:	2180      	movs	r1, #128	; 0x80
    a028:	20d0      	movs	r0, #208	; 0xd0
    a02a:	aa02      	add	r2, sp, #8
    a02c:	00c9      	lsls	r1, r1, #3
    a02e:	01c0      	lsls	r0, r0, #7
    a030:	f7ff ff4e 	bl	9ed0 <flash_write_physical>
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:44
        MCU_FLASH_ADDR_START,MCU_SECTORSIZE,(uint8_t *)user);
    }
    
    //（3）中断向量表指针重定向到USER程序的中断向量表
    SCB->VTOR = (uint32_t)(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    a034:	4b0b      	ldr	r3, [pc, #44]	; (a064 <Vectors_Init+0x7c>)
    a036:	22d0      	movs	r2, #208	; 0xd0
    a038:	01d2      	lsls	r2, r2, #7
    a03a:	609a      	str	r2, [r3, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:47
    MCU_FLASH_ADDR_START);  
    //（4）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+
    a03c:	4b0a      	ldr	r3, [pc, #40]	; (a068 <Vectors_Init+0x80>)
    a03e:	22e0      	movs	r2, #224	; 0xe0
    a040:	0192      	lsls	r2, r2, #6
    a042:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:50
    GEC_COMPONENT_LST_START*MCU_SECTORSIZE); 
    //（5）printf提示             
    printf("  【User提示】：将进入User的main()执行...\r\n");
    a044:	4809      	ldr	r0, [pc, #36]	; (a06c <Vectors_Init+0x84>)
    a046:	f000 fc81 	bl	a94c <myprintf>
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:53
    
    #endif
}
    a04a:	2381      	movs	r3, #129	; 0x81
    a04c:	00db      	lsls	r3, r3, #3
    a04e:	449d      	add	sp, r3
    a050:	bd80      	pop	{r7, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/gec.c:21
        flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    a052:	20fc      	movs	r0, #252	; 0xfc
    a054:	4a06      	ldr	r2, [pc, #24]	; (a070 <Vectors_Init+0x88>)
    a056:	2118      	movs	r1, #24
    a058:	0200      	lsls	r0, r0, #8
    a05a:	f7ff ff39 	bl	9ed0 <flash_write_physical>
    a05e:	e7cc      	b.n	9ffa <Vectors_Init+0x12>
    a060:	fffffbf8 	.word	0xfffffbf8
    a064:	e000ed00 	.word	0xe000ed00
    a068:	20000488 	.word	0x20000488
    a06c:	0000b0ec 	.word	0x0000b0ec
    a070:	0000b0d0 	.word	0x0000b0d0

0000a074 <uart_is_uartNo>:
uart_is_uartNo():
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:539
//参数说明：串口号uartNo  :UART_0、UART_1、UART_2
//功能概要：为程序健壮性而判断uartNo是否在串口数字范围内
//=====================================================================
uint8_t uart_is_uartNo(uint8_t uartNo)
{
    if(uartNo < UART_0 || uartNo > UART_2)
    a074:	2802      	cmp	r0, #2
    a076:	d801      	bhi.n	a07c <uart_is_uartNo+0x8>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:542
        return 0;
    else
        return 1;
    a078:	2001      	movs	r0, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:543
}
    a07a:	4770      	bx	lr
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:540
        return 0;
    a07c:	2000      	movs	r0, #0
    a07e:	e7fc      	b.n	a07a <uart_is_uartNo+0x6>

0000a080 <uart_send1>:
uart_send1():
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:173
{
    a080:	b570      	push	{r4, r5, r6, lr}
    a082:	0005      	movs	r5, r0
    a084:	000c      	movs	r4, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:177
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    a086:	1e43      	subs	r3, r0, #1
    a088:	009b      	lsls	r3, r3, #2
    a08a:	4a11      	ldr	r2, [pc, #68]	; (a0d0 <uart_send1+0x50>)
    a08c:	589e      	ldr	r6, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:185
    if(!uart_is_uartNo(uartNo))
    a08e:	f7ff fff1 	bl	a074 <uart_is_uartNo>
    a092:	2800      	cmp	r0, #0
    a094:	d016      	beq.n	a0c4 <uart_send1+0x44>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:190
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a096:	2300      	movs	r3, #0
    a098:	e004      	b.n	a0a4 <uart_send1+0x24>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:204
            if (UART_S1_REG(UART_2h_1_2) & UART_S1_TDRE_MASK )
    a09a:	7932      	ldrb	r2, [r6, #4]
    a09c:	b252      	sxtb	r2, r2
    a09e:	2a00      	cmp	r2, #0
    a0a0:	db11      	blt.n	a0c6 <uart_send1+0x46>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:190 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a0a2:	3301      	adds	r3, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:190 (discriminator 1)
    a0a4:	4a0b      	ldr	r2, [pc, #44]	; (a0d4 <uart_send1+0x54>)
    a0a6:	4293      	cmp	r3, r2
    a0a8:	d808      	bhi.n	a0bc <uart_send1+0x3c>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:192
        if(0==uartNo)     //判断使用的哪个串口
    a0aa:	2d00      	cmp	r5, #0
    a0ac:	d1f5      	bne.n	a09a <uart_send1+0x1a>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:195
            if ( UART0_S1_REG(UART_2h_0) & UART0_S1_TDRE_MASK )
    a0ae:	4a0a      	ldr	r2, [pc, #40]	; (a0d8 <uart_send1+0x58>)
    a0b0:	7912      	ldrb	r2, [r2, #4]
    a0b2:	b252      	sxtb	r2, r2
    a0b4:	2a00      	cmp	r2, #0
    a0b6:	daf4      	bge.n	a0a2 <uart_send1+0x22>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:197
                UART0_D_REG(UART_2h_0) = ch;
    a0b8:	4a07      	ldr	r2, [pc, #28]	; (a0d8 <uart_send1+0x58>)
    a0ba:	71d4      	strb	r4, [r2, #7]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:217
    if (t >= 0xFBBB)
    a0bc:	4a05      	ldr	r2, [pc, #20]	; (a0d4 <uart_send1+0x54>)
    a0be:	4293      	cmp	r3, r2
    a0c0:	d803      	bhi.n	a0ca <uart_send1+0x4a>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:220
        return 1; //成功发送
    a0c2:	2001      	movs	r0, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:221
}
    a0c4:	bd70      	pop	{r4, r5, r6, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:206
                UART_D_REG(UART_2h_1_2) = ch;
    a0c6:	71f4      	strb	r4, [r6, #7]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:207
                break;
    a0c8:	e7f8      	b.n	a0bc <uart_send1+0x3c>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:218
        return 0; //发送超时，发送失败
    a0ca:	2000      	movs	r0, #0
    a0cc:	e7fa      	b.n	a0c4 <uart_send1+0x44>
    a0ce:	46c0      	nop			; (mov r8, r8)
    a0d0:	0000b118 	.word	0x0000b118
    a0d4:	0000fbba 	.word	0x0000fbba
    a0d8:	4006a000 	.word	0x4006a000

0000a0dc <uart_re1>:
uart_re1():
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:285
{
    a0dc:	b570      	push	{r4, r5, r6, lr}
    a0de:	0004      	movs	r4, r0
    a0e0:	000e      	movs	r6, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:289
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    a0e2:	1e43      	subs	r3, r0, #1
    a0e4:	009b      	lsls	r3, r3, #2
    a0e6:	4a14      	ldr	r2, [pc, #80]	; (a138 <uart_re1+0x5c>)
    a0e8:	589d      	ldr	r5, [r3, r2]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:292
    if(!uart_is_uartNo(uartNo))
    a0ea:	f7ff ffc3 	bl	a074 <uart_is_uartNo>
    a0ee:	2800      	cmp	r0, #0
    a0f0:	d001      	beq.n	a0f6 <uart_re1+0x1a>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:298
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a0f2:	2300      	movs	r3, #0
    a0f4:	e006      	b.n	a104 <uart_re1+0x28>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:294
        *fp=0;
    a0f6:	2300      	movs	r3, #0
    a0f8:	7033      	strb	r3, [r6, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:327
}
    a0fa:	bd70      	pop	{r4, r5, r6, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:313
            if(UART_S1_REG(UART_2h_1_2) & UART_S1_RDRF_MASK)
    a0fc:	792a      	ldrb	r2, [r5, #4]
    a0fe:	0692      	lsls	r2, r2, #26
    a100:	d415      	bmi.n	a12e <uart_re1+0x52>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:298 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    a102:	3301      	adds	r3, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:298 (discriminator 1)
    a104:	4a0d      	ldr	r2, [pc, #52]	; (a13c <uart_re1+0x60>)
    a106:	4293      	cmp	r3, r2
    a108:	d80a      	bhi.n	a120 <uart_re1+0x44>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:300
        if(0==uartNo)  //判断使用的哪个串口
    a10a:	2c00      	cmp	r4, #0
    a10c:	d1f6      	bne.n	a0fc <uart_re1+0x20>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:303
        if (UART0_S1_REG(UART_2h_0) & UART0_S1_RDRF_MASK)
    a10e:	4a0c      	ldr	r2, [pc, #48]	; (a140 <uart_re1+0x64>)
    a110:	7912      	ldrb	r2, [r2, #4]
    a112:	0692      	lsls	r2, r2, #26
    a114:	d5f5      	bpl.n	a102 <uart_re1+0x26>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:305
                dat=UART0_D_REG(UART_2h_0);    //获取数据,清接收中断位
    a116:	4a0a      	ldr	r2, [pc, #40]	; (a140 <uart_re1+0x64>)
    a118:	79d0      	ldrb	r0, [r2, #7]
    a11a:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:306
                *fp = 1;  //接收成功
    a11c:	2201      	movs	r2, #1
    a11e:	7032      	strb	r2, [r6, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:321
    if(t >= 0xFBBB) 
    a120:	4a06      	ldr	r2, [pc, #24]	; (a13c <uart_re1+0x60>)
    a122:	4293      	cmp	r3, r2
    a124:	d9e9      	bls.n	a0fa <uart_re1+0x1e>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:324
        *fp = 0;    //未收到数据
    a126:	2300      	movs	r3, #0
    a128:	7033      	strb	r3, [r6, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:323
        dat = 0xFF; 
    a12a:	20ff      	movs	r0, #255	; 0xff
    a12c:	e7e5      	b.n	a0fa <uart_re1+0x1e>
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:315
                dat=UART_D_REG(UART_2h_1_2);    //获取数据,清接收中断位
    a12e:	79e8      	ldrb	r0, [r5, #7]
    a130:	b2c0      	uxtb	r0, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:316
                *fp= 1;  //接收成功
    a132:	2201      	movs	r2, #1
    a134:	7032      	strb	r2, [r6, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/uart.c:317
                break;
    a136:	e7f3      	b.n	a120 <uart_re1+0x44>
    a138:	0000b118 	.word	0x0000b118
    a13c:	0000fbba 	.word	0x0000fbba
    a140:	4006a000 	.word	0x4006a000

0000a144 <UART0_IRQHandler>:
UART0_IRQHandler():
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:16
//功    能：收到一个字节，直接返回该字节
//备    注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
//          （1-有UART接收中断，0-没有UART接收中断）
//======================================================================
void UART_User_Handler(void)
{
    a144:	b510      	push	{r4, lr}
    a146:	b082      	sub	sp, #8
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:19
	uint8_t ch;
	uint8_t flag;
	DISABLE_INTERRUPTS;      //关总中断
    a148:	b672      	cpsid	i
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:22
	//------------------------------------------------------------------
	//接收一个字节
	ch = uart_re1(UART_User, &flag);   //调用接收一个字节的函数，清接收中断位
    a14a:	466b      	mov	r3, sp
    a14c:	1ddc      	adds	r4, r3, #7
    a14e:	0021      	movs	r1, r4
    a150:	2000      	movs	r0, #0
    a152:	f7ff ffc3 	bl	a0dc <uart_re1>
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:23
	if(flag)   //有数据
    a156:	7823      	ldrb	r3, [r4, #0]
    a158:	2b00      	cmp	r3, #0
    a15a:	d102      	bne.n	a162 <UART0_IRQHandler+0x1e>
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:28
	{
		uart_send1(UART_User,ch);//回发接收到的字节
	}
	//------------------------------------------------------------------
	ENABLE_INTERRUPTS;       //开总中断
    a15c:	b662      	cpsie	i
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:29
}
    a15e:	b002      	add	sp, #8
    a160:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/isr.c:25
		uart_send1(UART_User,ch);//回发接收到的字节
    a162:	0001      	movs	r1, r0
    a164:	2000      	movs	r0, #0
    a166:	f7ff ff8b 	bl	a080 <uart_send1>
    a16a:	e7f7      	b.n	a15c <UART0_IRQHandler+0x18>

0000a16c <printk_putc>:
printk_putc():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:26
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
    a16c:	b510      	push	{r4, lr}
    a16e:	000c      	movs	r4, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:27
	switch (info->dest) {
    a170:	6813      	ldr	r3, [r2, #0]
    a172:	2b01      	cmp	r3, #1
    a174:	d005      	beq.n	a182 <printk_putc+0x16>
    a176:	2b02      	cmp	r3, #2
    a178:	d007      	beq.n	a18a <printk_putc+0x1e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:38
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
    a17a:	6823      	ldr	r3, [r4, #0]
    a17c:	3301      	adds	r3, #1
    a17e:	6023      	str	r3, [r4, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:39
}
    a180:	bd10      	pop	{r4, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:29
		info->func((char) c);
    a182:	6853      	ldr	r3, [r2, #4]
    a184:	b240      	sxtb	r0, r0
    a186:	4798      	blx	r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:30
		break;
    a188:	e7f7      	b.n	a17a <printk_putc+0xe>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:32
		*(info->loc) = (unsigned char) c;
    a18a:	6893      	ldr	r3, [r2, #8]
    a18c:	7018      	strb	r0, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:33
		++(info->loc);
    a18e:	6893      	ldr	r3, [r2, #8]
    a190:	3301      	adds	r3, #1
    a192:	6093      	str	r3, [r2, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:34
		break;
    a194:	e7f1      	b.n	a17a <printk_putc+0xe>

0000a196 <printk_mknumstr>:
printk_mknumstr():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:126
//       neg:有无符号:判断数据时有符号还是无符号整形
//       radix:格式选择:确定输出格式例如：十进制或十六进制...
//函数返回：无
//======================================================================
static int printk_mknumstr(char *numstr, void *nump, int neg, int radix)
{
    a196:	b5f0      	push	{r4, r5, r6, r7, lr}
    a198:	b083      	sub	sp, #12
    a19a:	0016      	movs	r6, r2
    a19c:	001d      	movs	r5, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:134
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
    a19e:	1c47      	adds	r7, r0, #1
    a1a0:	2300      	movs	r3, #0
    a1a2:	7003      	strb	r3, [r0, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:136

	if (neg) {
    a1a4:	2a00      	cmp	r2, #0
    a1a6:	d01f      	beq.n	a1e8 <printk_mknumstr+0x52>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:137
		a = *(int *) nump;
    a1a8:	680c      	ldr	r4, [r1, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:138
		if (a == 0) {
    a1aa:	2c00      	cmp	r4, #0
    a1ac:	d001      	beq.n	a1b2 <printk_mknumstr+0x1c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:132
	nlen = 0;
    a1ae:	2600      	movs	r6, #0
    a1b0:	e00b      	b.n	a1ca <printk_mknumstr+0x34>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:139
			*nstrp = '0';
    a1b2:	3330      	adds	r3, #48	; 0x30
    a1b4:	7043      	strb	r3, [r0, #1]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:140
			++nlen;
    a1b6:	2601      	movs	r6, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:176
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
    a1b8:	0030      	movs	r0, r6
    a1ba:	b003      	add	sp, #12
    a1bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:147
				c = ~c + 1 + '0';
    a1be:	2330      	movs	r3, #48	; 0x30
    a1c0:	1a59      	subs	r1, r3, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:152
			*nstrp++ = (char) c;
    a1c2:	7039      	strb	r1, [r7, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:153
			++nlen;
    a1c4:	3601      	adds	r6, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:152
			*nstrp++ = (char) c;
    a1c6:	3701      	adds	r7, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:151
			a = b;
    a1c8:	9c01      	ldr	r4, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:143
		while (a != 0) {
    a1ca:	2c00      	cmp	r4, #0
    a1cc:	d0f4      	beq.n	a1b8 <printk_mknumstr+0x22>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:144
			b = (int) a / (int) radix;
    a1ce:	0029      	movs	r1, r5
    a1d0:	0020      	movs	r0, r4
    a1d2:	f7fc fdf3 	bl	6dbc <__divsi3>
    a1d6:	9001      	str	r0, [sp, #4]
    a1d8:	0029      	movs	r1, r5
    a1da:	0020      	movs	r0, r4
    a1dc:	f7fc fed4 	bl	6f88 <__aeabi_idivmod>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:146
			if (c < 0) {
    a1e0:	2900      	cmp	r1, #0
    a1e2:	dbec      	blt.n	a1be <printk_mknumstr+0x28>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:149
				c = c + '0';
    a1e4:	3130      	adds	r1, #48	; 0x30
    a1e6:	e7ec      	b.n	a1c2 <printk_mknumstr+0x2c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:156
		ua = *(unsigned int *) nump;
    a1e8:	680c      	ldr	r4, [r1, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:157
		if (ua == 0) {
    a1ea:	2c00      	cmp	r4, #0
    a1ec:	d108      	bne.n	a200 <printk_mknumstr+0x6a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:158
			*nstrp = '0';
    a1ee:	2330      	movs	r3, #48	; 0x30
    a1f0:	7043      	strb	r3, [r0, #1]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:159
			++nlen;
    a1f2:	2601      	movs	r6, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:160
			goto done;
    a1f4:	e7e0      	b.n	a1b8 <printk_mknumstr+0x22>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:168
				uc = uc - 10 + 'A';
    a1f6:	3437      	adds	r4, #55	; 0x37
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:171
			*nstrp++ = (char) uc;
    a1f8:	703c      	strb	r4, [r7, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:172
			++nlen;
    a1fa:	3601      	adds	r6, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:171
			*nstrp++ = (char) uc;
    a1fc:	3701      	adds	r7, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:170
			ua = ub;
    a1fe:	0004      	movs	r4, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:162
		while (ua != 0) {
    a200:	2c00      	cmp	r4, #0
    a202:	d0d9      	beq.n	a1b8 <printk_mknumstr+0x22>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:163
			ub = (unsigned int) ua / (unsigned int) radix;
    a204:	0029      	movs	r1, r5
    a206:	0020      	movs	r0, r4
    a208:	f7fc fd4e 	bl	6ca8 <__udivsi3>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:164
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
    a20c:	0003      	movs	r3, r0
    a20e:	436b      	muls	r3, r5
    a210:	1ae4      	subs	r4, r4, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:165
			if (uc < 10) {
    a212:	2c09      	cmp	r4, #9
    a214:	d8ef      	bhi.n	a1f6 <printk_mknumstr+0x60>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:166
				uc = uc + '0';
    a216:	3430      	adds	r4, #48	; 0x30
    a218:	e7ee      	b.n	a1f8 <printk_mknumstr+0x62>

0000a21a <printk_pad_zero>:
printk_pad_zero():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:179
/********************************************************************/
static void printk_pad_zero(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
    a21a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a21c:	0004      	movs	r4, r0
    a21e:	000d      	movs	r5, r1
    a220:	0017      	movs	r7, r2
    a222:	001e      	movs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:182
	int i;

	for (i = curlen; i < field_width; i++) {
    a224:	e005      	b.n	a232 <printk_pad_zero+0x18>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:183 (discriminator 3)
		printk_putc('0', count, info);
    a226:	0032      	movs	r2, r6
    a228:	0039      	movs	r1, r7
    a22a:	2030      	movs	r0, #48	; 0x30
    a22c:	f7ff ff9e 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:182 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    a230:	3401      	adds	r4, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:182 (discriminator 1)
    a232:	42ac      	cmp	r4, r5
    a234:	dbf7      	blt.n	a226 <printk_pad_zero+0xc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:185
	}
}
    a236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000a238 <printk_pad_space>:
printk_pad_space():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:189

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
    a238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a23a:	0004      	movs	r4, r0
    a23c:	000d      	movs	r5, r1
    a23e:	0017      	movs	r7, r2
    a240:	001e      	movs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:192
	int i;

	for (i = curlen; i < field_width; i++) {
    a242:	e005      	b.n	a250 <printk_pad_space+0x18>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:193 (discriminator 3)
		printk_putc(' ', count, info);
    a244:	0032      	movs	r2, r6
    a246:	0039      	movs	r1, r7
    a248:	2020      	movs	r0, #32
    a24a:	f7ff ff8f 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:192 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    a24e:	3401      	adds	r4, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:192 (discriminator 1)
    a250:	42ac      	cmp	r4, r5
    a252:	dbf7      	blt.n	a244 <printk_pad_space+0xc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:195
	}
}
    a254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000a256 <out_char>:
out_char():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:17
void out_char(char data) {
    a256:	b510      	push	{r4, lr}
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:18
	uart_send1(UART_printf, data);
    a258:	b2c1      	uxtb	r1, r0
    a25a:	2002      	movs	r0, #2
    a25c:	f7ff ff10 	bl	a080 <uart_send1>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:19
}
    a260:	bd10      	pop	{r4, pc}
	...

0000a264 <printk_mkfloatstr>:
printk_mkfloatstr():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:47
{
    a264:	b5f0      	push	{r4, r5, r6, r7, lr}
    a266:	46d6      	mov	lr, sl
    a268:	464f      	mov	r7, r9
    a26a:	b580      	push	{r7, lr}
    a26c:	b09b      	sub	sp, #108	; 0x6c
    a26e:	0004      	movs	r4, r0
    a270:	4689      	mov	r9, r1
    a272:	0015      	movs	r5, r2
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:48
	uint32_t p,i,j,k,a[5]={0},b[19]={0};
    a274:	2214      	movs	r2, #20
    a276:	2100      	movs	r1, #0
    a278:	a815      	add	r0, sp, #84	; 0x54
    a27a:	f000 fdee 	bl	ae5a <memset>
    a27e:	224c      	movs	r2, #76	; 0x4c
    a280:	2100      	movs	r1, #0
    a282:	a802      	add	r0, sp, #8
    a284:	f000 fde9 	bl	ae5a <memset>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:55
	p=(uint32_t)*f;//整数部分
    a288:	6826      	ldr	r6, [r4, #0]
    a28a:	6867      	ldr	r7, [r4, #4]
    a28c:	0030      	movs	r0, r6
    a28e:	0039      	movs	r1, r7
    a290:	f7fc ff18 	bl	70c4 <__aeabi_d2uiz>
    a294:	4682      	mov	sl, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:56
	tempf=(*f-p);
    a296:	f7ff fa8d 	bl	97b4 <__aeabi_ui2d>
    a29a:	0002      	movs	r2, r0
    a29c:	000b      	movs	r3, r1
    a29e:	0030      	movs	r0, r6
    a2a0:	0039      	movs	r1, r7
    a2a2:	f7fe feb3 	bl	900c <__aeabi_dsub>
    a2a6:	0006      	movs	r6, r0
    a2a8:	000f      	movs	r7, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:57
	if(precision_width==0)
    a2aa:	2d00      	cmp	r5, #0
    a2ac:	d10e      	bne.n	a2cc <printk_mkfloatstr+0x68>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:58
	q=(*f-p)*100000000000000000;//小数部分
    a2ae:	4a4b      	ldr	r2, [pc, #300]	; (a3dc <printk_mkfloatstr+0x178>)
    a2b0:	4b4b      	ldr	r3, [pc, #300]	; (a3e0 <printk_mkfloatstr+0x17c>)
    a2b2:	f7fe fc39 	bl	8b28 <__aeabi_dmul>
    a2b6:	f7fc ff23 	bl	7100 <__aeabi_d2ulz>
    a2ba:	0004      	movs	r4, r0
    a2bc:	9101      	str	r1, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:66
	k=0;
    a2be:	2500      	movs	r5, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:67
	while(m<1)
    a2c0:	e015      	b.n	a2ee <printk_mkfloatstr+0x8a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:62
		tempf*=10;
    a2c2:	2200      	movs	r2, #0
    a2c4:	4b47      	ldr	r3, [pc, #284]	; (a3e4 <printk_mkfloatstr+0x180>)
    a2c6:	f7fe fc2f 	bl	8b28 <__aeabi_dmul>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:61
		while(precision_width--)
    a2ca:	0025      	movs	r5, r4
    a2cc:	1e6c      	subs	r4, r5, #1
    a2ce:	2d00      	cmp	r5, #0
    a2d0:	d1f7      	bne.n	a2c2 <printk_mkfloatstr+0x5e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:63
		q=tempf;
    a2d2:	f7fc ff15 	bl	7100 <__aeabi_d2ulz>
    a2d6:	0004      	movs	r4, r0
    a2d8:	9101      	str	r1, [sp, #4]
    a2da:	e7f0      	b.n	a2be <printk_mkfloatstr+0x5a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:69
		m=m*10;
    a2dc:	2200      	movs	r2, #0
    a2de:	4b41      	ldr	r3, [pc, #260]	; (a3e4 <printk_mkfloatstr+0x180>)
    a2e0:	0030      	movs	r0, r6
    a2e2:	0039      	movs	r1, r7
    a2e4:	f7fe fc20 	bl	8b28 <__aeabi_dmul>
    a2e8:	0006      	movs	r6, r0
    a2ea:	000f      	movs	r7, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:70
		k++;
    a2ec:	3501      	adds	r5, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:67
	while(m<1)
    a2ee:	2200      	movs	r2, #0
    a2f0:	4b3d      	ldr	r3, [pc, #244]	; (a3e8 <printk_mkfloatstr+0x184>)
    a2f2:	0030      	movs	r0, r6
    a2f4:	0039      	movs	r1, r7
    a2f6:	f7fc fe63 	bl	6fc0 <__aeabi_dcmplt>
    a2fa:	2800      	cmp	r0, #0
    a2fc:	d1ee      	bne.n	a2dc <printk_mkfloatstr+0x78>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:72
	k--;          //记录小数点后到第一位不为零的小数之前 有多少个0.
    a2fe:	1e6f      	subs	r7, r5, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:75
	if(0==p)     //整数部分为0
    a300:	4653      	mov	r3, sl
    a302:	2b00      	cmp	r3, #0
    a304:	d121      	bne.n	a34a <printk_mkfloatstr+0xe6>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:76
		c[i++]='0';
    a306:	3330      	adds	r3, #48	; 0x30
    a308:	464a      	mov	r2, r9
    a30a:	7013      	strb	r3, [r2, #0]
    a30c:	3b2f      	subs	r3, #47	; 0x2f
    a30e:	469a      	mov	sl, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:91
	c[i++]='.';     //小数点
    a310:	4653      	mov	r3, sl
    a312:	1c5d      	adds	r5, r3, #1
    a314:	232e      	movs	r3, #46	; 0x2e
    a316:	464a      	mov	r2, r9
    a318:	4651      	mov	r1, sl
    a31a:	5453      	strb	r3, [r2, r1]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:92
	if(0==q)        //小数部分为0
    a31c:	9b01      	ldr	r3, [sp, #4]
    a31e:	4323      	orrs	r3, r4
    a320:	d023      	beq.n	a36a <printk_mkfloatstr+0x106>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:96
		j=0;
    a322:	2600      	movs	r6, #0
    a324:	e039      	b.n	a39a <printk_mkfloatstr+0x136>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:82
			a[j++]=p%10;
    a326:	1c75      	adds	r5, r6, #1
    a328:	210a      	movs	r1, #10
    a32a:	4650      	mov	r0, sl
    a32c:	f7fc fd42 	bl	6db4 <__aeabi_uidivmod>
    a330:	00b6      	lsls	r6, r6, #2
    a332:	ab15      	add	r3, sp, #84	; 0x54
    a334:	50f1      	str	r1, [r6, r3]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:83
			p/=10;
    a336:	210a      	movs	r1, #10
    a338:	4650      	mov	r0, sl
    a33a:	f7fc fcb5 	bl	6ca8 <__udivsi3>
    a33e:	4682      	mov	sl, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:82
			a[j++]=p%10;
    a340:	002e      	movs	r6, r5
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:80
		while(p!=0)//倒序的数字
    a342:	4653      	mov	r3, sl
    a344:	2b00      	cmp	r3, #0
    a346:	d1ee      	bne.n	a326 <printk_mkfloatstr+0xc2>
    a348:	e00c      	b.n	a364 <printk_mkfloatstr+0x100>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:79
		j=0;
    a34a:	2600      	movs	r6, #0
    a34c:	e7f9      	b.n	a342 <printk_mkfloatstr+0xde>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:87
			c[i++]=a[j-1]+'0';
    a34e:	3e01      	subs	r6, #1
    a350:	00b2      	lsls	r2, r6, #2
    a352:	ab15      	add	r3, sp, #84	; 0x54
    a354:	58d3      	ldr	r3, [r2, r3]
    a356:	3330      	adds	r3, #48	; 0x30
    a358:	464a      	mov	r2, r9
    a35a:	4651      	mov	r1, sl
    a35c:	5453      	strb	r3, [r2, r1]
    a35e:	2301      	movs	r3, #1
    a360:	469c      	mov	ip, r3
    a362:	44e2      	add	sl, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:85
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
    a364:	2e00      	cmp	r6, #0
    a366:	d1f2      	bne.n	a34e <printk_mkfloatstr+0xea>
    a368:	e7d2      	b.n	a310 <printk_mkfloatstr+0xac>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:93
		c[i++]='0';
    a36a:	3330      	adds	r3, #48	; 0x30
    a36c:	5553      	strb	r3, [r2, r5]
    a36e:	3501      	adds	r5, #1
    a370:	e02a      	b.n	a3c8 <printk_mkfloatstr+0x164>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:100
			b[j++]=q%10;
    a372:	220a      	movs	r2, #10
    a374:	2300      	movs	r3, #0
    a376:	0020      	movs	r0, r4
    a378:	9901      	ldr	r1, [sp, #4]
    a37a:	f7fc fe83 	bl	7084 <__aeabi_uldivmod>
    a37e:	1c73      	adds	r3, r6, #1
    a380:	469a      	mov	sl, r3
    a382:	00b6      	lsls	r6, r6, #2
    a384:	ab02      	add	r3, sp, #8
    a386:	50f2      	str	r2, [r6, r3]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:101
			q/=10;
    a388:	220a      	movs	r2, #10
    a38a:	2300      	movs	r3, #0
    a38c:	0020      	movs	r0, r4
    a38e:	9901      	ldr	r1, [sp, #4]
    a390:	f7fc fe78 	bl	7084 <__aeabi_uldivmod>
    a394:	0004      	movs	r4, r0
    a396:	9101      	str	r1, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:100
			b[j++]=q%10;
    a398:	4656      	mov	r6, sl
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:98
		while(q!=0)//倒序的数字
    a39a:	9b01      	ldr	r3, [sp, #4]
    a39c:	4323      	orrs	r3, r4
    a39e:	d1e8      	bne.n	a372 <printk_mkfloatstr+0x10e>
    a3a0:	e005      	b.n	a3ae <printk_mkfloatstr+0x14a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:105
			b[j++]=0;
    a3a2:	00b3      	lsls	r3, r6, #2
    a3a4:	2200      	movs	r2, #0
    a3a6:	a902      	add	r1, sp, #8
    a3a8:	505a      	str	r2, [r3, r1]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:106
			k--;
    a3aa:	3f01      	subs	r7, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:105
			b[j++]=0;
    a3ac:	3601      	adds	r6, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:103
		while(k!=0)
    a3ae:	2f00      	cmp	r7, #0
    a3b0:	d1f7      	bne.n	a3a2 <printk_mkfloatstr+0x13e>
    a3b2:	e007      	b.n	a3c4 <printk_mkfloatstr+0x160>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:110
			c[i++]=b[j-1]+'0';
    a3b4:	3e01      	subs	r6, #1
    a3b6:	00b3      	lsls	r3, r6, #2
    a3b8:	aa02      	add	r2, sp, #8
    a3ba:	589b      	ldr	r3, [r3, r2]
    a3bc:	3330      	adds	r3, #48	; 0x30
    a3be:	464a      	mov	r2, r9
    a3c0:	5553      	strb	r3, [r2, r5]
    a3c2:	3501      	adds	r5, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:108
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
    a3c4:	2e00      	cmp	r6, #0
    a3c6:	d1f5      	bne.n	a3b4 <printk_mkfloatstr+0x150>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:114
	c[i]='\0';
    a3c8:	464b      	mov	r3, r9
    a3ca:	195b      	adds	r3, r3, r5
    a3cc:	2200      	movs	r2, #0
    a3ce:	701a      	strb	r2, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:116
}
    a3d0:	0028      	movs	r0, r5
    a3d2:	b01b      	add	sp, #108	; 0x6c
    a3d4:	bc0c      	pop	{r2, r3}
    a3d6:	4691      	mov	r9, r2
    a3d8:	469a      	mov	sl, r3
    a3da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a3dc:	85d8a000 	.word	0x85d8a000
    a3e0:	43763457 	.word	0x43763457
    a3e4:	40240000 	.word	0x40240000
    a3e8:	3ff00000 	.word	0x3ff00000

0000a3ec <printk>:
printk():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:204
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
    a3ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    a3ee:	46de      	mov	lr, fp
    a3f0:	4657      	mov	r7, sl
    a3f2:	464e      	mov	r6, r9
    a3f4:	4645      	mov	r5, r8
    a3f6:	b5e0      	push	{r5, r6, r7, lr}
    a3f8:	b095      	sub	sp, #84	; 0x54
    a3fa:	9000      	str	r0, [sp, #0]
    a3fc:	000d      	movs	r5, r1
    a3fe:	4690      	mov	r8, r2
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:228

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
    a400:	ac0b      	add	r4, sp, #44	; 0x2c
    a402:	2221      	movs	r2, #33	; 0x21
    a404:	2100      	movs	r1, #0
    a406:	0020      	movs	r0, r4
    a408:	f000 fd27 	bl	ae5a <memset>
    a40c:	2330      	movs	r3, #48	; 0x30
    a40e:	7023      	strb	r3, [r4, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:249
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
    a410:	2300      	movs	r3, #0
    a412:	930a      	str	r3, [sp, #40]	; 0x28
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
    a414:	3301      	adds	r3, #1
    a416:	9301      	str	r3, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:250
	length_modifier=0;
    a418:	2300      	movs	r3, #0
    a41a:	469a      	mov	sl, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:253
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
    a41c:	e00b      	b.n	a436 <printk+0x4a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:265
			if (c != '\n') {
				printk_putc(c, &count, info);
			}
			//输出换行符
			else {
				printk_putc(0x0D /* CR */, &count, info);
    a41e:	9c00      	ldr	r4, [sp, #0]
    a420:	0022      	movs	r2, r4
    a422:	a90a      	add	r1, sp, #40	; 0x28
    a424:	200d      	movs	r0, #13
    a426:	f7ff fea1 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:266
				printk_putc(0x0A /* LF */, &count, info);
    a42a:	0022      	movs	r2, r4
    a42c:	a90a      	add	r1, sp, #40	; 0x28
    a42e:	200a      	movs	r0, #10
    a430:	f7ff fe9c 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:253 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
    a434:	3501      	adds	r5, #1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:253 (discriminator 1)
    a436:	2000      	movs	r0, #0
    a438:	5628      	ldrsb	r0, [r5, r0]
    a43a:	2800      	cmp	r0, #0
    a43c:	d100      	bne.n	a440 <printk+0x54>
    a43e:	e27c      	b.n	a93a <printk+0x54e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:256
		if (c != '%')
    a440:	2825      	cmp	r0, #37	; 0x25
    a442:	d022      	beq.n	a48a <printk+0x9e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:260
			if (c != '\n') {
    a444:	280a      	cmp	r0, #10
    a446:	d0ea      	beq.n	a41e <printk+0x32>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:261
				printk_putc(c, &count, info);
    a448:	9a00      	ldr	r2, [sp, #0]
    a44a:	a90a      	add	r1, sp, #40	; 0x28
    a44c:	f7ff fe8e 	bl	a16c <printk_putc>
    a450:	e7f0      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:283
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
			case '-':
				flags_used |= FLAGS_MINUS;
    a452:	2301      	movs	r3, #1
    a454:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:204
{
    a456:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:280
		while (!done) {
    a458:	2900      	cmp	r1, #0
    a45a:	d11b      	bne.n	a494 <printk+0xa8>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:281
			switch (/* c = */*++p) {
    a45c:	1c68      	adds	r0, r5, #1
    a45e:	2301      	movs	r3, #1
    a460:	56eb      	ldrsb	r3, [r5, r3]
    a462:	3b20      	subs	r3, #32
    a464:	b2da      	uxtb	r2, r3
    a466:	2a10      	cmp	r2, #16
    a468:	d812      	bhi.n	a490 <printk+0xa4>
    a46a:	0093      	lsls	r3, r2, #2
    a46c:	4abe      	ldr	r2, [pc, #760]	; (a768 <printk+0x37c>)
    a46e:	58d3      	ldr	r3, [r2, r3]
    a470:	469f      	mov	pc, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:286
				break;
			case '+':
				flags_used |= FLAGS_PLUS;
    a472:	2302      	movs	r3, #2
    a474:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:287
				break;
    a476:	e7ee      	b.n	a456 <printk+0x6a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:289
			case ' ':
				flags_used |= FLAGS_SPACE;
    a478:	2304      	movs	r3, #4
    a47a:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:290
				break;
    a47c:	e7eb      	b.n	a456 <printk+0x6a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:292
			case '0':
				flags_used |= FLAGS_ZERO;
    a47e:	2308      	movs	r3, #8
    a480:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:293
				break;
    a482:	e7e8      	b.n	a456 <printk+0x6a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:295
			case '#':
				flags_used |= FLAGS_POUND;
    a484:	2310      	movs	r3, #16
    a486:	431e      	orrs	r6, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:296
				break;
    a488:	e7e5      	b.n	a456 <printk+0x6a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:278
		flags_used = 0;
    a48a:	2600      	movs	r6, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:279
		done = FALSE;
    a48c:	2100      	movs	r1, #0
    a48e:	e7e3      	b.n	a458 <printk+0x6c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:300
			default:
				/* we've gone one char too far */
				--p;
				done = TRUE;
    a490:	2101      	movs	r1, #1
    a492:	e7e1      	b.n	a458 <printk+0x6c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:307
			}
		}


		//检查%后再下一个字符 确定输出长度
		field_width = 0;
    a494:	2400      	movs	r4, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:308
		done = FALSE;
    a496:	2300      	movs	r3, #0
    a498:	001f      	movs	r7, r3
    a49a:	e000      	b.n	a49e <printk+0xb2>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:326
				field_width = (field_width * 10) + (c - '0');
				break;
			default:
				/* we've gone one char too far */
				--p;
				done = TRUE;
    a49c:	000f      	movs	r7, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:309
		while (!done) {
    a49e:	2f00      	cmp	r7, #0
    a4a0:	d10e      	bne.n	a4c0 <printk+0xd4>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:310
			switch (c = *++p) {
    a4a2:	1c68      	adds	r0, r5, #1
    a4a4:	2301      	movs	r3, #1
    a4a6:	56eb      	ldrsb	r3, [r5, r3]
    a4a8:	001a      	movs	r2, r3
    a4aa:	3a30      	subs	r2, #48	; 0x30
    a4ac:	b2d2      	uxtb	r2, r2
    a4ae:	2a09      	cmp	r2, #9
    a4b0:	d8f4      	bhi.n	a49c <printk+0xb0>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:321
				field_width = (field_width * 10) + (c - '0');
    a4b2:	00a2      	lsls	r2, r4, #2
    a4b4:	1912      	adds	r2, r2, r4
    a4b6:	0054      	lsls	r4, r2, #1
    a4b8:	3b30      	subs	r3, #48	; 0x30
    a4ba:	18e4      	adds	r4, r4, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:310
			switch (c = *++p) {
    a4bc:	0005      	movs	r5, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:322
				break;
    a4be:	e7ee      	b.n	a49e <printk+0xb2>
    a4c0:	46bb      	mov	fp, r7
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:331
				break;
			}
		}
		//此时字符为%看是否有.输入
		if (/* (c = *++p) */*++p == '.') {
    a4c2:	1c6f      	adds	r7, r5, #1
    a4c4:	2301      	movs	r3, #1
    a4c6:	56eb      	ldrsb	r3, [r5, r3]
    a4c8:	2b2e      	cmp	r3, #46	; 0x2e
    a4ca:	d019      	beq.n	a500 <printk+0x114>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:368
		} else {
			/* we've gone one char too far */
			--p;
#if 1
			precision_used = FALSE;
			precision_width = 0;
    a4cc:	2300      	movs	r3, #0
    a4ce:	4699      	mov	r9, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:367
			precision_used = FALSE;
    a4d0:	9301      	str	r3, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:372
#endif
		}
		//判断 输出的是否有lf、LF等
		switch (/* c = */*++p) {
    a4d2:	1c6b      	adds	r3, r5, #1
    a4d4:	2201      	movs	r2, #1
    a4d6:	56aa      	ldrsb	r2, [r5, r2]
    a4d8:	2a68      	cmp	r2, #104	; 0x68
    a4da:	d004      	beq.n	a4e6 <printk+0xfa>
    a4dc:	2a6c      	cmp	r2, #108	; 0x6c
    a4de:	d027      	beq.n	a530 <printk+0x144>
    a4e0:	2a4c      	cmp	r2, #76	; 0x4c
    a4e2:	d02a      	beq.n	a53a <printk+0x14e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:384
		case 'L':
			 length_modifier |= LENMOD_L;
			break;
		default:
			/* we've gone one char too far */
			--p;
    a4e4:	002b      	movs	r3, r5
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:389
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
    a4e6:	1c5d      	adds	r5, r3, #1
    a4e8:	2001      	movs	r0, #1
    a4ea:	5618      	ldrsb	r0, [r3, r0]
    a4ec:	0003      	movs	r3, r0
    a4ee:	3b58      	subs	r3, #88	; 0x58
    a4f0:	b2da      	uxtb	r2, r3
    a4f2:	2a20      	cmp	r2, #32
    a4f4:	d900      	bls.n	a4f8 <printk+0x10c>
    a4f6:	e218      	b.n	a92a <printk+0x53e>
    a4f8:	0093      	lsls	r3, r2, #2
    a4fa:	4a9c      	ldr	r2, [pc, #624]	; (a76c <printk+0x380>)
    a4fc:	58d3      	ldr	r3, [r2, r3]
    a4fe:	469f      	mov	pc, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:337
			precision_width = 0;
    a500:	2300      	movs	r3, #0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:338
			done = FALSE;
    a502:	2000      	movs	r0, #0
    a504:	e000      	b.n	a508 <printk+0x11c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:359
					done = TRUE;
    a506:	4658      	mov	r0, fp
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:339
			while (!done) {
    a508:	2800      	cmp	r0, #0
    a50a:	d10e      	bne.n	a52a <printk+0x13e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:340
				switch ( c = *++p) {
    a50c:	1c7d      	adds	r5, r7, #1
    a50e:	2201      	movs	r2, #1
    a510:	56ba      	ldrsb	r2, [r7, r2]
    a512:	0011      	movs	r1, r2
    a514:	3930      	subs	r1, #48	; 0x30
    a516:	b2c9      	uxtb	r1, r1
    a518:	2909      	cmp	r1, #9
    a51a:	d8f4      	bhi.n	a506 <printk+0x11a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:352
				precision_width = (precision_width * 10) +	(c - '0');
    a51c:	0099      	lsls	r1, r3, #2
    a51e:	18c9      	adds	r1, r1, r3
    a520:	004b      	lsls	r3, r1, #1
    a522:	3a30      	subs	r2, #48	; 0x30
    a524:	189b      	adds	r3, r3, r2
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:340
				switch ( c = *++p) {
    a526:	002f      	movs	r7, r5
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:355
					break;
    a528:	e7ee      	b.n	a508 <printk+0x11c>
    a52a:	4699      	mov	r9, r3
    a52c:	003d      	movs	r5, r7
    a52e:	e7d0      	b.n	a4d2 <printk+0xe6>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:377
			 length_modifier |= LENMOD_l;
    a530:	2201      	movs	r2, #1
    a532:	4651      	mov	r1, sl
    a534:	4311      	orrs	r1, r2
    a536:	468a      	mov	sl, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:378
			break;
    a538:	e7d5      	b.n	a4e6 <printk+0xfa>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:380
			 length_modifier |= LENMOD_L;
    a53a:	2202      	movs	r2, #2
    a53c:	4651      	mov	r1, sl
    a53e:	4311      	orrs	r1, r2
    a540:	468a      	mov	sl, r1
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:381
			break;
    a542:	e7d0      	b.n	a4e6 <printk+0xfa>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:394
		case 'd':
		case 'i':
			//此时ap为指向可变参数列表的第一个参数
			//返回当前参数，并将ap指向下一个参数
			ival = (int) va_arg(ap, int);  
    a544:	4643      	mov	r3, r8
    a546:	3304      	adds	r3, #4
    a548:	9302      	str	r3, [sp, #8]
    a54a:	4643      	mov	r3, r8
    a54c:	681b      	ldr	r3, [r3, #0]
    a54e:	9309      	str	r3, [sp, #36]	; 0x24
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:396
			//将整型转换成字符型保存在vstr中，返回字符数vlen
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);
    a550:	230a      	movs	r3, #10
    a552:	2201      	movs	r2, #1
    a554:	a909      	add	r1, sp, #36	; 0x24
    a556:	a80b      	add	r0, sp, #44	; 0x2c
    a558:	f7ff fe1d 	bl	a196 <printk_mknumstr>
    a55c:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:398
			//指向转换后的最后一个字符
			vstrp = &vstr[vlen];  
    a55e:	af0b      	add	r7, sp, #44	; 0x2c
    a560:	444f      	add	r7, r9
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:401

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
    a562:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a564:	2b00      	cmp	r3, #0
    a566:	db07      	blt.n	a578 <printk+0x18c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:407
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    a568:	07b3      	lsls	r3, r6, #30
    a56a:	d519      	bpl.n	a5a0 <printk+0x1b4>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:409
					schar = '+';
					++vlen;
    a56c:	2301      	movs	r3, #1
    a56e:	469c      	mov	ip, r3
    a570:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:408
					schar = '+';
    a572:	332a      	adds	r3, #42	; 0x2a
    a574:	4698      	mov	r8, r3
    a576:	e004      	b.n	a582 <printk+0x196>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:403
				++vlen;
    a578:	2301      	movs	r3, #1
    a57a:	469c      	mov	ip, r3
    a57c:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:402
				schar = '-';
    a57e:	332c      	adds	r3, #44	; 0x2c
    a580:	4698      	mov	r8, r3
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:424
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    a582:	0733      	lsls	r3, r6, #28
    a584:	d51c      	bpl.n	a5c0 <printk+0x1d4>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:425
				if (schar)
    a586:	4643      	mov	r3, r8
    a588:	2b00      	cmp	r3, #0
    a58a:	d113      	bne.n	a5b4 <printk+0x1c8>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:428
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
    a58c:	9b00      	ldr	r3, [sp, #0]
    a58e:	aa0a      	add	r2, sp, #40	; 0x28
    a590:	0021      	movs	r1, r4
    a592:	4648      	mov	r0, r9
    a594:	f7ff fe41 	bl	a21a <printk_pad_zero>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:429
				vlen = field_width;
    a598:	46a1      	mov	r9, r4
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a59a:	9b02      	ldr	r3, [sp, #8]
    a59c:	4698      	mov	r8, r3
    a59e:	e162      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:411
					if (IS_FLAG_SPACE(flags_used)) {
    a5a0:	2304      	movs	r3, #4
    a5a2:	4033      	ands	r3, r6
    a5a4:	4698      	mov	r8, r3
    a5a6:	d0ec      	beq.n	a582 <printk+0x196>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:413
						++vlen;
    a5a8:	2301      	movs	r3, #1
    a5aa:	469c      	mov	ip, r3
    a5ac:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:412
						schar = ' ';
    a5ae:	331f      	adds	r3, #31
    a5b0:	4698      	mov	r8, r3
    a5b2:	e7e6      	b.n	a582 <printk+0x196>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
    a5b4:	9a00      	ldr	r2, [sp, #0]
    a5b6:	a90a      	add	r1, sp, #40	; 0x28
    a5b8:	4640      	mov	r0, r8
    a5ba:	f7ff fdd7 	bl	a16c <printk_putc>
    a5be:	e7e5      	b.n	a58c <printk+0x1a0>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:431
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a5c0:	07f3      	lsls	r3, r6, #31
    a5c2:	d505      	bpl.n	a5d0 <printk+0x1e4>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:442
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    a5c4:	4643      	mov	r3, r8
    a5c6:	2b00      	cmp	r3, #0
    a5c8:	d116      	bne.n	a5f8 <printk+0x20c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a5ca:	9b02      	ldr	r3, [sp, #8]
    a5cc:	4698      	mov	r8, r3
    a5ce:	e14a      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:432
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    a5d0:	9b00      	ldr	r3, [sp, #0]
    a5d2:	aa0a      	add	r2, sp, #40	; 0x28
    a5d4:	0021      	movs	r1, r4
    a5d6:	4648      	mov	r0, r9
    a5d8:	f7ff fe2e 	bl	a238 <printk_pad_space>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:434
					if (schar)
    a5dc:	4643      	mov	r3, r8
    a5de:	2b00      	cmp	r3, #0
    a5e0:	d102      	bne.n	a5e8 <printk+0x1fc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a5e2:	9b02      	ldr	r3, [sp, #8]
    a5e4:	4698      	mov	r8, r3
    a5e6:	e13e      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:435
						printk_putc(schar, &count, info);
    a5e8:	9a00      	ldr	r2, [sp, #0]
    a5ea:	a90a      	add	r1, sp, #40	; 0x28
    a5ec:	4640      	mov	r0, r8
    a5ee:	f7ff fdbd 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a5f2:	9b02      	ldr	r3, [sp, #8]
    a5f4:	4698      	mov	r8, r3
    a5f6:	e136      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:443
				printk_putc(schar, &count, info);
    a5f8:	9a00      	ldr	r2, [sp, #0]
    a5fa:	a90a      	add	r1, sp, #40	; 0x28
    a5fc:	4640      	mov	r0, r8
    a5fe:	f7ff fdb5 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    a602:	9b02      	ldr	r3, [sp, #8]
    a604:	4698      	mov	r8, r3
    a606:	e12e      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:457
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg(ap,double);
    a608:	230c      	movs	r3, #12
    a60a:	4443      	add	r3, r8
    a60c:	469b      	mov	fp, r3
    a60e:	4643      	mov	r3, r8
    a610:	6859      	ldr	r1, [r3, #4]
    a612:	689f      	ldr	r7, [r3, #8]
    a614:	9102      	str	r1, [sp, #8]
    a616:	000a      	movs	r2, r1
    a618:	003b      	movs	r3, r7
    a61a:	9206      	str	r2, [sp, #24]
    a61c:	9307      	str	r3, [sp, #28]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:461
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
    a61e:	2200      	movs	r2, #0
    a620:	2300      	movs	r3, #0
    a622:	9802      	ldr	r0, [sp, #8]
    a624:	0039      	movs	r1, r7
    a626:	f7fc fccb 	bl	6fc0 <__aeabi_dcmplt>
    a62a:	2800      	cmp	r0, #0
    a62c:	d106      	bne.n	a63c <printk+0x250>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:468
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    a62e:	07b3      	lsls	r3, r6, #30
    a630:	d424      	bmi.n	a67c <printk+0x290>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:472
					schar = '+';
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
    a632:	2704      	movs	r7, #4
    a634:	4037      	ands	r7, r6
    a636:	d008      	beq.n	a64a <printk+0x25e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:473
						schar = ' ';
    a638:	2720      	movs	r7, #32
    a63a:	e006      	b.n	a64a <printk+0x25e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
    a63c:	9a02      	ldr	r2, [sp, #8]
    a63e:	2180      	movs	r1, #128	; 0x80
    a640:	0609      	lsls	r1, r1, #24
    a642:	187b      	adds	r3, r7, r1
    a644:	9206      	str	r2, [sp, #24]
    a646:	9307      	str	r3, [sp, #28]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:462
				schar = '-';
    a648:	272d      	movs	r7, #45	; 0x2d
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:483
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
    a64a:	9b01      	ldr	r3, [sp, #4]
    a64c:	2b00      	cmp	r3, #0
    a64e:	d117      	bne.n	a680 <printk+0x294>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:491
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{	//浮点型精度到小数点后8位
				if(length_modifier==0)   
    a650:	4653      	mov	r3, sl
    a652:	2b00      	cmp	r3, #0
    a654:	d11b      	bne.n	a68e <printk+0x2a2>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:493
				{	//将整型转换成字符型保存在vstr中，返回字符数vlen
					vlen = printk_mkfloatstr(&fval,vstr,8);
    a656:	2208      	movs	r2, #8
    a658:	a90b      	add	r1, sp, #44	; 0x2c
    a65a:	a806      	add	r0, sp, #24
    a65c:	f7ff fe02 	bl	a264 <printk_mkfloatstr>
    a660:	9002      	str	r0, [sp, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:511
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    a662:	0733      	lsls	r3, r6, #28
    a664:	d520      	bpl.n	a6a8 <printk+0x2bc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:512
				if (schar)
    a666:	2f00      	cmp	r7, #0
    a668:	d118      	bne.n	a69c <printk+0x2b0>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:515
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
    a66a:	9b00      	ldr	r3, [sp, #0]
    a66c:	aa0a      	add	r2, sp, #40	; 0x28
    a66e:	0021      	movs	r1, r4
    a670:	9802      	ldr	r0, [sp, #8]
    a672:	f7ff fdd2 	bl	a21a <printk_pad_zero>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:516
				vlen = field_width;
    a676:	9402      	str	r4, [sp, #8]
    a678:	af0b      	add	r7, sp, #44	; 0x2c
    a67a:	e032      	b.n	a6e2 <printk+0x2f6>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:469
					schar = '+';
    a67c:	272b      	movs	r7, #43	; 0x2b
    a67e:	e7e4      	b.n	a64a <printk+0x25e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:486
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);
    a680:	464a      	mov	r2, r9
    a682:	a90b      	add	r1, sp, #44	; 0x2c
    a684:	a806      	add	r0, sp, #24
    a686:	f7ff fded 	bl	a264 <printk_mkfloatstr>
    a68a:	9002      	str	r0, [sp, #8]
    a68c:	e7e9      	b.n	a662 <printk+0x276>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:499
					vlen = printk_mkfloatstr(&fval,vstr,precision_width);
    a68e:	464a      	mov	r2, r9
    a690:	a90b      	add	r1, sp, #44	; 0x2c
    a692:	a806      	add	r0, sp, #24
    a694:	f7ff fde6 	bl	a264 <printk_mkfloatstr>
    a698:	9002      	str	r0, [sp, #8]
    a69a:	e7e2      	b.n	a662 <printk+0x276>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:513
					printk_putc(schar, &count, info);  //输出符号
    a69c:	9a00      	ldr	r2, [sp, #0]
    a69e:	a90a      	add	r1, sp, #40	; 0x28
    a6a0:	0038      	movs	r0, r7
    a6a2:	f7ff fd63 	bl	a16c <printk_putc>
    a6a6:	e7e0      	b.n	a66a <printk+0x27e>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:518
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a6a8:	07f3      	lsls	r3, r6, #31
    a6aa:	d507      	bpl.n	a6bc <printk+0x2d0>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:529
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    a6ac:	2f00      	cmp	r7, #0
    a6ae:	d0e3      	beq.n	a678 <printk+0x28c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:530
				printk_putc(schar, &count, info);
    a6b0:	9a00      	ldr	r2, [sp, #0]
    a6b2:	a90a      	add	r1, sp, #40	; 0x28
    a6b4:	0038      	movs	r0, r7
    a6b6:	f7ff fd59 	bl	a16c <printk_putc>
    a6ba:	e7dd      	b.n	a678 <printk+0x28c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:519
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    a6bc:	9b00      	ldr	r3, [sp, #0]
    a6be:	aa0a      	add	r2, sp, #40	; 0x28
    a6c0:	0021      	movs	r1, r4
    a6c2:	9802      	ldr	r0, [sp, #8]
    a6c4:	f7ff fdb8 	bl	a238 <printk_pad_space>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:521
					if (schar)
    a6c8:	2f00      	cmp	r7, #0
    a6ca:	d0d5      	beq.n	a678 <printk+0x28c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:522
						printk_putc(schar, &count, info);
    a6cc:	9a00      	ldr	r2, [sp, #0]
    a6ce:	a90a      	add	r1, sp, #40	; 0x28
    a6d0:	0038      	movs	r0, r7
    a6d2:	f7ff fd4b 	bl	a16c <printk_putc>
    a6d6:	e7cf      	b.n	a678 <printk+0x28c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:533
			}
			while (*vstrp)
				printk_putc(*vstrp++, &count, info);
    a6d8:	3701      	adds	r7, #1
    a6da:	9a00      	ldr	r2, [sp, #0]
    a6dc:	a90a      	add	r1, sp, #40	; 0x28
    a6de:	f7ff fd45 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:532
			while (*vstrp)
    a6e2:	2000      	movs	r0, #0
    a6e4:	5638      	ldrsb	r0, [r7, r0]
    a6e6:	2800      	cmp	r0, #0
    a6e8:	d1f6      	bne.n	a6d8 <printk+0x2ec>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:534
			if (IS_FLAG_MINUS(flags_used)) {
    a6ea:	07f3      	lsls	r3, r6, #31
    a6ec:	d401      	bmi.n	a6f2 <printk+0x306>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:457
			fval= (double)va_arg(ap,double);
    a6ee:	46d8      	mov	r8, fp
    a6f0:	e6a0      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:535
				printk_pad_space(vlen, field_width, &count, info);
    a6f2:	9b00      	ldr	r3, [sp, #0]
    a6f4:	aa0a      	add	r2, sp, #40	; 0x28
    a6f6:	0021      	movs	r1, r4
    a6f8:	9802      	ldr	r0, [sp, #8]
    a6fa:	f7ff fd9d 	bl	a238 <printk_pad_space>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:457
			fval= (double)va_arg(ap,double);
    a6fe:	46d8      	mov	r8, fp
    a700:	e698      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:541
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg(ap, unsigned int);
    a702:	4643      	mov	r3, r8
    a704:	3304      	adds	r3, #4
    a706:	9302      	str	r3, [sp, #8]
    a708:	4643      	mov	r3, r8
    a70a:	681b      	ldr	r3, [r3, #0]
    a70c:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:542
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    a70e:	2310      	movs	r3, #16
    a710:	2200      	movs	r2, #0
    a712:	a905      	add	r1, sp, #20
    a714:	a80b      	add	r0, sp, #44	; 0x2c
    a716:	f7ff fd3e 	bl	a196 <printk_mknumstr>
    a71a:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:543
			vstrp = &vstr[vlen];
    a71c:	af0b      	add	r7, sp, #44	; 0x2c
    a71e:	444f      	add	r7, r9
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:546

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
    a720:	2308      	movs	r3, #8
    a722:	4033      	ands	r3, r6
    a724:	4698      	mov	r8, r3
    a726:	d023      	beq.n	a770 <printk+0x384>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:547
				if (IS_FLAG_POUND(flags_used)) {
    a728:	2310      	movs	r3, #16
    a72a:	4033      	ands	r3, r6
    a72c:	4698      	mov	r8, r3
    a72e:	d10f      	bne.n	a750 <printk+0x364>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:553
					printk_putc('0', &count, info);
					printk_putc('x', &count, info);
					/*vlen += 2;*/
					dschar = TRUE;
				}
				printk_pad_zero(vlen, field_width, &count, info);
    a730:	9b00      	ldr	r3, [sp, #0]
    a732:	aa0a      	add	r2, sp, #40	; 0x28
    a734:	0021      	movs	r1, r4
    a736:	4648      	mov	r0, r9
    a738:	f7ff fd6f 	bl	a21a <printk_pad_zero>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:554
				vlen = field_width;
    a73c:	46a1      	mov	r9, r4
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:569
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
    a73e:	06f3      	lsls	r3, r6, #27
    a740:	d400      	bmi.n	a744 <printk+0x358>
    a742:	e09e      	b.n	a882 <printk+0x496>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:569 (discriminator 1)
    a744:	4643      	mov	r3, r8
    a746:	2b00      	cmp	r3, #0
    a748:	d030      	beq.n	a7ac <printk+0x3c0>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    a74a:	9b02      	ldr	r3, [sp, #8]
    a74c:	4698      	mov	r8, r3
    a74e:	e08a      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:548
					printk_putc('0', &count, info);
    a750:	9a00      	ldr	r2, [sp, #0]
    a752:	a90a      	add	r1, sp, #40	; 0x28
    a754:	2030      	movs	r0, #48	; 0x30
    a756:	f7ff fd09 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:549
					printk_putc('x', &count, info);
    a75a:	9a00      	ldr	r2, [sp, #0]
    a75c:	a90a      	add	r1, sp, #40	; 0x28
    a75e:	2078      	movs	r0, #120	; 0x78
    a760:	f7ff fd04 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:551
					dschar = TRUE;
    a764:	46d8      	mov	r8, fp
    a766:	e7e3      	b.n	a730 <printk+0x344>
    a768:	0000b120 	.word	0x0000b120
    a76c:	0000b164 	.word	0x0000b164
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:556
				if (!IS_FLAG_MINUS(flags_used)) {
    a770:	07f3      	lsls	r3, r6, #31
    a772:	d4e4      	bmi.n	a73e <printk+0x352>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:557
					if (IS_FLAG_POUND(flags_used)) {
    a774:	2310      	movs	r3, #16
    a776:	4033      	ands	r3, r6
    a778:	4698      	mov	r8, r3
    a77a:	d002      	beq.n	a782 <printk+0x396>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:558
						vlen += 2;
    a77c:	2302      	movs	r3, #2
    a77e:	469c      	mov	ip, r3
    a780:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:560
					printk_pad_space(vlen, field_width, &count, info);
    a782:	9b00      	ldr	r3, [sp, #0]
    a784:	aa0a      	add	r2, sp, #40	; 0x28
    a786:	0021      	movs	r1, r4
    a788:	4648      	mov	r0, r9
    a78a:	f7ff fd55 	bl	a238 <printk_pad_space>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:561
					if (IS_FLAG_POUND(flags_used)) {
    a78e:	4643      	mov	r3, r8
    a790:	2b00      	cmp	r3, #0
    a792:	d0d4      	beq.n	a73e <printk+0x352>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:562
						printk_putc('0', &count, info);
    a794:	9a00      	ldr	r2, [sp, #0]
    a796:	a90a      	add	r1, sp, #40	; 0x28
    a798:	2030      	movs	r0, #48	; 0x30
    a79a:	f7ff fce7 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:563
						printk_putc('x', &count, info);
    a79e:	9a00      	ldr	r2, [sp, #0]
    a7a0:	a90a      	add	r1, sp, #40	; 0x28
    a7a2:	2078      	movs	r0, #120	; 0x78
    a7a4:	f7ff fce2 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:564
						dschar = TRUE;
    a7a8:	46d8      	mov	r8, fp
    a7aa:	e7c8      	b.n	a73e <printk+0x352>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:570
				printk_putc('0', &count, info);
    a7ac:	9a00      	ldr	r2, [sp, #0]
    a7ae:	a90a      	add	r1, sp, #40	; 0x28
    a7b0:	2030      	movs	r0, #48	; 0x30
    a7b2:	f7ff fcdb 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:571
				printk_putc('x', &count, info);
    a7b6:	9a00      	ldr	r2, [sp, #0]
    a7b8:	a90a      	add	r1, sp, #40	; 0x28
    a7ba:	2078      	movs	r0, #120	; 0x78
    a7bc:	f7ff fcd6 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:572
				vlen += 2;
    a7c0:	2302      	movs	r3, #2
    a7c2:	469c      	mov	ip, r3
    a7c4:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    a7c6:	9b02      	ldr	r3, [sp, #8]
    a7c8:	4698      	mov	r8, r3
    a7ca:	e04c      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:577
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg(ap, unsigned int);
    a7cc:	4643      	mov	r3, r8
    a7ce:	1d1f      	adds	r7, r3, #4
    a7d0:	681b      	ldr	r3, [r3, #0]
    a7d2:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:578
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
    a7d4:	2308      	movs	r3, #8
    a7d6:	2200      	movs	r2, #0
    a7d8:	a905      	add	r1, sp, #20
    a7da:	a80b      	add	r0, sp, #44	; 0x2c
    a7dc:	f7ff fcdb 	bl	a196 <printk_mknumstr>
    a7e0:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:577
			uval = (unsigned int) va_arg(ap, unsigned int);
    a7e2:	46b8      	mov	r8, r7
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:594
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
    a7e4:	af0b      	add	r7, sp, #44	; 0x2c
    a7e6:	444f      	add	r7, r9
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:596

			if (IS_FLAG_ZERO(flags_used)) {
    a7e8:	0733      	lsls	r3, r6, #28
    a7ea:	d42f      	bmi.n	a84c <printk+0x460>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:600
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a7ec:	07f3      	lsls	r3, r6, #31
    a7ee:	d43a      	bmi.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:601
					printk_pad_space(vlen, field_width, &count, info);
    a7f0:	9b00      	ldr	r3, [sp, #0]
    a7f2:	aa0a      	add	r2, sp, #40	; 0x28
    a7f4:	0021      	movs	r1, r4
    a7f6:	4648      	mov	r0, r9
    a7f8:	f7ff fd1e 	bl	a238 <printk_pad_space>
    a7fc:	e033      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:582
			uval = (unsigned int) va_arg(ap, unsigned int);
    a7fe:	4643      	mov	r3, r8
    a800:	1d1f      	adds	r7, r3, #4
    a802:	681b      	ldr	r3, [r3, #0]
    a804:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:583
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
    a806:	2302      	movs	r3, #2
    a808:	2200      	movs	r2, #0
    a80a:	a905      	add	r1, sp, #20
    a80c:	a80b      	add	r0, sp, #44	; 0x2c
    a80e:	f7ff fcc2 	bl	a196 <printk_mknumstr>
    a812:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:582
			uval = (unsigned int) va_arg(ap, unsigned int);
    a814:	46b8      	mov	r8, r7
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:584
			goto cont_u;
    a816:	e7e5      	b.n	a7e4 <printk+0x3f8>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:587
			uval = (unsigned int) va_arg(ap, void *);
    a818:	4643      	mov	r3, r8
    a81a:	1d1f      	adds	r7, r3, #4
    a81c:	681b      	ldr	r3, [r3, #0]
    a81e:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:588
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    a820:	2310      	movs	r3, #16
    a822:	2200      	movs	r2, #0
    a824:	a905      	add	r1, sp, #20
    a826:	a80b      	add	r0, sp, #44	; 0x2c
    a828:	f7ff fcb5 	bl	a196 <printk_mknumstr>
    a82c:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:587
			uval = (unsigned int) va_arg(ap, void *);
    a82e:	46b8      	mov	r8, r7
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:589
			goto cont_u;
    a830:	e7d8      	b.n	a7e4 <printk+0x3f8>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:591
			uval = (unsigned int) va_arg(ap, unsigned int);
    a832:	4643      	mov	r3, r8
    a834:	1d1f      	adds	r7, r3, #4
    a836:	681b      	ldr	r3, [r3, #0]
    a838:	9305      	str	r3, [sp, #20]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:592
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
    a83a:	230a      	movs	r3, #10
    a83c:	2200      	movs	r2, #0
    a83e:	a905      	add	r1, sp, #20
    a840:	a80b      	add	r0, sp, #44	; 0x2c
    a842:	f7ff fca8 	bl	a196 <printk_mknumstr>
    a846:	4681      	mov	r9, r0
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:591
			uval = (unsigned int) va_arg(ap, unsigned int);
    a848:	46b8      	mov	r8, r7
    a84a:	e7cb      	b.n	a7e4 <printk+0x3f8>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:597
				printk_pad_zero(vlen, field_width, &count, info);
    a84c:	9b00      	ldr	r3, [sp, #0]
    a84e:	aa0a      	add	r2, sp, #40	; 0x28
    a850:	0021      	movs	r1, r4
    a852:	4648      	mov	r0, r9
    a854:	f7ff fce1 	bl	a21a <printk_pad_zero>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:598
				vlen = field_width;
    a858:	46a1      	mov	r9, r4
    a85a:	e004      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:606
				}
			}

			cont_xd: while (*vstrp)
				printk_putc(*vstrp--, &count, info);
    a85c:	3f01      	subs	r7, #1
    a85e:	9a00      	ldr	r2, [sp, #0]
    a860:	a90a      	add	r1, sp, #40	; 0x28
    a862:	f7ff fc83 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:605 (discriminator 1)
			cont_xd: while (*vstrp)
    a866:	2000      	movs	r0, #0
    a868:	5638      	ldrsb	r0, [r7, r0]
    a86a:	2800      	cmp	r0, #0
    a86c:	d1f6      	bne.n	a85c <printk+0x470>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:608

			if (IS_FLAG_MINUS(flags_used)) {
    a86e:	07f3      	lsls	r3, r6, #31
    a870:	d400      	bmi.n	a874 <printk+0x488>
    a872:	e5df      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:609
				printk_pad_space(vlen, field_width, &count, info);
    a874:	9b00      	ldr	r3, [sp, #0]
    a876:	aa0a      	add	r2, sp, #40	; 0x28
    a878:	0021      	movs	r1, r4
    a87a:	4648      	mov	r0, r9
    a87c:	f7ff fcdc 	bl	a238 <printk_pad_space>
    a880:	e5d8      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    a882:	9b02      	ldr	r3, [sp, #8]
    a884:	4698      	mov	r8, r3
    a886:	e7ee      	b.n	a866 <printk+0x47a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:615
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg(ap, unsigned int);
    a888:	4643      	mov	r3, r8
    a88a:	1d1c      	adds	r4, r3, #4
    a88c:	2000      	movs	r0, #0
    a88e:	5618      	ldrsb	r0, [r3, r0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:616
			printk_putc(cval, &count, info);
    a890:	9a00      	ldr	r2, [sp, #0]
    a892:	a90a      	add	r1, sp, #40	; 0x28
    a894:	f7ff fc6a 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:615
			cval = (char) va_arg(ap, unsigned int);
    a898:	46a0      	mov	r8, r4
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:617
			break;
    a89a:	e5cb      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:619
		case 's':
			sval = (char *) va_arg(ap, char *);
    a89c:	4643      	mov	r3, r8
    a89e:	3304      	adds	r3, #4
    a8a0:	9302      	str	r3, [sp, #8]
    a8a2:	4643      	mov	r3, r8
    a8a4:	681f      	ldr	r7, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:620
			if (sval) {
    a8a6:	2f00      	cmp	r7, #0
    a8a8:	d044      	beq.n	a934 <printk+0x548>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:621
				vlen = strlen(sval);
    a8aa:	0038      	movs	r0, r7
    a8ac:	f7ff f8b4 	bl	9a18 <strlen>
    a8b0:	9003      	str	r0, [sp, #12]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:622
				if (!IS_FLAG_MINUS(flags_used)) {
    a8b2:	2301      	movs	r3, #1
    a8b4:	401e      	ands	r6, r3
    a8b6:	d013      	beq.n	a8e0 <printk+0x4f4>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:625
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
    a8b8:	464b      	mov	r3, r9
    a8ba:	2b00      	cmp	r3, #0
    a8bc:	d01b      	beq.n	a8f6 <printk+0x50a>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:627
				{
					while (*sval)
    a8be:	2000      	movs	r0, #0
    a8c0:	5638      	ldrsb	r0, [r7, r0]
    a8c2:	2800      	cmp	r0, #0
    a8c4:	d01b      	beq.n	a8fe <printk+0x512>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:629
					{
						if(precision_width>=1)
    a8c6:	464b      	mov	r3, r9
    a8c8:	2b00      	cmp	r3, #0
    a8ca:	ddf8      	ble.n	a8be <printk+0x4d2>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:631
						{
							precision_width--;
    a8cc:	2301      	movs	r3, #1
    a8ce:	425b      	negs	r3, r3
    a8d0:	469c      	mov	ip, r3
    a8d2:	44e1      	add	r9, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:632
							printk_putc(*sval++, &count, info);
    a8d4:	3701      	adds	r7, #1
    a8d6:	9a00      	ldr	r2, [sp, #0]
    a8d8:	a90a      	add	r1, sp, #40	; 0x28
    a8da:	f7ff fc47 	bl	a16c <printk_putc>
    a8de:	e7ee      	b.n	a8be <printk+0x4d2>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:623
					printk_pad_space(vlen, field_width, &count, info);
    a8e0:	9b00      	ldr	r3, [sp, #0]
    a8e2:	aa0a      	add	r2, sp, #40	; 0x28
    a8e4:	0021      	movs	r1, r4
    a8e6:	f7ff fca7 	bl	a238 <printk_pad_space>
    a8ea:	e7e5      	b.n	a8b8 <printk+0x4cc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:639
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
					   printk_putc(*sval++, &count, info);
    a8ec:	3701      	adds	r7, #1
    a8ee:	9a00      	ldr	r2, [sp, #0]
    a8f0:	a90a      	add	r1, sp, #40	; 0x28
    a8f2:	f7ff fc3b 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:638
					while (*sval)
    a8f6:	2000      	movs	r0, #0
    a8f8:	5638      	ldrsb	r0, [r7, r0]
    a8fa:	2800      	cmp	r0, #0
    a8fc:	d1f6      	bne.n	a8ec <printk+0x500>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:641
				}
				if (IS_FLAG_MINUS(flags_used)) {
    a8fe:	2e00      	cmp	r6, #0
    a900:	d102      	bne.n	a908 <printk+0x51c>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    a902:	9b02      	ldr	r3, [sp, #8]
    a904:	4698      	mov	r8, r3
    a906:	e595      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:642
					printk_pad_space(vlen, field_width, &count, info);
    a908:	9b00      	ldr	r3, [sp, #0]
    a90a:	aa0a      	add	r2, sp, #40	; 0x28
    a90c:	0021      	movs	r1, r4
    a90e:	9803      	ldr	r0, [sp, #12]
    a910:	f7ff fc92 	bl	a238 <printk_pad_space>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    a914:	9b02      	ldr	r3, [sp, #8]
    a916:	4698      	mov	r8, r3
    a918:	e58c      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:647
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg(ap, int *);
    a91a:	4643      	mov	r3, r8
    a91c:	681b      	ldr	r3, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:648
			*ivalp = count;
    a91e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a920:	601a      	str	r2, [r3, #0]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:647
			ivalp = (int *) va_arg(ap, int *);
    a922:	2304      	movs	r3, #4
    a924:	469c      	mov	ip, r3
    a926:	44e0      	add	r8, ip
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:649
			break;
    a928:	e584      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:652

		default:
			printk_putc(c, &count, info);
    a92a:	9a00      	ldr	r2, [sp, #0]
    a92c:	a90a      	add	r1, sp, #40	; 0x28
    a92e:	f7ff fc1d 	bl	a16c <printk_putc>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:653
			break;
    a932:	e57f      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    a934:	9b02      	ldr	r3, [sp, #8]
    a936:	4698      	mov	r8, r3
    a938:	e57c      	b.n	a434 <printk+0x48>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:657
		}
	}
	return count;
}
    a93a:	980a      	ldr	r0, [sp, #40]	; 0x28
    a93c:	b015      	add	sp, #84	; 0x54
    a93e:	bc3c      	pop	{r2, r3, r4, r5}
    a940:	4690      	mov	r8, r2
    a942:	4699      	mov	r9, r3
    a944:	46a2      	mov	sl, r4
    a946:	46ab      	mov	fp, r5
    a948:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a94a:	46c0      	nop			; (mov r8, r8)

0000a94c <myprintf>:
myprintf():
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:665
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
    a94c:	b40f      	push	{r0, r1, r2, r3}
    a94e:	b500      	push	{lr}
    a950:	b085      	sub	sp, #20
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:669
	char * ap;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
    a952:	2301      	movs	r3, #1
    a954:	9301      	str	r3, [sp, #4]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:670
	info.func = &out_char;     //调用的串口输出函数
    a956:	4b05      	ldr	r3, [pc, #20]	; (a96c <myprintf+0x20>)
    a958:	9302      	str	r3, [sp, #8]
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:673
	//对ap 进行初始化，让它指向可变参数表里面的第一个参数
	va_start(ap, fmt); 
	rvalue = printk(&info, fmt, ap);
    a95a:	aa06      	add	r2, sp, #24
    a95c:	ca02      	ldmia	r2!, {r1}
    a95e:	a801      	add	r0, sp, #4
    a960:	f7ff fd44 	bl	a3ec <printk>
D:\app_for_qianrushi\exam\19\Debug/srcc/printf.c:678

	va_end(ap);

	return rvalue;
}
    a964:	b005      	add	sp, #20
    a966:	bc08      	pop	{r3}
    a968:	b004      	add	sp, #16
    a96a:	4718      	bx	r3
    a96c:	0000a257 	.word	0x0000a257

0000a970 <log>:
log():
    a970:	b5f0      	push	{r4, r5, r6, r7, lr}
    a972:	46c6      	mov	lr, r8
    a974:	b500      	push	{lr}
    a976:	b08c      	sub	sp, #48	; 0x30
    a978:	0004      	movs	r4, r0
    a97a:	000d      	movs	r5, r1
    a97c:	f000 f880 	bl	aa80 <__ieee754_log>
    a980:	4b3a      	ldr	r3, [pc, #232]	; (aa6c <log+0xfc>)
    a982:	0006      	movs	r6, r0
    a984:	781b      	ldrb	r3, [r3, #0]
    a986:	000f      	movs	r7, r1
    a988:	b25b      	sxtb	r3, r3
    a98a:	4698      	mov	r8, r3
    a98c:	3301      	adds	r3, #1
    a98e:	d00f      	beq.n	a9b0 <log+0x40>
    a990:	0022      	movs	r2, r4
    a992:	002b      	movs	r3, r5
    a994:	0020      	movs	r0, r4
    a996:	0029      	movs	r1, r5
    a998:	f7fe fe80 	bl	969c <__aeabi_dcmpun>
    a99c:	2800      	cmp	r0, #0
    a99e:	d107      	bne.n	a9b0 <log+0x40>
    a9a0:	2200      	movs	r2, #0
    a9a2:	2300      	movs	r3, #0
    a9a4:	0020      	movs	r0, r4
    a9a6:	0029      	movs	r1, r5
    a9a8:	f7fc fb1e 	bl	6fe8 <__aeabi_dcmpgt>
    a9ac:	2800      	cmp	r0, #0
    a9ae:	d005      	beq.n	a9bc <log+0x4c>
    a9b0:	0030      	movs	r0, r6
    a9b2:	0039      	movs	r1, r7
    a9b4:	b00c      	add	sp, #48	; 0x30
    a9b6:	bc04      	pop	{r2}
    a9b8:	4690      	mov	r8, r2
    a9ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a9bc:	4b2c      	ldr	r3, [pc, #176]	; (aa70 <log+0x100>)
    a9be:	900a      	str	r0, [sp, #40]	; 0x28
    a9c0:	9303      	str	r3, [sp, #12]
    a9c2:	4643      	mov	r3, r8
    a9c4:	9404      	str	r4, [sp, #16]
    a9c6:	9505      	str	r5, [sp, #20]
    a9c8:	9406      	str	r4, [sp, #24]
    a9ca:	9507      	str	r5, [sp, #28]
    a9cc:	2b00      	cmp	r3, #0
    a9ce:	d11a      	bne.n	aa06 <log+0x96>
    a9d0:	22e0      	movs	r2, #224	; 0xe0
    a9d2:	4b28      	ldr	r3, [pc, #160]	; (aa74 <log+0x104>)
    a9d4:	0612      	lsls	r2, r2, #24
    a9d6:	9208      	str	r2, [sp, #32]
    a9d8:	9309      	str	r3, [sp, #36]	; 0x24
    a9da:	0020      	movs	r0, r4
    a9dc:	2200      	movs	r2, #0
    a9de:	2300      	movs	r3, #0
    a9e0:	0029      	movs	r1, r5
    a9e2:	f7fc fae7 	bl	6fb4 <__aeabi_dcmpeq>
    a9e6:	2800      	cmp	r0, #0
    a9e8:	d038      	beq.n	aa5c <log+0xec>
    a9ea:	2302      	movs	r3, #2
    a9ec:	9302      	str	r3, [sp, #8]
    a9ee:	a802      	add	r0, sp, #8
    a9f0:	f000 fa1c 	bl	ae2c <matherr>
    a9f4:	2800      	cmp	r0, #0
    a9f6:	d017      	beq.n	aa28 <log+0xb8>
    a9f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a9fa:	9301      	str	r3, [sp, #4]
    a9fc:	2b00      	cmp	r3, #0
    a9fe:	d118      	bne.n	aa32 <log+0xc2>
    aa00:	9e08      	ldr	r6, [sp, #32]
    aa02:	9f09      	ldr	r7, [sp, #36]	; 0x24
    aa04:	e7d4      	b.n	a9b0 <log+0x40>
    aa06:	2200      	movs	r2, #0
    aa08:	4b1b      	ldr	r3, [pc, #108]	; (aa78 <log+0x108>)
    aa0a:	0020      	movs	r0, r4
    aa0c:	9208      	str	r2, [sp, #32]
    aa0e:	9309      	str	r3, [sp, #36]	; 0x24
    aa10:	0029      	movs	r1, r5
    aa12:	2200      	movs	r2, #0
    aa14:	2300      	movs	r3, #0
    aa16:	f7fc facd 	bl	6fb4 <__aeabi_dcmpeq>
    aa1a:	2800      	cmp	r0, #0
    aa1c:	d00f      	beq.n	aa3e <log+0xce>
    aa1e:	2302      	movs	r3, #2
    aa20:	9302      	str	r3, [sp, #8]
    aa22:	4643      	mov	r3, r8
    aa24:	2b02      	cmp	r3, #2
    aa26:	d1e2      	bne.n	a9ee <log+0x7e>
    aa28:	f000 fa08 	bl	ae3c <__errno>
    aa2c:	2322      	movs	r3, #34	; 0x22
    aa2e:	6003      	str	r3, [r0, #0]
    aa30:	e7e2      	b.n	a9f8 <log+0x88>
    aa32:	f000 fa03 	bl	ae3c <__errno>
    aa36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    aa38:	9301      	str	r3, [sp, #4]
    aa3a:	6003      	str	r3, [r0, #0]
    aa3c:	e7e0      	b.n	aa00 <log+0x90>
    aa3e:	2301      	movs	r3, #1
    aa40:	9302      	str	r3, [sp, #8]
    aa42:	4643      	mov	r3, r8
    aa44:	2b02      	cmp	r3, #2
    aa46:	d10b      	bne.n	aa60 <log+0xf0>
    aa48:	f000 f9f8 	bl	ae3c <__errno>
    aa4c:	2321      	movs	r3, #33	; 0x21
    aa4e:	6003      	str	r3, [r0, #0]
    aa50:	480a      	ldr	r0, [pc, #40]	; (aa7c <log+0x10c>)
    aa52:	f000 f9ed 	bl	ae30 <nan>
    aa56:	9008      	str	r0, [sp, #32]
    aa58:	9109      	str	r1, [sp, #36]	; 0x24
    aa5a:	e7cd      	b.n	a9f8 <log+0x88>
    aa5c:	2301      	movs	r3, #1
    aa5e:	9302      	str	r3, [sp, #8]
    aa60:	a802      	add	r0, sp, #8
    aa62:	f000 f9e3 	bl	ae2c <matherr>
    aa66:	2800      	cmp	r0, #0
    aa68:	d1f2      	bne.n	aa50 <log+0xe0>
    aa6a:	e7ed      	b.n	aa48 <log+0xd8>
    aa6c:	20000400 	.word	0x20000400
    aa70:	0000b1e8 	.word	0x0000b1e8
    aa74:	c7efffff 	.word	0xc7efffff
    aa78:	fff00000 	.word	0xfff00000
    aa7c:	0000b0e8 	.word	0x0000b0e8

0000aa80 <__ieee754_log>:
__ieee754_log():
    aa80:	b5f0      	push	{r4, r5, r6, r7, lr}
    aa82:	46d6      	mov	lr, sl
    aa84:	464f      	mov	r7, r9
    aa86:	4646      	mov	r6, r8
    aa88:	b5c0      	push	{r6, r7, lr}
    aa8a:	4aca      	ldr	r2, [pc, #808]	; (adb4 <__ieee754_log+0x334>)
    aa8c:	b086      	sub	sp, #24
    aa8e:	000b      	movs	r3, r1
    aa90:	4291      	cmp	r1, r2
    aa92:	dd00      	ble.n	aa96 <__ieee754_log+0x16>
    aa94:	e0cc      	b.n	ac30 <__ieee754_log+0x1b0>
    aa96:	004a      	lsls	r2, r1, #1
    aa98:	0852      	lsrs	r2, r2, #1
    aa9a:	4302      	orrs	r2, r0
    aa9c:	d100      	bne.n	aaa0 <__ieee754_log+0x20>
    aa9e:	e0d6      	b.n	ac4e <__ieee754_log+0x1ce>
    aaa0:	2900      	cmp	r1, #0
    aaa2:	da00      	bge.n	aaa6 <__ieee754_log+0x26>
    aaa4:	e0e6      	b.n	ac74 <__ieee754_log+0x1f4>
    aaa6:	4bc4      	ldr	r3, [pc, #784]	; (adb8 <__ieee754_log+0x338>)
    aaa8:	2200      	movs	r2, #0
    aaaa:	f7fe f83d 	bl	8b28 <__aeabi_dmul>
    aaae:	2536      	movs	r5, #54	; 0x36
    aab0:	4cc2      	ldr	r4, [pc, #776]	; (adbc <__ieee754_log+0x33c>)
    aab2:	000b      	movs	r3, r1
    aab4:	426d      	negs	r5, r5
    aab6:	42a3      	cmp	r3, r4
    aab8:	dd00      	ble.n	aabc <__ieee754_log+0x3c>
    aaba:	e0be      	b.n	ac3a <__ieee754_log+0x1ba>
    aabc:	151a      	asrs	r2, r3, #20
    aabe:	4cc0      	ldr	r4, [pc, #768]	; (adc0 <__ieee754_log+0x340>)
    aac0:	031b      	lsls	r3, r3, #12
    aac2:	0b1b      	lsrs	r3, r3, #12
    aac4:	4698      	mov	r8, r3
    aac6:	46a4      	mov	ip, r4
    aac8:	2480      	movs	r4, #128	; 0x80
    aaca:	4bbe      	ldr	r3, [pc, #760]	; (adc4 <__ieee754_log+0x344>)
    aacc:	0364      	lsls	r4, r4, #13
    aace:	4443      	add	r3, r8
    aad0:	4023      	ands	r3, r4
    aad2:	4cbd      	ldr	r4, [pc, #756]	; (adc8 <__ieee754_log+0x348>)
    aad4:	4462      	add	r2, ip
    aad6:	1952      	adds	r2, r2, r5
    aad8:	405c      	eors	r4, r3
    aada:	4645      	mov	r5, r8
    aadc:	151b      	asrs	r3, r3, #20
    aade:	4699      	mov	r9, r3
    aae0:	4325      	orrs	r5, r4
    aae2:	4bb9      	ldr	r3, [pc, #740]	; (adc8 <__ieee754_log+0x348>)
    aae4:	0029      	movs	r1, r5
    aae6:	4491      	add	r9, r2
    aae8:	2200      	movs	r2, #0
    aaea:	f7fe fa8f 	bl	900c <__aeabi_dsub>
    aaee:	4643      	mov	r3, r8
    aaf0:	3302      	adds	r3, #2
    aaf2:	031b      	lsls	r3, r3, #12
    aaf4:	0006      	movs	r6, r0
    aaf6:	000f      	movs	r7, r1
    aaf8:	0b1b      	lsrs	r3, r3, #12
    aafa:	2200      	movs	r2, #0
    aafc:	2b02      	cmp	r3, #2
    aafe:	dc00      	bgt.n	ab02 <__ieee754_log+0x82>
    ab00:	e0ac      	b.n	ac5c <__ieee754_log+0x1dc>
    ab02:	2380      	movs	r3, #128	; 0x80
    ab04:	05db      	lsls	r3, r3, #23
    ab06:	f7fd f8e9 	bl	7cdc <__aeabi_dadd>
    ab0a:	0002      	movs	r2, r0
    ab0c:	000b      	movs	r3, r1
    ab0e:	0030      	movs	r0, r6
    ab10:	0039      	movs	r1, r7
    ab12:	f7fd fbff 	bl	8314 <__aeabi_ddiv>
    ab16:	0004      	movs	r4, r0
    ab18:	4648      	mov	r0, r9
    ab1a:	000d      	movs	r5, r1
    ab1c:	f7fe fe10 	bl	9740 <__aeabi_i2d>
    ab20:	0022      	movs	r2, r4
    ab22:	9000      	str	r0, [sp, #0]
    ab24:	9101      	str	r1, [sp, #4]
    ab26:	002b      	movs	r3, r5
    ab28:	0020      	movs	r0, r4
    ab2a:	0029      	movs	r1, r5
    ab2c:	9404      	str	r4, [sp, #16]
    ab2e:	9505      	str	r5, [sp, #20]
    ab30:	f7fd fffa 	bl	8b28 <__aeabi_dmul>
    ab34:	000d      	movs	r5, r1
    ab36:	0004      	movs	r4, r0
    ab38:	49a4      	ldr	r1, [pc, #656]	; (adcc <__ieee754_log+0x34c>)
    ab3a:	0022      	movs	r2, r4
    ab3c:	4441      	add	r1, r8
    ab3e:	002b      	movs	r3, r5
    ab40:	468a      	mov	sl, r1
    ab42:	0020      	movs	r0, r4
    ab44:	0029      	movs	r1, r5
    ab46:	9402      	str	r4, [sp, #8]
    ab48:	9503      	str	r5, [sp, #12]
    ab4a:	f7fd ffed 	bl	8b28 <__aeabi_dmul>
    ab4e:	0004      	movs	r4, r0
    ab50:	000d      	movs	r5, r1
    ab52:	4a9f      	ldr	r2, [pc, #636]	; (add0 <__ieee754_log+0x350>)
    ab54:	4b9f      	ldr	r3, [pc, #636]	; (add4 <__ieee754_log+0x354>)
    ab56:	f7fd ffe7 	bl	8b28 <__aeabi_dmul>
    ab5a:	4a9f      	ldr	r2, [pc, #636]	; (add8 <__ieee754_log+0x358>)
    ab5c:	4b9f      	ldr	r3, [pc, #636]	; (addc <__ieee754_log+0x35c>)
    ab5e:	f7fd f8bd 	bl	7cdc <__aeabi_dadd>
    ab62:	0022      	movs	r2, r4
    ab64:	002b      	movs	r3, r5
    ab66:	f7fd ffdf 	bl	8b28 <__aeabi_dmul>
    ab6a:	4a9d      	ldr	r2, [pc, #628]	; (ade0 <__ieee754_log+0x360>)
    ab6c:	4b9d      	ldr	r3, [pc, #628]	; (ade4 <__ieee754_log+0x364>)
    ab6e:	f7fd f8b5 	bl	7cdc <__aeabi_dadd>
    ab72:	0022      	movs	r2, r4
    ab74:	002b      	movs	r3, r5
    ab76:	f7fd ffd7 	bl	8b28 <__aeabi_dmul>
    ab7a:	4a9b      	ldr	r2, [pc, #620]	; (ade8 <__ieee754_log+0x368>)
    ab7c:	4b9b      	ldr	r3, [pc, #620]	; (adec <__ieee754_log+0x36c>)
    ab7e:	f7fd f8ad 	bl	7cdc <__aeabi_dadd>
    ab82:	9a02      	ldr	r2, [sp, #8]
    ab84:	9b03      	ldr	r3, [sp, #12]
    ab86:	f7fd ffcf 	bl	8b28 <__aeabi_dmul>
    ab8a:	4a99      	ldr	r2, [pc, #612]	; (adf0 <__ieee754_log+0x370>)
    ab8c:	9002      	str	r0, [sp, #8]
    ab8e:	9103      	str	r1, [sp, #12]
    ab90:	4b98      	ldr	r3, [pc, #608]	; (adf4 <__ieee754_log+0x374>)
    ab92:	0020      	movs	r0, r4
    ab94:	0029      	movs	r1, r5
    ab96:	f7fd ffc7 	bl	8b28 <__aeabi_dmul>
    ab9a:	4a97      	ldr	r2, [pc, #604]	; (adf8 <__ieee754_log+0x378>)
    ab9c:	4b97      	ldr	r3, [pc, #604]	; (adfc <__ieee754_log+0x37c>)
    ab9e:	f7fd f89d 	bl	7cdc <__aeabi_dadd>
    aba2:	0022      	movs	r2, r4
    aba4:	002b      	movs	r3, r5
    aba6:	f7fd ffbf 	bl	8b28 <__aeabi_dmul>
    abaa:	4a95      	ldr	r2, [pc, #596]	; (ae00 <__ieee754_log+0x380>)
    abac:	4b95      	ldr	r3, [pc, #596]	; (ae04 <__ieee754_log+0x384>)
    abae:	f7fd f895 	bl	7cdc <__aeabi_dadd>
    abb2:	0022      	movs	r2, r4
    abb4:	002b      	movs	r3, r5
    abb6:	f7fd ffb7 	bl	8b28 <__aeabi_dmul>
    abba:	000b      	movs	r3, r1
    abbc:	0002      	movs	r2, r0
    abbe:	9802      	ldr	r0, [sp, #8]
    abc0:	9903      	ldr	r1, [sp, #12]
    abc2:	f7fd f88b 	bl	7cdc <__aeabi_dadd>
    abc6:	000d      	movs	r5, r1
    abc8:	4641      	mov	r1, r8
    abca:	4b8f      	ldr	r3, [pc, #572]	; (ae08 <__ieee754_log+0x388>)
    abcc:	0004      	movs	r4, r0
    abce:	1a5b      	subs	r3, r3, r1
    abd0:	4651      	mov	r1, sl
    abd2:	430b      	orrs	r3, r1
    abd4:	2b00      	cmp	r3, #0
    abd6:	dc00      	bgt.n	abda <__ieee754_log+0x15a>
    abd8:	e095      	b.n	ad06 <__ieee754_log+0x286>
    abda:	2200      	movs	r2, #0
    abdc:	4b8b      	ldr	r3, [pc, #556]	; (ae0c <__ieee754_log+0x38c>)
    abde:	0030      	movs	r0, r6
    abe0:	0039      	movs	r1, r7
    abe2:	f7fd ffa1 	bl	8b28 <__aeabi_dmul>
    abe6:	0032      	movs	r2, r6
    abe8:	003b      	movs	r3, r7
    abea:	f7fd ff9d 	bl	8b28 <__aeabi_dmul>
    abee:	000a      	movs	r2, r1
    abf0:	0001      	movs	r1, r0
    abf2:	0013      	movs	r3, r2
    abf4:	9102      	str	r1, [sp, #8]
    abf6:	9203      	str	r2, [sp, #12]
    abf8:	0002      	movs	r2, r0
    abfa:	0029      	movs	r1, r5
    abfc:	0020      	movs	r0, r4
    abfe:	f7fd f86d 	bl	7cdc <__aeabi_dadd>
    ac02:	9a04      	ldr	r2, [sp, #16]
    ac04:	9b05      	ldr	r3, [sp, #20]
    ac06:	f7fd ff8f 	bl	8b28 <__aeabi_dmul>
    ac0a:	464b      	mov	r3, r9
    ac0c:	0004      	movs	r4, r0
    ac0e:	000d      	movs	r5, r1
    ac10:	2b00      	cmp	r3, #0
    ac12:	d000      	beq.n	ac16 <__ieee754_log+0x196>
    ac14:	e08d      	b.n	ad32 <__ieee754_log+0x2b2>
    ac16:	0002      	movs	r2, r0
    ac18:	000b      	movs	r3, r1
    ac1a:	9802      	ldr	r0, [sp, #8]
    ac1c:	9903      	ldr	r1, [sp, #12]
    ac1e:	f7fe f9f5 	bl	900c <__aeabi_dsub>
    ac22:	0002      	movs	r2, r0
    ac24:	000b      	movs	r3, r1
    ac26:	0030      	movs	r0, r6
    ac28:	0039      	movs	r1, r7
    ac2a:	f7fe f9ef 	bl	900c <__aeabi_dsub>
    ac2e:	e008      	b.n	ac42 <__ieee754_log+0x1c2>
    ac30:	4c62      	ldr	r4, [pc, #392]	; (adbc <__ieee754_log+0x33c>)
    ac32:	2500      	movs	r5, #0
    ac34:	42a3      	cmp	r3, r4
    ac36:	dc00      	bgt.n	ac3a <__ieee754_log+0x1ba>
    ac38:	e740      	b.n	aabc <__ieee754_log+0x3c>
    ac3a:	0002      	movs	r2, r0
    ac3c:	000b      	movs	r3, r1
    ac3e:	f7fd f84d 	bl	7cdc <__aeabi_dadd>
    ac42:	b006      	add	sp, #24
    ac44:	bc1c      	pop	{r2, r3, r4}
    ac46:	4690      	mov	r8, r2
    ac48:	4699      	mov	r9, r3
    ac4a:	46a2      	mov	sl, r4
    ac4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ac4e:	2200      	movs	r2, #0
    ac50:	2300      	movs	r3, #0
    ac52:	2000      	movs	r0, #0
    ac54:	496e      	ldr	r1, [pc, #440]	; (ae10 <__ieee754_log+0x390>)
    ac56:	f7fd fb5d 	bl	8314 <__aeabi_ddiv>
    ac5a:	e7f2      	b.n	ac42 <__ieee754_log+0x1c2>
    ac5c:	2300      	movs	r3, #0
    ac5e:	f7fc f9a9 	bl	6fb4 <__aeabi_dcmpeq>
    ac62:	2800      	cmp	r0, #0
    ac64:	d00e      	beq.n	ac84 <__ieee754_log+0x204>
    ac66:	464b      	mov	r3, r9
    ac68:	2b00      	cmp	r3, #0
    ac6a:	d000      	beq.n	ac6e <__ieee754_log+0x1ee>
    ac6c:	e084      	b.n	ad78 <__ieee754_log+0x2f8>
    ac6e:	2000      	movs	r0, #0
    ac70:	2100      	movs	r1, #0
    ac72:	e7e6      	b.n	ac42 <__ieee754_log+0x1c2>
    ac74:	0002      	movs	r2, r0
    ac76:	f7fe f9c9 	bl	900c <__aeabi_dsub>
    ac7a:	2200      	movs	r2, #0
    ac7c:	2300      	movs	r3, #0
    ac7e:	f7fd fb49 	bl	8314 <__aeabi_ddiv>
    ac82:	e7de      	b.n	ac42 <__ieee754_log+0x1c2>
    ac84:	4a63      	ldr	r2, [pc, #396]	; (ae14 <__ieee754_log+0x394>)
    ac86:	4b64      	ldr	r3, [pc, #400]	; (ae18 <__ieee754_log+0x398>)
    ac88:	0030      	movs	r0, r6
    ac8a:	0039      	movs	r1, r7
    ac8c:	f7fd ff4c 	bl	8b28 <__aeabi_dmul>
    ac90:	0002      	movs	r2, r0
    ac92:	000b      	movs	r3, r1
    ac94:	2000      	movs	r0, #0
    ac96:	495d      	ldr	r1, [pc, #372]	; (ae0c <__ieee754_log+0x38c>)
    ac98:	f7fe f9b8 	bl	900c <__aeabi_dsub>
    ac9c:	0032      	movs	r2, r6
    ac9e:	0004      	movs	r4, r0
    aca0:	000d      	movs	r5, r1
    aca2:	003b      	movs	r3, r7
    aca4:	0030      	movs	r0, r6
    aca6:	0039      	movs	r1, r7
    aca8:	f7fd ff3e 	bl	8b28 <__aeabi_dmul>
    acac:	000b      	movs	r3, r1
    acae:	0002      	movs	r2, r0
    acb0:	0029      	movs	r1, r5
    acb2:	0020      	movs	r0, r4
    acb4:	f7fd ff38 	bl	8b28 <__aeabi_dmul>
    acb8:	464b      	mov	r3, r9
    acba:	0004      	movs	r4, r0
    acbc:	000d      	movs	r5, r1
    acbe:	2b00      	cmp	r3, #0
    acc0:	d030      	beq.n	ad24 <__ieee754_log+0x2a4>
    acc2:	4648      	mov	r0, r9
    acc4:	f7fe fd3c 	bl	9740 <__aeabi_i2d>
    acc8:	9000      	str	r0, [sp, #0]
    acca:	9101      	str	r1, [sp, #4]
    accc:	4a53      	ldr	r2, [pc, #332]	; (ae1c <__ieee754_log+0x39c>)
    acce:	4b54      	ldr	r3, [pc, #336]	; (ae20 <__ieee754_log+0x3a0>)
    acd0:	f7fd ff2a 	bl	8b28 <__aeabi_dmul>
    acd4:	4a53      	ldr	r2, [pc, #332]	; (ae24 <__ieee754_log+0x3a4>)
    acd6:	9002      	str	r0, [sp, #8]
    acd8:	9103      	str	r1, [sp, #12]
    acda:	9800      	ldr	r0, [sp, #0]
    acdc:	9901      	ldr	r1, [sp, #4]
    acde:	4b52      	ldr	r3, [pc, #328]	; (ae28 <__ieee754_log+0x3a8>)
    ace0:	f7fd ff22 	bl	8b28 <__aeabi_dmul>
    ace4:	0002      	movs	r2, r0
    ace6:	000b      	movs	r3, r1
    ace8:	0020      	movs	r0, r4
    acea:	0029      	movs	r1, r5
    acec:	f7fe f98e 	bl	900c <__aeabi_dsub>
    acf0:	0032      	movs	r2, r6
    acf2:	003b      	movs	r3, r7
    acf4:	f7fe f98a 	bl	900c <__aeabi_dsub>
    acf8:	0002      	movs	r2, r0
    acfa:	000b      	movs	r3, r1
    acfc:	9802      	ldr	r0, [sp, #8]
    acfe:	9903      	ldr	r1, [sp, #12]
    ad00:	f7fe f984 	bl	900c <__aeabi_dsub>
    ad04:	e79d      	b.n	ac42 <__ieee754_log+0x1c2>
    ad06:	0022      	movs	r2, r4
    ad08:	002b      	movs	r3, r5
    ad0a:	0030      	movs	r0, r6
    ad0c:	0039      	movs	r1, r7
    ad0e:	f7fe f97d 	bl	900c <__aeabi_dsub>
    ad12:	9a04      	ldr	r2, [sp, #16]
    ad14:	9b05      	ldr	r3, [sp, #20]
    ad16:	f7fd ff07 	bl	8b28 <__aeabi_dmul>
    ad1a:	464b      	mov	r3, r9
    ad1c:	0004      	movs	r4, r0
    ad1e:	000d      	movs	r5, r1
    ad20:	2b00      	cmp	r3, #0
    ad22:	d141      	bne.n	ada8 <__ieee754_log+0x328>
    ad24:	0022      	movs	r2, r4
    ad26:	002b      	movs	r3, r5
    ad28:	0030      	movs	r0, r6
    ad2a:	0039      	movs	r1, r7
    ad2c:	f7fe f96e 	bl	900c <__aeabi_dsub>
    ad30:	e787      	b.n	ac42 <__ieee754_log+0x1c2>
    ad32:	4a3a      	ldr	r2, [pc, #232]	; (ae1c <__ieee754_log+0x39c>)
    ad34:	4b3a      	ldr	r3, [pc, #232]	; (ae20 <__ieee754_log+0x3a0>)
    ad36:	9800      	ldr	r0, [sp, #0]
    ad38:	9901      	ldr	r1, [sp, #4]
    ad3a:	f7fd fef5 	bl	8b28 <__aeabi_dmul>
    ad3e:	4a39      	ldr	r2, [pc, #228]	; (ae24 <__ieee754_log+0x3a4>)
    ad40:	9004      	str	r0, [sp, #16]
    ad42:	9105      	str	r1, [sp, #20]
    ad44:	9800      	ldr	r0, [sp, #0]
    ad46:	9901      	ldr	r1, [sp, #4]
    ad48:	4b37      	ldr	r3, [pc, #220]	; (ae28 <__ieee754_log+0x3a8>)
    ad4a:	f7fd feed 	bl	8b28 <__aeabi_dmul>
    ad4e:	0022      	movs	r2, r4
    ad50:	002b      	movs	r3, r5
    ad52:	f7fc ffc3 	bl	7cdc <__aeabi_dadd>
    ad56:	0002      	movs	r2, r0
    ad58:	000b      	movs	r3, r1
    ad5a:	9802      	ldr	r0, [sp, #8]
    ad5c:	9903      	ldr	r1, [sp, #12]
    ad5e:	f7fe f955 	bl	900c <__aeabi_dsub>
    ad62:	0032      	movs	r2, r6
    ad64:	003b      	movs	r3, r7
    ad66:	f7fe f951 	bl	900c <__aeabi_dsub>
    ad6a:	0002      	movs	r2, r0
    ad6c:	000b      	movs	r3, r1
    ad6e:	9804      	ldr	r0, [sp, #16]
    ad70:	9905      	ldr	r1, [sp, #20]
    ad72:	f7fe f94b 	bl	900c <__aeabi_dsub>
    ad76:	e764      	b.n	ac42 <__ieee754_log+0x1c2>
    ad78:	4648      	mov	r0, r9
    ad7a:	f7fe fce1 	bl	9740 <__aeabi_i2d>
    ad7e:	4a27      	ldr	r2, [pc, #156]	; (ae1c <__ieee754_log+0x39c>)
    ad80:	4b27      	ldr	r3, [pc, #156]	; (ae20 <__ieee754_log+0x3a0>)
    ad82:	0004      	movs	r4, r0
    ad84:	000d      	movs	r5, r1
    ad86:	f7fd fecf 	bl	8b28 <__aeabi_dmul>
    ad8a:	4a26      	ldr	r2, [pc, #152]	; (ae24 <__ieee754_log+0x3a4>)
    ad8c:	0006      	movs	r6, r0
    ad8e:	000f      	movs	r7, r1
    ad90:	4b25      	ldr	r3, [pc, #148]	; (ae28 <__ieee754_log+0x3a8>)
    ad92:	0020      	movs	r0, r4
    ad94:	0029      	movs	r1, r5
    ad96:	f7fd fec7 	bl	8b28 <__aeabi_dmul>
    ad9a:	0002      	movs	r2, r0
    ad9c:	000b      	movs	r3, r1
    ad9e:	0030      	movs	r0, r6
    ada0:	0039      	movs	r1, r7
    ada2:	f7fc ff9b 	bl	7cdc <__aeabi_dadd>
    ada6:	e74c      	b.n	ac42 <__ieee754_log+0x1c2>
    ada8:	4a1c      	ldr	r2, [pc, #112]	; (ae1c <__ieee754_log+0x39c>)
    adaa:	4b1d      	ldr	r3, [pc, #116]	; (ae20 <__ieee754_log+0x3a0>)
    adac:	9800      	ldr	r0, [sp, #0]
    adae:	9901      	ldr	r1, [sp, #4]
    adb0:	e78e      	b.n	acd0 <__ieee754_log+0x250>
    adb2:	46c0      	nop			; (mov r8, r8)
    adb4:	000fffff 	.word	0x000fffff
    adb8:	43500000 	.word	0x43500000
    adbc:	7fefffff 	.word	0x7fefffff
    adc0:	fffffc01 	.word	0xfffffc01
    adc4:	00095f64 	.word	0x00095f64
    adc8:	3ff00000 	.word	0x3ff00000
    adcc:	fff9eb86 	.word	0xfff9eb86
    add0:	df3e5244 	.word	0xdf3e5244
    add4:	3fc2f112 	.word	0x3fc2f112
    add8:	96cb03de 	.word	0x96cb03de
    addc:	3fc74664 	.word	0x3fc74664
    ade0:	94229359 	.word	0x94229359
    ade4:	3fd24924 	.word	0x3fd24924
    ade8:	55555593 	.word	0x55555593
    adec:	3fe55555 	.word	0x3fe55555
    adf0:	d078c69f 	.word	0xd078c69f
    adf4:	3fc39a09 	.word	0x3fc39a09
    adf8:	1d8e78af 	.word	0x1d8e78af
    adfc:	3fcc71c5 	.word	0x3fcc71c5
    ae00:	9997fa04 	.word	0x9997fa04
    ae04:	3fd99999 	.word	0x3fd99999
    ae08:	0006b851 	.word	0x0006b851
    ae0c:	3fe00000 	.word	0x3fe00000
    ae10:	c3500000 	.word	0xc3500000
    ae14:	55555555 	.word	0x55555555
    ae18:	3fd55555 	.word	0x3fd55555
    ae1c:	fee00000 	.word	0xfee00000
    ae20:	3fe62e42 	.word	0x3fe62e42
    ae24:	35793c76 	.word	0x35793c76
    ae28:	3dea39ef 	.word	0x3dea39ef

0000ae2c <matherr>:
matherr():
    ae2c:	2000      	movs	r0, #0
    ae2e:	4770      	bx	lr

0000ae30 <nan>:
nan():
    ae30:	2000      	movs	r0, #0
    ae32:	4901      	ldr	r1, [pc, #4]	; (ae38 <nan+0x8>)
    ae34:	4770      	bx	lr
    ae36:	46c0      	nop			; (mov r8, r8)
    ae38:	7ff80000 	.word	0x7ff80000

0000ae3c <__errno>:
__errno():
    ae3c:	4b01      	ldr	r3, [pc, #4]	; (ae44 <__errno+0x8>)
    ae3e:	6818      	ldr	r0, [r3, #0]
    ae40:	4770      	bx	lr
    ae42:	46c0      	nop			; (mov r8, r8)
    ae44:	20000404 	.word	0x20000404

0000ae48 <memcpy>:
memcpy():
    ae48:	2300      	movs	r3, #0
    ae4a:	b510      	push	{r4, lr}
    ae4c:	429a      	cmp	r2, r3
    ae4e:	d100      	bne.n	ae52 <memcpy+0xa>
    ae50:	bd10      	pop	{r4, pc}
    ae52:	5ccc      	ldrb	r4, [r1, r3]
    ae54:	54c4      	strb	r4, [r0, r3]
    ae56:	3301      	adds	r3, #1
    ae58:	e7f8      	b.n	ae4c <memcpy+0x4>

0000ae5a <memset>:
memset():
    ae5a:	0003      	movs	r3, r0
    ae5c:	1812      	adds	r2, r2, r0
    ae5e:	4293      	cmp	r3, r2
    ae60:	d100      	bne.n	ae64 <memset+0xa>
    ae62:	4770      	bx	lr
    ae64:	7019      	strb	r1, [r3, #0]
    ae66:	3301      	adds	r3, #1
    ae68:	e7f9      	b.n	ae5e <memset+0x4>
    ae6a:	0000      	movs	r0, r0
    ae6c:	0000743e 	.word	0x0000743e
    ae70:	0000737a 	.word	0x0000737a
    ae74:	0000739e 	.word	0x0000739e
    ae78:	0000733c 	.word	0x0000733c
    ae7c:	0000739e 	.word	0x0000739e
    ae80:	0000741a 	.word	0x0000741a
    ae84:	0000739e 	.word	0x0000739e
    ae88:	0000733c 	.word	0x0000733c
    ae8c:	0000737a 	.word	0x0000737a
    ae90:	0000737a 	.word	0x0000737a
    ae94:	0000741a 	.word	0x0000741a
    ae98:	0000733c 	.word	0x0000733c
    ae9c:	00007470 	.word	0x00007470
    aea0:	00007470 	.word	0x00007470
    aea4:	00007470 	.word	0x00007470
    aea8:	00007426 	.word	0x00007426
    aeac:	0000737a 	.word	0x0000737a
    aeb0:	0000737a 	.word	0x0000737a
    aeb4:	0000739e 	.word	0x0000739e
    aeb8:	0000733a 	.word	0x0000733a
    aebc:	0000739e 	.word	0x0000739e
    aec0:	0000741a 	.word	0x0000741a
    aec4:	0000739e 	.word	0x0000739e
    aec8:	0000733a 	.word	0x0000733a
    aecc:	0000737a 	.word	0x0000737a
    aed0:	0000737a 	.word	0x0000737a
    aed4:	0000741a 	.word	0x0000741a
    aed8:	0000733a 	.word	0x0000733a
    aedc:	00007470 	.word	0x00007470
    aee0:	00007470 	.word	0x00007470
    aee4:	00007470 	.word	0x00007470
    aee8:	00007424 	.word	0x00007424
    aeec:	00007768 	.word	0x00007768
    aef0:	00007712 	.word	0x00007712
    aef4:	00007712 	.word	0x00007712
    aef8:	00007840 	.word	0x00007840
    aefc:	0000770e 	.word	0x0000770e
    af00:	0000770e 	.word	0x0000770e
    af04:	00007836 	.word	0x00007836
    af08:	00007840 	.word	0x00007840
    af0c:	0000770e 	.word	0x0000770e
    af10:	00007836 	.word	0x00007836
    af14:	0000770e 	.word	0x0000770e
    af18:	00007840 	.word	0x00007840
    af1c:	00007844 	.word	0x00007844
    af20:	00007844 	.word	0x00007844
    af24:	00007844 	.word	0x00007844
    af28:	0000784c 	.word	0x0000784c
    af2c:	000085b8 	.word	0x000085b8
    af30:	0000842a 	.word	0x0000842a
    af34:	0000846e 	.word	0x0000846e
    af38:	000083d2 	.word	0x000083d2
    af3c:	0000846e 	.word	0x0000846e
    af40:	0000855e 	.word	0x0000855e
    af44:	0000846e 	.word	0x0000846e
    af48:	000083d2 	.word	0x000083d2
    af4c:	0000842a 	.word	0x0000842a
    af50:	0000842a 	.word	0x0000842a
    af54:	0000855e 	.word	0x0000855e
    af58:	000083d2 	.word	0x000083d2
    af5c:	000083ca 	.word	0x000083ca
    af60:	000083ca 	.word	0x000083ca
    af64:	000083ca 	.word	0x000083ca
    af68:	0000856c 	.word	0x0000856c
    af6c:	00008ce0 	.word	0x00008ce0
    af70:	00008be2 	.word	0x00008be2
    af74:	00008be2 	.word	0x00008be2
    af78:	00008f00 	.word	0x00008f00
    af7c:	00008bdc 	.word	0x00008bdc
    af80:	00008bdc 	.word	0x00008bdc
    af84:	00008ee8 	.word	0x00008ee8
    af88:	00008f00 	.word	0x00008f00
    af8c:	00008bdc 	.word	0x00008bdc
    af90:	00008ee8 	.word	0x00008ee8
    af94:	00008bdc 	.word	0x00008bdc
    af98:	00008f00 	.word	0x00008f00
    af9c:	00008ef6 	.word	0x00008ef6
    afa0:	00008ef6 	.word	0x00008ef6
    afa4:	00008ef6 	.word	0x00008ef6
    afa8:	00008f04 	.word	0x00008f04
    afac:	00009b0a 	.word	0x00009b0a
    afb0:	00009b0a 	.word	0x00009b0a
    afb4:	00009b0e 	.word	0x00009b0e
    afb8:	00009b0e 	.word	0x00009b0e
    afbc:	00009b16 	.word	0x00009b16
    afc0:	00009b16 	.word	0x00009b16
    afc4:	2d2d2d2d 	.word	0x2d2d2d2d
    afc8:	2d2d2d2d 	.word	0x2d2d2d2d
    afcc:	2d2d2d2d 	.word	0x2d2d2d2d
    afd0:	2d2d2d2d 	.word	0x2d2d2d2d
    afd4:	2d2d2d2d 	.word	0x2d2d2d2d
    afd8:	2d2d2d2d 	.word	0x2d2d2d2d
    afdc:	2d2d2d2d 	.word	0x2d2d2d2d
    afe0:	2d2d2d2d 	.word	0x2d2d2d2d
    afe4:	2d2d2d2d 	.word	0x2d2d2d2d
    afe8:	2d2d2d2d 	.word	0x2d2d2d2d
    afec:	2d2d2d2d 	.word	0x2d2d2d2d
    aff0:	2d2d2d2d 	.word	0x2d2d2d2d
    aff4:	2d2d2d2d 	.word	0x2d2d2d2d
    aff8:	000a0d2d 	.word	0x000a0d2d
    affc:	f9baf0bd 	.word	0xf9baf0bd
    b000:	e1ccabc2 	.word	0xe1ccabc2
    b004:	baa3beca 	.word	0xbaa3beca
    b008:	ebc2fdca 	.word	0xebc2fdca
    b00c:	e2b2dcb9 	.word	0xe2b2dcb9
    b010:	b5cad4ca 	.word	0xb5cad4ca
    b014:	0d20fdc0 	.word	0x0d20fdc0
    b018:	0000000a 	.word	0x0000000a
    b01c:	d9a22020 	.word	0xd9a22020
    b020:	b5b6c020 	.word	0xb5b6c020
    b024:	cbc1c9c6 	.word	0xcbc1c9c6
    b028:	00000ab8 	.word	0x00000ab8
    b02c:	daa22020 	.word	0xdaa22020
    b030:	52415520 	.word	0x52415520
    b034:	65445f54 	.word	0x65445f54
    b038:	b4677562 	.word	0xb4677562
    b03c:	a3dabfae 	.word	0xa3dabfae
    b040:	cca8b2a8 	.word	0xcca8b2a8
    b044:	31cac2d8 	.word	0x31cac2d8
    b048:	30323531 	.word	0x30323531
    b04c:	a3a9a330 	.word	0xa3a9a330
    b050:	b3e4caac 	.word	0xb3e4caac
    b054:	c2fdcaf6 	.word	0xc2fdcaf6
    b058:	ccdcb9eb 	.word	0xccdcb9eb
    b05c:	d0becae1 	.word	0xd0becae1
    b060:	20a2cfc5 	.word	0x20a2cfc5
    b064:	00000a0d 	.word	0x00000a0d
    b068:	2d2d2d2d 	.word	0x2d2d2d2d
    b06c:	2d2d2d2d 	.word	0x2d2d2d2d
    b070:	2d2d2d2d 	.word	0x2d2d2d2d
    b074:	2d2d2d2d 	.word	0x2d2d2d2d
    b078:	2d2d2d2d 	.word	0x2d2d2d2d
    b07c:	2d2d2d2d 	.word	0x2d2d2d2d
    b080:	2d2d2d2d 	.word	0x2d2d2d2d
    b084:	2d2d2d2d 	.word	0x2d2d2d2d
    b088:	2d2d2d2d 	.word	0x2d2d2d2d
    b08c:	2d2d2d2d 	.word	0x2d2d2d2d
    b090:	2d2d2d2d 	.word	0x2d2d2d2d
    b094:	2d2d2d2d 	.word	0x2d2d2d2d
    b098:	2d2d2d2d 	.word	0x2d2d2d2d
    b09c:	00000a0d 	.word	0x00000a0d
    b0a0:	66322e25 	.word	0x66322e25
    b0a4:	0000000a 	.word	0x0000000a

0000b0a8 <GPIO_ARR>:
    b0a8:	400ff000 400ff040 400ff080 400ff0c0     ...@@..@...@...@
    b0b8:	400ff100                                ...@

0000b0bc <PORT_ARR>:
    b0bc:	40049000 4004a000 4004b000 4004c000     ...@...@...@...@
    b0cc:	4004d000 33323130 37363534 42413938     ...@0123456789AB
    b0dc:	46454443 30323032 36313730 00000000     CDEF20200716....
    b0ec:	bea12020 72657355 becae1cc baa3bfa1       ..User........
    b0fc:	f8bdabbd 7355ebc8 c4b57265 6e69616d     ......User..main
    b10c:	b4d62928 2e2ed0d0 000a0d2e              ()..........

0000b118 <UART_ARR>:
    b118:	4006b000 4006c000 0000a478 0000a490     ...@...@x.......
    b128:	0000a490 0000a484 0000a490 0000a490     ................
    b138:	0000a490 0000a490 0000a490 0000a490     ................
    b148:	0000a490 0000a472 0000a490 0000a452     ....r.......R...
    b158:	0000a490 0000a490 0000a47e 0000a702     ........~.......
    b168:	0000a92a 0000a92a 0000a92a 0000a92a     *...*...*...*...
    b178:	0000a92a 0000a92a 0000a92a 0000a92a     *...*...*...*...
    b188:	0000a92a 0000a7fe 0000a888 0000a544     *...........D...
    b198:	0000a92a 0000a608 0000a92a 0000a92a     *.......*...*...
    b1a8:	0000a544 0000a92a 0000a92a 0000a92a     D...*...*...*...
    b1b8:	0000a92a 0000a91a 0000a7cc 0000a818     *...............
    b1c8:	0000a92a 0000a92a 0000a89c 0000a92a     *...*.......*...
    b1d8:	0000a832 0000a92a 0000a92a 0000a702     2...*...*.......
    b1e8:	00676f6c                                log.

0000b1ec <_init>:
_init():
    b1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b1ee:	46c0      	nop			; (mov r8, r8)
    b1f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    b1f2:	bc08      	pop	{r3}
    b1f4:	469e      	mov	lr, r3
    b1f6:	4770      	bx	lr

0000b1f8 <_fini>:
_fini():
    b1f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b1fa:	46c0      	nop			; (mov r8, r8)
    b1fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
    b1fe:	bc08      	pop	{r3}
    b200:	469e      	mov	lr, r3
    b202:	4770      	bx	lr
